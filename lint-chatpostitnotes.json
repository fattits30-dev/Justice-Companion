
> justice-companion@1.0.0 lint
> eslint . --format json src/features/chat/components/ChatPostItNotes.tsx

[{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\automation\\test-env.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\electron\\dev-api-server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\electron\\main.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\electron\\preload.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\electron\\utils\\path-security.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\electron\\utils\\path-security.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\scripts\\apply-audit-migration.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\scripts\\backup-database.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\scripts\\create-test-case-with-evidence.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\scripts\\generate-test-data.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":21,"column":47,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":21,"endColumn":50,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[602,605],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[602,605],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Test Data Generation Script\n *\n * This script populates the Justice Companion database with test data\n * for development and testing purposes.\n *\n * Usage:\n *   npm run dev (in one terminal - starts dev API server on :5555)\n *   tsx scripts/generate-test-data.ts (in another terminal)\n */\n\nconst DEV_API_URL = 'http://localhost:5555/dev-api/ipc';\n\ninterface CreateCaseInput {\n  title: string;\n  caseType: 'employment' | 'housing' | 'family' | 'immigration' | 'criminal' | 'civil' | 'other';\n  description: string;\n  status?: 'active' | 'closed';\n}\n\nasync function callIPC(channel: string, args: any[]) {\n  const response = await fetch(DEV_API_URL, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ channel, args }),\n  });\n\n  if (!response.ok) {\n    throw new Error(`IPC call failed: ${response.statusText}`);\n  }\n\n  const data = await response.json();\n  return data.result; // Extract result from wrapper\n}\n\nasync function createCase(input: CreateCaseInput) {\n  console.log(`Creating case: ${input.title}...`);\n  const result = await callIPC('dev-api:cases:create', [input]);\n  console.log(`‚úì Created case ID: ${result.id}`);\n  return result;\n}\n\nasync function generateTestData() {\n  console.log('üî• JUSTICE COMPANION - Test Data Generation\\n');\n\n  try {\n    // Employment Law Cases\n    await createCase({\n      title: 'Unfair Dismissal - Tech Co.',\n      caseType: 'employment',\n      description: 'Wrongful termination without proper procedure or notice. Employee was dismissed after raising safety concerns.',\n      status: 'active',\n    });\n\n    await createCase({\n      title: 'Discrimination Claim - Retail Store',\n      caseType: 'employment',\n      description: 'Age discrimination in hiring process. Candidate was rejected despite qualifications due to age.',\n      status: 'active',\n    });\n\n    // Housing Law Cases\n    await createCase({\n      title: 'Landlord Deposit Dispute',\n      caseType: 'housing',\n      description: 'Landlord refusing to return deposit despite property being in good condition. No inventory provided.',\n      status: 'active',\n    });\n\n    await createCase({\n      title: 'Tenant Rights - Unsafe Property',\n      caseType: 'housing',\n      description: 'Property has serious damp and mold issues. Landlord refusing to make repairs despite multiple requests.',\n      status: 'active',\n    });\n\n    // Family Law Case\n    await createCase({\n      title: 'Child Custody Arrangement',\n      caseType: 'family',\n      description: 'Establishing fair custody arrangement after separation. Focus on child\\'s best interests.',\n      status: 'active',\n    });\n\n    // Civil Law Case\n    await createCase({\n      title: 'Contract Breach - Freelance Work',\n      caseType: 'civil',\n      description: 'Client refusing to pay for completed work. Contract clearly outlines payment terms.',\n      status: 'active',\n    });\n\n    // Closed Cases (for testing closed status)\n    await createCase({\n      title: 'Resolved Employment Matter',\n      caseType: 'employment',\n      description: 'Successfully negotiated settlement for unpaid wages.',\n      status: 'closed',\n    });\n\n    await createCase({\n      title: 'Completed Housing Case',\n      caseType: 'housing',\n      description: 'Deposit recovered through alternative dispute resolution.',\n      status: 'closed',\n    });\n\n    console.log('\\n‚úÖ Test data generation complete!');\n    console.log('üìä Created 8 test cases (6 active, 2 closed)');\n    console.log('\\nüí° Refresh the app to see the test data');\n\n  } catch (error) {\n    console.error('‚ùå Error generating test data:', error);\n    console.error('\\nüí° Make sure the dev server is running: npm run dev');\n    process.exit(1);\n  }\n}\n\n// Run the script\ngenerateTestData();\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\scripts\\list-backups.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\scripts\\migration-status.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":66,"column":24,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":66,"endColumn":27,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2029,2032],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2029,2032],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":71,"column":28,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":71,"endColumn":31,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2203,2206],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2203,2206],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Migration Status Script\n * Displays the status of all database migrations (applied, pending, rolled back)\n */\n\nimport Database from 'better-sqlite3';\nimport fs from 'fs';\nimport path from 'path';\nimport crypto from 'crypto';\n\n// Initialize database directly (no Electron context)\nconst dbPath = path.join(process.cwd(), 'justice.db');\nconst db = new Database(dbPath);\ndb.pragma('foreign_keys = ON');\n\nconst migrationsDir = path.join(process.cwd(), 'src', 'db', 'migrations');\n\n/**\n * Parse migration file into UP and DOWN sections\n * @deprecated - not currently used but kept for future migration tooling\n */\nfunction _parseMigration(content: string): { up: string; down: string } {\n  const upMatch = content.match(/--\\s*UP\\s*\\n([\\s\\S]*?)(?=--\\s*DOWN|$)/i);\n  const downMatch = content.match(/--\\s*DOWN\\s*\\n([\\s\\S]*?)$/i);\n\n  const up = upMatch ? upMatch[1].trim() : content.trim();\n  const down = downMatch ? downMatch[1].trim() : '';\n\n  return { up, down };\n}\n\n/**\n * Calculate SHA-256 checksum of migration file\n * @deprecated - not currently used but kept for future migration verification\n */\nfunction _calculateChecksum(content: string): string {\n  return crypto.createHash('sha256').update(content).digest('hex');\n}\n\nconsole.log('üìä Migration Status Report\\n');\nconsole.log('='.repeat(80));\n\ntry {\n  // Ensure migrations table exists\n  db.exec(`\n    CREATE TABLE IF NOT EXISTS migrations (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      name TEXT NOT NULL UNIQUE,\n      checksum TEXT NOT NULL,\n      applied_at TEXT NOT NULL DEFAULT (datetime('now')),\n      applied_by TEXT,\n      duration_ms INTEGER,\n      status TEXT NOT NULL DEFAULT 'applied' CHECK(status IN ('applied', 'rolled_back', 'failed'))\n    )\n  `);\n\n  // Get migration files\n  const migrationFiles = fs\n    .readdirSync(migrationsDir)\n    .filter((file) => file.endsWith('.sql'))\n    .sort();\n\n  // Get applied migrations\n  const applied = db\n    .prepare('SELECT * FROM migrations WHERE status = ? ORDER BY applied_at ASC')\n    .all('applied') as any[];\n\n  // Get rolled back migrations\n  const rolledBack = db\n    .prepare('SELECT * FROM migrations WHERE status = ? ORDER BY applied_at DESC')\n    .all('rolled_back') as any[];\n\n  const appliedNames = applied.map((m) => m.name);\n  const pending = migrationFiles.filter((file) => !appliedNames.includes(file));\n\n  const status = { applied, pending, rolledBack };\n\n  // Display applied migrations\n  if (status.applied.length > 0) {\n    console.log('\\n‚úÖ Applied Migrations:');\n    console.log('-'.repeat(80));\n    status.applied.forEach((migration) => {\n      const checksumMatch = '‚úì';\n      const duration = migration.duration_ms ? `${migration.duration_ms}ms` : 'N/A';\n      console.log(`  ${checksumMatch} ${migration.name}`);\n      console.log(`     Applied: ${migration.applied_at}`);\n      console.log(`     Duration: ${duration}`);\n      console.log(`     Checksum: ${migration.checksum.substring(0, 16)}...`);\n    });\n  } else {\n    console.log('\\n‚úÖ Applied Migrations: None');\n  }\n\n  // Display pending migrations\n  if (status.pending.length > 0) {\n    console.log('\\n‚è≥ Pending Migrations:');\n    console.log('-'.repeat(80));\n    status.pending.forEach((migration) => {\n      console.log(`  ‚Ä¢ ${migration}`);\n    });\n  } else {\n    console.log('\\n‚è≥ Pending Migrations: None');\n  }\n\n  // Display rolled back migrations\n  if (status.rolledBack.length > 0) {\n    console.log('\\n‚Ü©Ô∏è  Rolled Back Migrations:');\n    console.log('-'.repeat(80));\n    status.rolledBack.forEach((migration) => {\n      console.log(`  ‚Ä¢ ${migration.name}`);\n      console.log(`     Applied: ${migration.applied_at}`);\n      console.log(`     Rolled back at: (see database for details)`);\n    });\n  } else {\n    console.log('\\n‚Ü©Ô∏è  Rolled Back Migrations: None');\n  }\n\n  console.log('\\n' + '='.repeat(80));\n  console.log(`\\nSummary: ${status.applied.length} applied, ${status.pending.length} pending, ${status.rolledBack.length} rolled back\\n`);\n\n  if (status.pending.length > 0) {\n    console.log('üí° Tip: Run \"npm run db:migrate\" to apply pending migrations');\n  }\n\n  db.close();\n  process.exit(0);\n} catch (error) {\n  console.error('\\n‚ùå Error retrieving migration status:');\n  console.error(error);\n  db.close();\n  process.exit(1);\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\scripts\\rollback-migration.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":57,"column":26,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":57,"endColumn":29,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1863,1866],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1863,1866],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":61,"column":35,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":61,"endColumn":38,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1991,1994],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1991,1994],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":96,"column":39,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":96,"endColumn":42,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3052,3055],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3052,3055],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Rollback Migration Script\n * Rolls back a specific database migration by name\n *\n * Usage: npm run db:migrate:rollback -- <migration-name>\n * Example: npm run db:migrate:rollback -- 003_audit_logs.sql\n */\n\nimport Database from 'better-sqlite3';\nimport fs from 'fs';\nimport path from 'path';\n\n// Initialize database directly (no Electron context)\nconst dbPath = path.join(process.cwd(), 'justice.db');\nconst db = new Database(dbPath);\ndb.pragma('foreign_keys = ON');\n\nconst migrationsDir = path.join(process.cwd(), 'src', 'db', 'migrations');\n\n/**\n * Parse migration file into UP and DOWN sections\n */\nfunction parseMigration(content: string): { up: string; down: string } {\n  const upMatch = content.match(/--\\s*UP\\s*\\n([\\s\\S]*?)(?=--\\s*DOWN|$)/i);\n  const downMatch = content.match(/--\\s*DOWN\\s*\\n([\\s\\S]*?)$/i);\n\n  const up = upMatch ? upMatch[1].trim() : content.trim();\n  const down = downMatch ? downMatch[1].trim() : '';\n\n  return { up, down };\n}\n\n// Get migration name from command line arguments\nconst migrationName = process.argv[2];\n\nif (!migrationName) {\n  console.error('‚ùå Error: Migration name is required\\n');\n  console.log('Usage: npm run db:migrate:rollback -- <migration-name>');\n  console.log('Example: npm run db:migrate:rollback -- 003_audit_logs.sql\\n');\n\n  // Display available migrations\n  try {\n    db.exec(`\n      CREATE TABLE IF NOT EXISTS migrations (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        name TEXT NOT NULL UNIQUE,\n        checksum TEXT NOT NULL,\n        applied_at TEXT NOT NULL DEFAULT (datetime('now')),\n        applied_by TEXT,\n        duration_ms INTEGER,\n        status TEXT NOT NULL DEFAULT 'applied' CHECK(status IN ('applied', 'rolled_back', 'failed'))\n      )\n    `);\n\n    const applied = db\n      .prepare('SELECT * FROM migrations WHERE status = ? ORDER BY applied_at ASC')\n      .all('applied') as any[];\n\n    if (applied.length > 0) {\n      console.log('Available migrations to rollback:');\n      applied.forEach((migration: any) => {\n        console.log(`  ‚Ä¢ ${migration.name}`);\n      });\n    } else {\n      console.log('No applied migrations available to rollback.');\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  db.close();\n  process.exit(1);\n}\n\nconsole.log(`üîÑ Rolling back migration: ${migrationName}\\n`);\nconsole.log('‚ö†Ô∏è  WARNING: This will execute the DOWN section of the migration');\nconsole.log('‚ö†Ô∏è  WARNING: A backup will be created automatically before rollback\\n');\n\ntry {\n  // Ensure migrations table exists\n  db.exec(`\n    CREATE TABLE IF NOT EXISTS migrations (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      name TEXT NOT NULL UNIQUE,\n      checksum TEXT NOT NULL,\n      applied_at TEXT NOT NULL DEFAULT (datetime('now')),\n      applied_by TEXT,\n      duration_ms INTEGER,\n      status TEXT NOT NULL DEFAULT 'applied' CHECK(status IN ('applied', 'rolled_back', 'failed'))\n    )\n  `);\n\n  // Check if migration is applied\n  const migration = db\n    .prepare('SELECT * FROM migrations WHERE name = ? AND status = ?')\n    .get(migrationName, 'applied') as any;\n\n  if (!migration) {\n    throw new Error(`Migration ${migrationName} is not applied or already rolled back`);\n  }\n\n  const migrationPath = path.join(migrationsDir, migrationName);\n\n  if (!fs.existsSync(migrationPath)) {\n    throw new Error(`Migration file not found: ${migrationPath}`);\n  }\n\n  const migrationContent = fs.readFileSync(migrationPath, 'utf8');\n  const { down } = parseMigration(migrationContent);\n\n  if (!down || down.length === 0) {\n    throw new Error(`Migration ${migrationName} has no DOWN section - cannot rollback`);\n  }\n\n  // Create backup before rollback\n  console.log('üì¶ Creating backup before rollback...');\n  const backupsDir = path.join(process.cwd(), 'backups');\n  if (!fs.existsSync(backupsDir)) {\n    fs.mkdirSync(backupsDir, { recursive: true });\n  }\n  const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n  const backupPath = path.join(backupsDir, `pre_rollback_${timestamp}.db`);\n  fs.copyFileSync(dbPath, backupPath);\n  console.log(`‚úÖ Backup created: ${backupPath}\\n`);\n\n  console.log('üîÑ Executing rollback...');\n  const startTime = Date.now();\n\n  // Execute rollback in a transaction\n  const rollback = db.transaction(() => {\n    db.exec(down);\n\n    db.prepare(`\n      UPDATE migrations\n      SET status = 'rolled_back'\n      WHERE name = ?\n    `).run(migrationName);\n  });\n\n  rollback();\n\n  const duration = Date.now() - startTime;\n\n  console.log(`\\n‚úÖ Migration rolled back successfully: ${migrationName} (${duration}ms)`);\n  console.log('\\nüí° Tip: Run \"npm run db:migrate:status\" to verify migration status');\n\n  db.close();\n  process.exit(0);\n} catch (error) {\n  console.error(`\\n‚ùå Rollback failed: ${migrationName}`);\n  console.error(error);\n  db.close();\n  process.exit(1);\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\scripts\\verify-case-16.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":53,"column":24,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":53,"endColumn":27,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1671,1674],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1671,1674],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":69,"column":26,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":69,"endColumn":29,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2256,2259],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2256,2259],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Verify Case #16 Exists\n *\n * Diagnostic script to check if the test case exists and verify the\n * case loading logic that the sidebar uses.\n *\n * Usage: node --loader ts-node/esm scripts/verify-case-16.ts\n */\n\nimport Database from 'better-sqlite3';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\nimport { dirname } from 'path';\n\n// Get database path\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\nconst dbPath = path.join(\n  process.env.APPDATA || 'C:\\\\Users\\\\sava6\\\\AppData\\\\Roaming',\n  'justice-companion',\n  'justice-companion.db'\n);\n\nconsole.log(`üìÇ Database: ${dbPath}\\n`);\n\nconst db = new Database(dbPath);\n\n// 1. Check if Case #16 exists\nconsole.log('üîç Checking for Case #16...');\nconst case16 = db.prepare('SELECT * FROM cases WHERE id = ?').get(16);\n\nif (!case16) {\n  console.log('‚ùå Case #16 NOT FOUND in database\\n');\n  console.log('üí° Run this to create it:');\n  console.log('   node --loader ts-node/esm scripts/create-test-case-with-evidence.ts\\n');\n} else {\n  console.log('‚úÖ Case #16 EXISTS');\n  console.log(`   Title: ${case16.title}`);\n  console.log(`   Type: ${case16.case_type}`);\n  console.log(`   Status: ${case16.status}`);\n  console.log(`   Created: ${case16.created_at}\\n`);\n}\n\n// 2. List ALL cases (simulate what sidebar does)\nconsole.log('üìã All cases in database (what sidebar should show):');\nconst allCases = db.prepare('SELECT id, title, case_type, status, created_at FROM cases ORDER BY created_at DESC').all();\n\nif (allCases.length === 0) {\n  console.log('   ‚ö†Ô∏è  No cases found!\\n');\n} else {\n  console.log(`   Found ${allCases.length} case(s):\\n`);\n  allCases.forEach((c: any) => {\n    console.log(`   ‚Ä¢ Case #${c.id}: ${c.title}`);\n    console.log(`     Type: ${c.case_type} | Status: ${c.status}`);\n    console.log(`     Created: ${c.created_at}\\n`);\n  });\n}\n\n// 3. Check evidence for Case #16\nif (case16) {\n  console.log('üìÑ Evidence for Case #16:');\n  const evidence = db.prepare('SELECT id, title, evidence_type FROM evidence WHERE case_id = ?').all(16);\n\n  if (evidence.length === 0) {\n    console.log('   ‚ö†Ô∏è  No evidence found for this case\\n');\n  } else {\n    console.log(`   Found ${evidence.length} evidence item(s):\\n`);\n    evidence.forEach((e: any) => {\n      console.log(`   ‚Ä¢ Evidence #${e.id}: ${e.title}`);\n      console.log(`     Type: ${e.evidence_type}\\n`);\n    });\n  }\n}\n\ndb.close();\n\nconsole.log('‚úÖ Diagnostic complete');\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\App.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":16,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":16,"endColumn":13},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":16,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":16,"endColumn":13},{"ruleId":"@typescript-eslint/require-await","severity":1,"message":"Async arrow function 'handleConversationLoad' has no 'await' expression.","line":23,"column":81,"nodeType":"ArrowFunctionExpression","messageId":"missingAwait","endLine":23,"endColumn":83,"suggestions":[{"messageId":"removeAsync","fix":{"range":[1176,1222],"text":"(_conversationId: number): void"},"desc":"Remove 'async'."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":48,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":48,"endColumn":27}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport { ChatWindow } from '@/features/chat';\nimport { CasesView, CaseDetailView } from '@/features/cases';\nimport { DocumentsView } from '@/features/documents';\nimport { Sidebar } from './components/Sidebar';\nimport { DashboardView } from '@/features/dashboard';\nimport { SettingsView } from '@/features/settings';\nimport { DebugProvider } from './contexts/DebugContext';\nimport { ErrorBoundary } from './components/ErrorBoundary';\nimport { ViewErrorBoundary } from './components/ViewErrorBoundary';\nimport { ThemeProvider } from './components/ThemeProvider';\nimport { Toaster } from './components/ui/sonner';\n\ntype ViewType = 'dashboard' | 'chat' | 'cases' | 'case-detail' | 'documents' | 'settings';\n\nfunction App() {\n  const [activeView, setActiveView] = useState<ViewType>('dashboard');\n  const [sidebarExpanded, setSidebarExpanded] = useState(false);\n  const [activeCaseId, setActiveCaseId] = useState<number | null>(null);\n  const [selectedCaseForDetail, setSelectedCaseForDetail] = useState<number | null>(null);\n\n  // Dummy conversation load handler (ChatWindow will handle its own state)\n  const handleConversationLoad = async (_conversationId: number): Promise<void> => {\n    // Switch to chat view when loading a conversation\n    setActiveView('chat');\n  };\n\n  // Global keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent): void => {\n      // Toggle sidebar with Ctrl+B\n      if (e.ctrlKey && e.key === 'b') {\n        e.preventDefault();\n        setSidebarExpanded(prev => !prev);\n      }\n      // Escape to minimize sidebar\n      if (e.key === 'Escape' && sidebarExpanded) {\n        e.preventDefault();\n        setSidebarExpanded(false);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [sidebarExpanded]);\n\n  // Render the appropriate view wrapped in ViewErrorBoundary\n  const renderView = () => {\n    switch (activeView) {\n      case 'dashboard':\n        return (\n          <ViewErrorBoundary viewName=\"Dashboard\" onNavigateToDashboard={() => setActiveView('dashboard')}>\n            <DashboardView onViewChange={setActiveView} />\n          </ViewErrorBoundary>\n        );\n      case 'chat':\n        return (\n          <ViewErrorBoundary viewName=\"Chat\" onNavigateToDashboard={() => setActiveView('dashboard')}>\n            <ChatWindow sidebarExpanded={sidebarExpanded} caseId={activeCaseId} />\n          </ViewErrorBoundary>\n        );\n      case 'cases':\n        return (\n          <ViewErrorBoundary viewName=\"Cases\" onNavigateToDashboard={() => setActiveView('dashboard')}>\n            <CasesView\n              onCaseSelect={(caseId) => {\n                setSelectedCaseForDetail(caseId);\n                setActiveView('case-detail');\n              }}\n            />\n          </ViewErrorBoundary>\n        );\n      case 'case-detail':\n        return selectedCaseForDetail ? (\n          <ViewErrorBoundary viewName=\"Case Detail\" onNavigateToDashboard={() => setActiveView('dashboard')}>\n            <CaseDetailView\n              caseId={selectedCaseForDetail}\n              onBack={() => {\n                setActiveView('cases');\n                setSelectedCaseForDetail(null);\n              }}\n            />\n          </ViewErrorBoundary>\n        ) : (\n          <ViewErrorBoundary viewName=\"Cases\" onNavigateToDashboard={() => setActiveView('dashboard')}>\n            <CasesView\n              onCaseSelect={(caseId) => {\n                setSelectedCaseForDetail(caseId);\n                setActiveView('case-detail');\n              }}\n            />\n          </ViewErrorBoundary>\n        );\n      case 'documents':\n        return (\n          <ViewErrorBoundary viewName=\"Documents\" onNavigateToDashboard={() => setActiveView('dashboard')}>\n            <DocumentsView />\n          </ViewErrorBoundary>\n        );\n      case 'settings':\n        return (\n          <ViewErrorBoundary viewName=\"Settings\" onNavigateToDashboard={() => setActiveView('dashboard')}>\n            <SettingsView />\n          </ViewErrorBoundary>\n        );\n      default:\n        return (\n          <ViewErrorBoundary viewName=\"Dashboard\" onNavigateToDashboard={() => setActiveView('dashboard')}>\n            <DashboardView onViewChange={setActiveView} />\n          </ViewErrorBoundary>\n        );\n    }\n  };\n\n  return (\n    <ThemeProvider attribute=\"class\" defaultTheme=\"dark\" enableSystem>\n      <ErrorBoundary>\n        <DebugProvider>\n          <div className=\"flex h-screen bg-gradient-to-br from-slate-950 via-blue-950 to-slate-950\">\n            {/* Sidebar */}\n            <Sidebar\n              isExpanded={sidebarExpanded}\n              onToggle={() => setSidebarExpanded(!sidebarExpanded)}\n              onConversationLoad={handleConversationLoad}\n              activeView={activeView}\n              onViewChange={(view) => {\n                setActiveView(view);\n                setSidebarExpanded(false); // Minimize sidebar after navigation\n              }}\n              activeCaseId={activeCaseId}\n              onActiveCaseIdChange={setActiveCaseId}\n            />\n\n            {/* Main Content Area */}\n            <div className={`flex-1 flex flex-col overflow-hidden transition-all duration-300 ${sidebarExpanded ? 'ml-80' : 'ml-16'}`}>\n              {/* Top bar - no menu button, just title */}\n              <div className=\"h-14 bg-slate-900/50 border-b border-blue-800/30 flex items-center px-4 gap-3\">\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-blue-300 font-medium capitalize\">{activeView}</span>\n                </div>\n              </div>\n\n              {/* View Content */}\n              <div className=\"flex-1 overflow-hidden\">\n                {renderView()}\n              </div>\n            </div>\n          </div>\n          {/* Global Toast Notifications */}\n          <Toaster />\n        </DebugProvider>\n      </ErrorBoundary>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\ConfirmDialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\DisclaimerBanner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\ErrorBoundary.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\ErrorBoundary.tsx","messages":[{"ruleId":"@typescript-eslint/prefer-optional-chain","severity":1,"message":"Prefer using an optional chain expression instead, as it's more concise and easier to read.","line":69,"column":44,"nodeType":null,"messageId":"preferOptionalChain","endLine":69,"endColumn":93,"suggestions":[{"fix":{"range":[1917,1966],"text":"window.justiceAPI?.logUIError"},"messageId":"optionalChainSuggest","desc":"Change to an optional chain."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":72,"column":34,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":72,"endColumn":36,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2093,2095],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":73,"column":52,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":73,"endColumn":54,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2175,2177],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":141,"column":46,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":141,"endColumn":48,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[4564,4566],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * ErrorBoundary Component\n *\n * Catches React errors and prevents app crashes.\n * Displays user-friendly error UI with recovery options.\n * Logs all errors to ErrorLogger for analysis.\n *\n * Wraps the entire App component to catch all React errors.\n */\n\nimport { Component, ErrorInfo, ReactNode } from 'react';\n// errorLogger removed - uses fs which doesn't work in renderer process\n\ninterface ErrorBoundaryProps {\n  children: ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n}\n\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): Partial<ErrorBoundaryState> {\n    // Update state so the next render will show the fallback UI\n    return {\n      hasError: true,\n      error,\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    // Log to console for immediate visibility\n    console.error('[ErrorBoundary] Caught error:', error);\n    console.error('[ErrorBoundary] Component stack:', errorInfo.componentStack);\n    console.error('[ErrorBoundary] Error details:', {\n      component: 'ErrorBoundary',\n      componentStack: errorInfo.componentStack,\n      errorMessage: error.message,\n      errorStack: error.stack,\n    });\n\n    // Send to main process via IPC for persistent logging\n    this.logErrorToMainProcess(error, errorInfo);\n\n    // Update state with error details\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  /**\n   * Log error to main process via IPC for audit logging\n   */\n  private logErrorToMainProcess(error: Error, errorInfo: ErrorInfo): void {\n    try {\n      // Check if justiceAPI is available\n      if (typeof window !== 'undefined' && window.justiceAPI && window.justiceAPI.logUIError) {\n        window.justiceAPI.logUIError({\n          error: error.message || 'Unknown error',\n          errorInfo: error.stack || 'No stack trace available',\n          componentStack: errorInfo.componentStack || 'No component stack available',\n          timestamp: new Date().toISOString(),\n          url: window.location.href,\n          userAgent: navigator.userAgent,\n        }).catch((logError) => {\n          // Silently fail if logging fails - we don't want to crash from logging\n          console.error('[ErrorBoundary] Failed to log error to main process:', logError);\n        });\n      } else {\n        console.warn('[ErrorBoundary] justiceAPI.logUIError not available');\n      }\n    } catch (logError) {\n      // Silently fail if logging fails\n      console.error('[ErrorBoundary] Exception while logging error:', logError);\n    }\n  }\n\n  handleReload = (): void => {\n    // Clear error state and reload the page\n    window.location.reload();\n  };\n\n  handleReset = (): void => {\n    // Clear error state and try to continue\n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null,\n    });\n  };\n\n  render(): ReactNode {\n    if (this.state.hasError) {\n      return (\n        <div className=\"flex min-h-screen flex-col items-center justify-center bg-red-50 px-4\">\n          <div\n            className=\"w-full max-w-2xl rounded-lg bg-white p-8 shadow-lg\"\n            role=\"alert\"\n            aria-live=\"assertive\"\n            aria-atomic=\"true\"\n          >\n            {/* Error Icon */}\n            <div className=\"mb-6 flex items-center gap-3\">\n              <svg\n                className=\"h-12 w-12 text-red-600\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n                />\n              </svg>\n              <h1 className=\"text-3xl font-bold text-gray-900\">\n                Something went wrong\n              </h1>\n            </div>\n\n            {/* Error Message */}\n            <div className=\"mb-6\">\n              <h2 className=\"mb-2 text-lg font-semibold text-gray-800\">\n                Error Details:\n              </h2>\n              <div className=\"rounded-md bg-red-100 p-4\">\n                <p className=\"font-mono text-sm text-red-800\">\n                  {this.state.error?.message || 'An unexpected error occurred'}\n                </p>\n              </div>\n            </div>\n\n            {/* Component Stack (Development Only) */}\n            {process.env.NODE_ENV === 'development' && this.state.errorInfo && (\n              <details className=\"mb-6\">\n                <summary className=\"cursor-pointer text-sm font-semibold text-gray-700 hover:text-gray-900\">\n                  Component Stack (Dev Only)\n                </summary>\n                <pre className=\"mt-2 overflow-auto rounded-md bg-gray-100 p-4 text-xs text-gray-800\">\n                  {this.state.errorInfo.componentStack}\n                </pre>\n              </details>\n            )}\n\n            {/* Error Stack (Development Only) */}\n            {process.env.NODE_ENV === 'development' && this.state.error?.stack && (\n              <details className=\"mb-6\">\n                <summary className=\"cursor-pointer text-sm font-semibold text-gray-700 hover:text-gray-900\">\n                  Error Stack (Dev Only)\n                </summary>\n                <pre className=\"mt-2 overflow-auto rounded-md bg-gray-100 p-4 text-xs text-gray-800\">\n                  {this.state.error.stack}\n                </pre>\n              </details>\n            )}\n\n            {/* Recovery Actions */}\n            <div className=\"flex gap-4\">\n              <button\n                onClick={this.handleReload}\n                className=\"flex-1 rounded-lg bg-blue-600 px-6 py-3 font-semibold text-white transition-colors hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n              >\n                Reload Application\n              </button>\n              <button\n                onClick={this.handleReset}\n                className=\"flex-1 rounded-lg border-2 border-gray-300 bg-white px-6 py-3 font-semibold text-gray-700 transition-colors hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\n              >\n                Try to Continue\n              </button>\n            </div>\n\n            {/* Help Text */}\n            <p className=\"mt-6 text-center text-sm text-gray-600\">\n              If this problem persists, please check the error logs at{' '}\n              <code className=\"rounded bg-gray-100 px-2 py-1 font-mono text-xs\">\n                logs/errors.log\n              </code>\n            </p>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\ErrorDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\ErrorTestButton.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":17,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":17,"endColumn":32},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":17,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":17,"endColumn":32}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * ErrorTestButton Component\n *\n * Test component for verifying error boundaries.\n * Throws an error when clicked to trigger error boundary.\n *\n * DEVELOPMENT ONLY - Remove before production!\n */\n\nimport { useState } from 'react';\n\ninterface ErrorTestButtonProps {\n  buttonText?: string;\n  errorMessage?: string;\n}\n\nexport function ErrorTestButton({\n  buttonText = 'Throw Error',\n  errorMessage = 'Test error triggered by ErrorTestButton',\n}: ErrorTestButtonProps) {\n  const [shouldThrow, setShouldThrow] = useState(false);\n\n  if (shouldThrow) {\n    throw new Error(errorMessage);\n  }\n\n  return (\n    <button\n      onClick={() => setShouldThrow(true)}\n      className=\"rounded-lg bg-red-600 px-4 py-2 font-semibold text-white transition-colors hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2\"\n      aria-label=\"Test error boundary by throwing an error\"\n    >\n      {buttonText}\n    </button>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\PostItNote.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\PostItNote.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":40,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":40,"endColumn":27},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":40,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":40,"endColumn":27},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":64,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":64,"endColumn":27},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":71,"column":50,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":71,"endColumn":52},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":119,"column":17,"nodeType":"CallExpression","messageId":"unexpected","endLine":119,"endColumn":52}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useRef, useEffect } from 'react';\n\nexport interface PostItNoteProps {\n  id: number;\n  content: string;\n  color?: 'yellow' | 'blue' | 'green' | 'pink' | 'purple';\n  onUpdate?: (id: number, content: string) => void;\n  onDelete?: (id: number) => void;\n  readOnly?: boolean;\n}\n\nconst colorStyles = {\n  yellow: {\n    background: 'linear-gradient(135deg, #fff9c4 0%, #fff59d 100%)',\n    border: '#f9a825',\n    shadow: 'rgba(249, 168, 37, 0.3)',\n  },\n  blue: {\n    background: 'linear-gradient(135deg, #bbdefb 0%, #90caf9 100%)',\n    border: '#1976d2',\n    shadow: 'rgba(25, 118, 210, 0.3)',\n  },\n  green: {\n    background: 'linear-gradient(135deg, #c8e6c9 0%, #a5d6a7 100%)',\n    border: '#388e3c',\n    shadow: 'rgba(56, 142, 60, 0.3)',\n  },\n  pink: {\n    background: 'linear-gradient(135deg, #f8bbd0 0%, #f48fb1 100%)',\n    border: '#c2185b',\n    shadow: 'rgba(194, 24, 91, 0.3)',\n  },\n  purple: {\n    background: 'linear-gradient(135deg, #e1bee7 0%, #ce93d8 100%)',\n    border: '#7b1fa2',\n    shadow: 'rgba(123, 31, 162, 0.3)',\n  },\n};\n\nexport function PostItNote({\n  id,\n  content,\n  color = 'yellow',\n  onUpdate,\n  onDelete,\n  readOnly = false,\n}: PostItNoteProps) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedContent, setEditedContent] = useState(content);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const style = colorStyles[color];\n\n  useEffect(() => {\n    setEditedContent(content);\n  }, [content]);\n\n  useEffect(() => {\n    if (isEditing && textareaRef.current) {\n      textareaRef.current.focus();\n      textareaRef.current.select();\n    }\n  }, [isEditing]);\n\n  const handleBlur = () => {\n    setIsEditing(false);\n    if (editedContent.trim() !== content && onUpdate) {\n      onUpdate(id, editedContent.trim());\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      setEditedContent(content);\n      setIsEditing(false);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        position: 'relative',\n        width: '200px',\n        minHeight: '200px',\n        background: style.background,\n        border: `2px solid ${style.border}`,\n        borderRadius: '4px',\n        boxShadow: `4px 4px 12px ${style.shadow}`,\n        padding: '16px',\n        fontFamily: \"'Segoe Print', 'Comic Sans MS', cursive\",\n        fontSize: '14px',\n        color: '#333',\n        cursor: readOnly ? 'default' : 'pointer',\n        transition: 'transform 0.2s ease, box-shadow 0.2s ease',\n        transform: isEditing ? 'scale(1.02)' : 'scale(1)',\n      }}\n      onClick={() => {\n        if (!readOnly && !isEditing) {\n          setIsEditing(true);\n        }\n      }}\n      onMouseEnter={(e) => {\n        if (!isEditing) {\n          e.currentTarget.style.transform = 'scale(1.02) rotate(-1deg)';\n          e.currentTarget.style.boxShadow = `6px 6px 16px ${style.shadow}`;\n        }\n      }}\n      onMouseLeave={(e) => {\n        if (!isEditing) {\n          e.currentTarget.style.transform = 'scale(1)';\n          e.currentTarget.style.boxShadow = `4px 4px 12px ${style.shadow}`;\n        }\n      }}\n    >\n      {/* Delete button */}\n      {!readOnly && onDelete && (\n        <button\n          onClick={(e) => {\n            e.stopPropagation();\n            if (window.confirm('Delete this note?')) {\n              onDelete(id);\n            }\n          }}\n          style={{\n            position: 'absolute',\n            top: '8px',\n            right: '8px',\n            width: '24px',\n            height: '24px',\n            borderRadius: '50%',\n            border: `1px solid ${style.border}`,\n            background: 'rgba(255, 255, 255, 0.7)',\n            color: '#d32f2f',\n            fontSize: '16px',\n            fontWeight: 'bold',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            transition: 'all 0.2s ease',\n            padding: 0,\n          }}\n          onMouseEnter={(e) => {\n            e.currentTarget.style.background = '#d32f2f';\n            e.currentTarget.style.color = 'white';\n            e.currentTarget.style.transform = 'scale(1.1)';\n          }}\n          onMouseLeave={(e) => {\n            e.currentTarget.style.background = 'rgba(255, 255, 255, 0.7)';\n            e.currentTarget.style.color = '#d32f2f';\n            e.currentTarget.style.transform = 'scale(1)';\n          }}\n        >\n          √ó\n        </button>\n      )}\n\n      {/* Content */}\n      {isEditing ? (\n        <textarea\n          ref={textareaRef}\n          value={editedContent}\n          onChange={(e) => setEditedContent(e.target.value)}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          style={{\n            width: '100%',\n            minHeight: '168px',\n            border: 'none',\n            background: 'transparent',\n            fontFamily: 'inherit',\n            fontSize: 'inherit',\n            color: 'inherit',\n            resize: 'vertical',\n            outline: 'none',\n          }}\n          placeholder=\"Click to add content...\"\n        />\n      ) : (\n        <div\n          style={{\n            whiteSpace: 'pre-wrap',\n            wordBreak: 'break-word',\n            minHeight: '168px',\n          }}\n        >\n          {content || 'Click to add content...'}\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\Sidebar.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":35,"column":38,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":35,"endColumn":40},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":61,"column":58,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":61,"endColumn":60},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":77,"column":61,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":77,"endColumn":63},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":82,"column":34,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":82,"endColumn":36},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":102,"column":61,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":102,"endColumn":63},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":107,"column":34,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":107,"endColumn":36},{"ruleId":"@typescript-eslint/require-await","severity":1,"message":"Async arrow function 'handleRenameConversation' has no 'await' expression.","line":130,"column":85,"nodeType":"ArrowFunctionExpression","messageId":"missingAwait","endLine":130,"endColumn":87,"suggestions":[{"messageId":"removeAsync","fix":{"range":[4505,4511],"text":""},"desc":"Remove 'async'."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":130,"column":85,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":130,"endColumn":87},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":136,"column":7,"nodeType":"MemberExpression","messageId":"limited","endLine":136,"endColumn":18,"suggestions":[{"fix":{"range":[4646,4716],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":148,"column":30,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":148,"endColumn":32},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":249,"column":63,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":249,"endColumn":65,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[9299,9301],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":257,"column":84,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":257,"endColumn":86,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[9752,9754],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":258,"column":76,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":258,"endColumn":78,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[9844,9846],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport { LayoutDashboard, MessageSquare, Briefcase, FileText, Settings, Menu, ChevronLeft } from 'lucide-react';\nimport SidebarCaseContext from '../features/chat/components/SidebarCaseContext';\nimport { ConfirmDialog } from './ConfirmDialog';\nimport type { ChatConversation } from '../models/ChatConversation';\nimport type { UserProfile } from '../models/UserProfile';\n\ninterface SidebarProps {\n  isExpanded: boolean;\n  onToggle: () => void;\n  onConversationLoad: (conversationId: number) => Promise<void>;\n  activeView: 'dashboard' | 'chat' | 'cases' | 'case-detail' | 'documents' | 'settings';\n  onViewChange: (view: 'dashboard' | 'chat' | 'cases' | 'case-detail' | 'documents' | 'settings') => void;\n  activeCaseId: number | null;\n  onActiveCaseIdChange: (caseId: number | null) => void;\n}\n\nconst navigationItems = [\n  { id: 'dashboard' as const, label: 'Dashboard', icon: LayoutDashboard },\n  { id: 'chat' as const, label: 'Chat', icon: MessageSquare },\n  { id: 'cases' as const, label: 'Cases', icon: Briefcase },\n  { id: 'documents' as const, label: 'Documents', icon: FileText },\n  { id: 'settings' as const, label: 'Settings', icon: Settings },\n];\n\nexport function Sidebar({ isExpanded, onToggle, onConversationLoad, activeView, onViewChange, activeCaseId, onActiveCaseIdChange }: SidebarProps): JSX.Element {\n  const [activeConversationId, setActiveConversationId] = useState<number | null>(null);\n  const [recentChats, setRecentChats] = useState<ChatConversation[]>([]);\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\n  const [conversationToDelete, setConversationToDelete] = useState<number | null>(null);\n\n  // Data loading when expanded\n  useEffect(() => {\n    const loadInitialData = async () => {\n      if (!window.justiceAPI) {\n        console.error('window.justiceAPI is not available');\n        return;\n      }\n\n      try {\n        const profileResult = await window.justiceAPI.getUserProfile();\n        if (profileResult.success) {\n          setUserProfile(profileResult.data);\n        }\n\n        const conversationsResult = await window.justiceAPI.getRecentConversations(null, 10);\n        if (conversationsResult.success) {\n          setRecentChats(conversationsResult.data);\n        }\n      } catch (error) {\n        console.error('Failed to load sidebar data:', error);\n      }\n    };\n\n    if (isExpanded) {\n      void loadInitialData();\n    }\n  }, [isExpanded]);\n\n  const handleCaseChange = async (caseId: number | null) => {\n    onActiveCaseIdChange(caseId);\n    if (!window.justiceAPI) {\n      return;\n    }\n\n    try {\n      const result = await window.justiceAPI.getRecentConversations(caseId, 10);\n      if (result.success) {\n        setRecentChats(result.data);\n      }\n    } catch (error) {\n      console.error('Failed to load conversations for case:', caseId, error);\n    }\n  };\n\n  const handleConversationSelect = (conversationId: number) => {\n    setActiveConversationId(conversationId);\n    void onConversationLoad(conversationId);\n  };\n\n  const handleNewChat = async () => {\n    if (!window.justiceAPI) {\n      return;\n    }\n\n    try {\n      const result = await window.justiceAPI.createConversation({\n        caseId: activeCaseId,\n        title: `New Chat - ${new Date().toLocaleString()}`,\n      });\n\n      if (result.success) {\n        setRecentChats(prev => [result.data, ...prev]);\n        setActiveConversationId(result.data.id);\n      }\n    } catch (error) {\n      console.error('Failed to create new chat:', error);\n    }\n  };\n\n  const handleDeleteConversation = (conversationId: number) => {\n    setConversationToDelete(conversationId);\n    setDeleteConfirmOpen(true);\n  };\n\n  const confirmDelete = async () => {\n    if (!window.justiceAPI || conversationToDelete === null) {\n      setDeleteConfirmOpen(false);\n      setConversationToDelete(null);\n      return;\n    }\n\n    try {\n      const result = await window.justiceAPI.deleteConversation(conversationToDelete);\n      if (result.success) {\n        setRecentChats(prev => prev.filter(chat => chat.id !== conversationToDelete));\n        if (activeConversationId === conversationToDelete) {\n          setActiveConversationId(null);\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting conversation:', error);\n    } finally {\n      setDeleteConfirmOpen(false);\n      setConversationToDelete(null);\n    }\n  };\n\n  const handleRenameConversation = async (conversationId: number, newTitle: string) => {\n    if (!window.justiceAPI || !newTitle.trim()) {\n      return;\n    }\n\n    try {\n      console.log(`Rename conversation ${conversationId} to \"${newTitle}\"`);\n      setRecentChats(prev =>\n        prev.map(chat =>\n          chat.id === conversationId ? { ...chat, title: newTitle } : chat,\n        ),\n      );\n    } catch (error) {\n      console.error('Error renaming conversation:', error);\n    }\n  };\n\n  // Get user initials\n  const getUserInitials = () => {\n    if (!userProfile?.name) {\n      return 'U';\n    }\n    return userProfile.name\n      .split(' ')\n      .map(n => n[0])\n      .join('')\n      .toUpperCase()\n      .slice(0, 2);\n  };\n\n  return (\n    <>\n      {/* Sidebar - always visible, width changes based on isExpanded */}\n      <div className={`fixed inset-y-0 left-0 bg-gradient-to-b from-slate-900 via-blue-950 to-slate-900 border-r border-blue-800/30 flex flex-col z-50 shadow-2xl transition-all duration-300 ${\n        isExpanded ? 'w-80' : 'w-16'\n      }`}>\n        {/* Logo - always visible at top */}\n        <div className=\"p-3 border-b border-blue-800/30 bg-slate-900/50 flex items-center justify-center\">\n          {isExpanded ? (\n            <div className=\"flex items-center space-x-3 w-full\">\n              <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-lg flex items-center justify-center shadow-lg ring-2 ring-blue-400/20\">\n                <span className=\"text-white font-bold text-base\">‚öñÔ∏è</span>\n              </div>\n              <div className=\"flex-1\">\n                <h1 className=\"text-base font-bold text-white tracking-tight\">Justice Companion</h1>\n                <p className=\"text-xs text-blue-300\">Here to help</p>\n              </div>\n            </div>\n          ) : (\n            <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-lg flex items-center justify-center shadow-lg ring-2 ring-blue-400/20\">\n              <span className=\"text-white font-bold text-base\">‚öñÔ∏è</span>\n            </div>\n          )}\n        </div>\n\n        {/* Navigation */}\n        <nav className=\"flex-1 p-2 overflow-y-auto\">\n          {/* Toggle Button - First Item */}\n          <button\n            onClick={onToggle}\n            className=\"w-full flex items-center gap-3 py-3 px-3 rounded-lg transition-all mb-2 text-blue-100 hover:bg-blue-800/30 border-b border-blue-800/20 pb-3\"\n            title={isExpanded ? 'Minimize sidebar' : 'Expand sidebar'}\n          >\n            {isExpanded ? (\n              <>\n                <ChevronLeft size={20} className=\"flex-shrink-0\" />\n                <span className=\"font-medium\">Minimize</span>\n              </>\n            ) : (\n              <Menu size={20} className=\"flex-shrink-0\" />\n            )}\n          </button>\n\n          {/* Navigation Items */}\n          {navigationItems.map((item) => {\n            const Icon = item.icon;\n            const isActive = activeView === item.id;\n\n            return (\n              <button\n                key={item.id}\n                onClick={() => onViewChange(item.id)}\n                className={`w-full flex items-center gap-3 py-3 px-3 rounded-lg transition-all mb-1 ${\n                  isActive\n                    ? 'bg-blue-600/20 text-blue-300 shadow-lg'\n                    : 'text-blue-100 hover:bg-blue-800/30'\n                }`}\n                title={isExpanded ? undefined : item.label}\n              >\n                <Icon size={20} className=\"flex-shrink-0\" />\n                {isExpanded && <span className=\"font-medium\">{item.label}</span>}\n              </button>\n            );\n          })}\n\n          {/* Case Context - only when expanded */}\n          {isExpanded && (\n            <div className=\"mt-2\">\n              <SidebarCaseContext\n                activeCaseId={activeCaseId}\n                activeConversationId={activeConversationId}\n                recentChats={recentChats}\n                onCaseChange={(caseId) => void handleCaseChange(caseId)}\n                onConversationSelect={handleConversationSelect}\n                onNewChat={() => void handleNewChat()}\n                onDeleteConversation={handleDeleteConversation}\n                onRenameConversation={(conversationId, newTitle) => void handleRenameConversation(conversationId, newTitle)}\n              />\n            </div>\n          )}\n        </nav>\n\n        {/* Profile - always visible */}\n        <div className=\"border-t border-blue-800/30 p-3 bg-slate-900/50\">\n          <button\n            onClick={onToggle}\n            className={`w-full flex items-center gap-3 hover:bg-blue-800/30 rounded-lg transition-colors p-2 ${\n              !isExpanded && 'justify-center'\n            }`}\n            title={isExpanded ? undefined : userProfile?.name || 'User Profile'}\n          >\n            {/* Profile Picture/Initials */}\n            <div className=\"w-10 h-10 rounded-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center text-white font-bold shadow-lg\">\n              {getUserInitials()}\n            </div>\n            {isExpanded && (\n              <div className=\"flex-1 text-left\">\n                <div className=\"text-sm font-medium text-white\">{userProfile?.name || 'User'}</div>\n                <div className=\"text-xs text-blue-300\">{userProfile?.email || 'user@example.com'}</div>\n              </div>\n            )}\n          </button>\n        </div>\n      </div>\n\n      {/* Delete Confirmation Dialog */}\n      <ConfirmDialog\n        isOpen={deleteConfirmOpen}\n        title=\"Delete Chat\"\n        message=\"Are you sure you want to delete this chat? This action cannot be undone.\"\n        confirmText=\"Delete\"\n        cancelText=\"Cancel\"\n        variant=\"danger\"\n        onConfirm={() => void confirmDelete()}\n        onCancel={() => {\n          setDeleteConfirmOpen(false);\n          setConversationToDelete(null);\n        }}\n      />\n    </>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\SidebarNavigation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\SourceCitation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\StreamingIndicator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\ThemeProvider.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":8,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":8,"endColumn":30},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":8,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":8,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { ThemeProvider as NextThemesProvider } from 'next-themes';\nimport { type ThemeProviderProps } from 'next-themes';\n\n/**\n * Theme provider wrapper for shadcn/ui components\n * Enables dark/light mode support across the application\n */\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\ViewErrorBoundary.tsx","messages":[{"ruleId":"@typescript-eslint/prefer-optional-chain","severity":1,"message":"Prefer using an optional chain expression instead, as it's more concise and easier to read.","line":65,"column":44,"nodeType":null,"messageId":"preferOptionalChain","endLine":65,"endColumn":93,"suggestions":[{"fix":{"range":[1901,1950],"text":"window.justiceAPI?.logUIError"},"messageId":"optionalChainSuggest","desc":"Change to an optional chain."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":68,"column":34,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":68,"endColumn":36,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2107,2109],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":69,"column":52,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":69,"endColumn":54,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2189,2191],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * ViewErrorBoundary Component\n *\n * Lightweight error boundary for individual views.\n * Allows the rest of the app to continue functioning even if one view crashes.\n * Provides a fallback UI with navigation back to dashboard.\n *\n * This is a view-level boundary that catches errors within specific views,\n * while the root ErrorBoundary catches errors across the entire app.\n */\n\nimport { Component, ErrorInfo, ReactNode } from 'react';\n\ninterface ViewErrorBoundaryProps {\n  children: ReactNode;\n  viewName: string;\n  onNavigateToDashboard?: () => void;\n}\n\ninterface ViewErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n}\n\nexport class ViewErrorBoundary extends Component<ViewErrorBoundaryProps, ViewErrorBoundaryState> {\n  constructor(props: ViewErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): Partial<ViewErrorBoundaryState> {\n    // Update state so the next render will show the fallback UI\n    return {\n      hasError: true,\n      error,\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    // Log to console for immediate visibility\n    console.error(`[ViewErrorBoundary:${this.props.viewName}] Caught error:`, error);\n    console.error(`[ViewErrorBoundary:${this.props.viewName}] Component stack:`, errorInfo.componentStack);\n\n    // Send to main process via IPC for persistent logging\n    this.logErrorToMainProcess(error, errorInfo);\n\n    // Update state with error details\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  /**\n   * Log error to main process via IPC for audit logging\n   */\n  private logErrorToMainProcess(error: Error, errorInfo: ErrorInfo): void {\n    try {\n      // Check if justiceAPI is available\n      if (typeof window !== 'undefined' && window.justiceAPI && window.justiceAPI.logUIError) {\n        window.justiceAPI.logUIError({\n          error: `[${this.props.viewName}] ${error.message || 'Unknown error'}`,\n          errorInfo: error.stack || 'No stack trace available',\n          componentStack: errorInfo.componentStack || 'No component stack available',\n          timestamp: new Date().toISOString(),\n          url: window.location.href,\n          userAgent: navigator.userAgent,\n        }).catch((logError) => {\n          // Silently fail if logging fails - we don't want to crash from logging\n          console.error('[ViewErrorBoundary] Failed to log error to main process:', logError);\n        });\n      } else {\n        console.warn('[ViewErrorBoundary] justiceAPI.logUIError not available');\n      }\n    } catch (logError) {\n      // Silently fail if logging fails\n      console.error('[ViewErrorBoundary] Exception while logging error:', logError);\n    }\n  }\n\n  handleNavigateToDashboard = (): void => {\n    // Clear error state and navigate to dashboard\n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null,\n    });\n\n    // Call parent navigation handler if provided\n    if (this.props.onNavigateToDashboard) {\n      this.props.onNavigateToDashboard();\n    }\n  };\n\n  handleTryAgain = (): void => {\n    // Clear error state and try to re-render the view\n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null,\n    });\n  };\n\n  render(): ReactNode {\n    if (this.state.hasError) {\n      return (\n        <div\n          className=\"flex min-h-screen flex-col items-center justify-center bg-slate-950 px-4\"\n          role=\"alert\"\n          aria-live=\"assertive\"\n          aria-atomic=\"true\"\n        >\n          <div className=\"w-full max-w-lg rounded-lg bg-slate-900 border border-red-500/30 p-8 shadow-xl\">\n            {/* Error Icon */}\n            <div className=\"mb-6 flex items-center gap-3\">\n              <svg\n                className=\"h-10 w-10 text-red-500\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                aria-hidden=\"true\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n                />\n              </svg>\n              <h1 className=\"text-2xl font-bold text-red-400\">\n                View Error\n              </h1>\n            </div>\n\n            {/* Error Message */}\n            <div className=\"mb-6\">\n              <p className=\"mb-3 text-lg text-slate-300\">\n                The <span className=\"font-semibold text-blue-400\">{this.props.viewName}</span> view encountered an error.\n              </p>\n              <p className=\"text-sm text-slate-400\">\n                Don't worry - the rest of the application is still working. You can navigate back to the dashboard or try again.\n              </p>\n            </div>\n\n            {/* Error Details (Development Only) */}\n            {process.env.NODE_ENV === 'development' && this.state.error && (\n              <div className=\"mb-6\">\n                <details className=\"group\">\n                  <summary className=\"cursor-pointer text-sm font-semibold text-slate-400 hover:text-slate-300 select-none\">\n                    Error Details (Dev Only)\n                  </summary>\n                  <div className=\"mt-2 rounded-md bg-slate-950 border border-red-500/20 p-3\">\n                    <p className=\"font-mono text-xs text-red-400 break-all\">\n                      {this.state.error.message}\n                    </p>\n                  </div>\n                </details>\n              </div>\n            )}\n\n            {/* Component Stack (Development Only) */}\n            {process.env.NODE_ENV === 'development' && this.state.errorInfo && (\n              <details className=\"mb-6\">\n                <summary className=\"cursor-pointer text-sm font-semibold text-slate-400 hover:text-slate-300 select-none\">\n                  Component Stack (Dev Only)\n                </summary>\n                <pre className=\"mt-2 overflow-auto rounded-md bg-slate-950 border border-red-500/20 p-3 text-xs text-slate-400 max-h-32\">\n                  {this.state.errorInfo.componentStack}\n                </pre>\n              </details>\n            )}\n\n            {/* Recovery Actions */}\n            <div className=\"flex gap-3\">\n              <button\n                onClick={this.handleNavigateToDashboard}\n                className=\"flex-1 rounded-lg bg-blue-600 px-5 py-3 font-semibold text-white transition-colors hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-slate-900\"\n                aria-label=\"Navigate back to dashboard\"\n              >\n                Back to Dashboard\n              </button>\n              <button\n                onClick={this.handleTryAgain}\n                className=\"flex-1 rounded-lg border-2 border-slate-700 bg-slate-800 px-5 py-3 font-semibold text-slate-300 transition-colors hover:bg-slate-700 focus:outline-none focus:ring-2 focus:ring-slate-500 focus:ring-offset-2 focus:ring-offset-slate-900\"\n                aria-label=\"Try to reload this view\"\n              >\n                Try Again\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\ui\\DashboardEmptyState.tsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":127,"column":15,"nodeType":"MemberExpression","messageId":"limited","endLine":127,"endColumn":26,"suggestions":[{"fix":{"range":[5557,5592],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { FolderOpen, MessageSquare, Scale, FileText, BookOpen } from 'lucide-react';\nimport { EmptyState } from './EmptyState';\n\ninterface DashboardEmptyStateProps {\n  onCreateCase: () => void;\n  onStartChat: () => void;\n  onUploadDocument: () => void;\n}\n\ninterface QuickActionCardProps {\n  icon: React.ComponentType<{ className?: string }>;\n  title: string;\n  description: string;\n  onClick: () => void;\n}\n\nfunction QuickActionCard({ icon: Icon, title, description, onClick }: QuickActionCardProps): JSX.Element {\n  return (\n    <button\n      onClick={onClick}\n      className=\"flex flex-col items-center gap-3 p-4 bg-slate-800/30 hover:bg-slate-700/40 border border-slate-700/30 rounded-lg transition-all text-center group\"\n    >\n      <div className=\"p-3 bg-blue-600/20 rounded-lg group-hover:bg-blue-600/30 transition-colors\">\n        <Icon className=\"w-6 h-6 text-blue-300\" />\n      </div>\n      <div>\n        <h4 className=\"text-sm font-semibold text-white mb-1\">{title}</h4>\n        <p className=\"text-xs text-blue-300\">{description}</p>\n      </div>\n    </button>\n  );\n}\n\n/**\n * Empty state for Dashboard when no cases exist\n *\n * Shows a welcoming message with:\n * - Primary action: Create first case\n * - Secondary action: Learn how it works\n * - Quick action cards for common tasks\n */\nexport function DashboardEmptyState({\n  onCreateCase,\n  onStartChat,\n  onUploadDocument,\n}: DashboardEmptyStateProps): JSX.Element {\n  return (\n    <div className=\"flex-1 overflow-y-auto p-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Welcome Section */}\n        <div className=\"bg-gradient-to-br from-blue-950/50 to-indigo-950/50 border border-blue-800/30 rounded-xl p-8 mb-8\">\n          <div className=\"flex items-start gap-4 mb-6\">\n            <div className=\"p-3 bg-blue-600/20 rounded-lg\">\n              <Scale className=\"w-8 h-8 text-blue-300\" />\n            </div>\n            <div className=\"flex-1\">\n              <h1 className=\"text-3xl font-bold text-white mb-2\">Welcome to Justice Companion</h1>\n              <p className=\"text-lg text-blue-200\">Your personal legal information assistant</p>\n            </div>\n          </div>\n\n          <div className=\"space-y-4 text-blue-100 leading-relaxed\">\n            <p>\n              Justice Companion helps you organize legal information, track case details, and understand your legal matters better.\n              Use this tool to keep notes, manage documents, and stay informed about your situation.\n            </p>\n\n            <div className=\"bg-yellow-900/20 border-2 border-yellow-600/50 rounded-lg p-4\">\n              <div className=\"flex items-start gap-3\">\n                <div className=\"flex-shrink-0\">\n                  <svg className=\"w-6 h-6 text-yellow-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"font-bold text-yellow-200 mb-2\">Important Legal Disclaimer</h3>\n                  <p className=\"text-sm text-yellow-100/90 leading-relaxed\">\n                    <strong>This app provides information only, not legal advice.</strong> Justice Companion is designed to help you\n                    organize and understand legal information, but it cannot replace professional legal counsel. For legal advice\n                    tailored to your specific situation, please consult a qualified attorney. Nothing in this application creates\n                    an attorney-client relationship.\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 pt-2\">\n              <div className=\"flex items-start gap-3\">\n                <div className=\"text-green-400 mt-1\">‚úì</div>\n                <div>\n                  <h4 className=\"font-semibold text-white\">Track Your Cases</h4>\n                  <p className=\"text-sm text-blue-300\">Organize facts, documents, and timelines</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <div className=\"text-green-400 mt-1\">‚úì</div>\n                <div>\n                  <h4 className=\"font-semibold text-white\">Stay Informed</h4>\n                  <p className=\"text-sm text-blue-300\">Access legal information resources</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <div className=\"text-green-400 mt-1\">‚úì</div>\n                <div>\n                  <h4 className=\"font-semibold text-white\">Manage Documents</h4>\n                  <p className=\"text-sm text-blue-300\">Keep important files organized</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Getting Started Section */}\n        <EmptyState\n          icon={FolderOpen}\n          title=\"Get Started\"\n          description=\"Create your first case to begin organizing your legal information\"\n          action={{\n            label: 'Create Your First Case',\n            onClick: onCreateCase,\n          }}\n          secondaryAction={{\n            label: 'Learn How It Works',\n            onClick: () => {\n              // TODO: Open tutorial/guide\n              console.log('Opening tutorial...');\n            },\n          }}\n        >\n          {/* Quick Actions Grid */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mt-8 mb-6\">\n            <QuickActionCard\n              icon={MessageSquare}\n              title=\"Start a Chat\"\n              description=\"Ask legal questions\"\n              onClick={onStartChat}\n            />\n            <QuickActionCard\n              icon={Scale}\n              title=\"Create Case\"\n              description=\"Track legal matter\"\n              onClick={onCreateCase}\n            />\n            <QuickActionCard\n              icon={FileText}\n              title=\"Upload Documents\"\n              description=\"Analyze evidence\"\n              onClick={onUploadDocument}\n            />\n          </div>\n\n          {/* Helpful Tips */}\n          <div className=\"bg-gradient-to-br from-blue-900/20 to-indigo-900/20 border border-blue-700/30 rounded-lg p-4 text-left\">\n            <div className=\"flex items-start gap-3\">\n              <BookOpen className=\"w-5 h-5 text-blue-400 flex-shrink-0 mt-0.5\" />\n              <div>\n                <h4 className=\"text-sm font-semibold text-white mb-1\">Getting Started Tips</h4>\n                <ul className=\"text-xs text-blue-200 space-y-1\">\n                  <li>‚Ä¢ Create a case to organize your legal documents and information</li>\n                  <li>‚Ä¢ Use the AI chat for instant legal information and guidance</li>\n                  <li>‚Ä¢ Upload documents to analyze and extract key information</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </EmptyState>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\ui\\EmptyState.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\ui\\LoadingSpinner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\ui\\Skeleton.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":4,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":4,"endColumn":18},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":4,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":4,"endColumn":18}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { cn } from '@/lib/utils';\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn('animate-pulse rounded-md bg-primary/10', className)}\n      {...props}\n    />\n  );\n}\n\ninterface SkeletonCardProps {\n  count?: number;\n  className?: string;\n}\n\nfunction SkeletonCard({ count = 1, className }: SkeletonCardProps): JSX.Element {\n  return (\n    <>\n      {Array.from({ length: count }).map((_, index) => (\n        <div\n          key={index}\n          className={cn(\n            'bg-slate-900/50 border border-blue-800/30 rounded-lg p-5',\n            'transition-opacity duration-300',\n            className,\n          )}\n          role=\"status\"\n          aria-label=\"Loading document card\"\n        >\n          {/* Icon and status skeleton */}\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center gap-3\">\n              <Skeleton className=\"w-12 h-12 rounded-lg\" />\n              <div className=\"space-y-2\">\n                <Skeleton className=\"h-3 w-12\" />\n                <Skeleton className=\"h-2 w-16\" />\n              </div>\n            </div>\n            <Skeleton className=\"w-5 h-5 rounded-full\" />\n          </div>\n\n          {/* Title */}\n          <Skeleton className=\"h-4 w-3/4 mb-2\" />\n          <Skeleton className=\"h-3 w-1/2 mb-3\" />\n\n          {/* Status badge */}\n          <Skeleton className=\"h-6 w-24 rounded-full mb-4\" />\n\n          {/* Metadata */}\n          <div className=\"space-y-2 mb-4\">\n            <Skeleton className=\"h-3 w-full\" />\n            <Skeleton className=\"h-3 w-2/3\" />\n            <Skeleton className=\"h-3 w-1/2\" />\n          </div>\n\n          {/* Checklist */}\n          <div className=\"border-t border-blue-800/30 pt-3 mb-4\">\n            <Skeleton className=\"h-2 w-24 mb-2\" />\n            <div className=\"flex gap-2\">\n              <Skeleton className=\"h-6 w-16 rounded\" />\n              <Skeleton className=\"h-6 w-16 rounded\" />\n              <Skeleton className=\"h-6 w-20 rounded\" />\n            </div>\n          </div>\n\n          {/* Action buttons */}\n          <div className=\"grid grid-cols-4 gap-2\">\n            <Skeleton className=\"h-9 rounded-lg\" />\n            <Skeleton className=\"h-9 rounded-lg\" />\n            <Skeleton className=\"h-9 rounded-lg\" />\n            <Skeleton className=\"h-9 rounded-lg\" />\n          </div>\n        </div>\n      ))}\n    </>\n  );\n}\n\ninterface SkeletonListProps {\n  count?: number;\n  className?: string;\n}\n\nfunction SkeletonList({ count = 3, className }: SkeletonListProps): JSX.Element {\n  return (\n    <div className={cn('space-y-3', className)} role=\"status\" aria-label=\"Loading list\">\n      {Array.from({ length: count }).map((_, index) => (\n        <div key={index} className=\"flex items-center gap-3 p-3 bg-slate-900/30 rounded-lg border border-blue-800/20\">\n          <Skeleton className=\"w-10 h-10 rounded-full flex-shrink-0\" />\n          <div className=\"flex-1 space-y-2\">\n            <Skeleton className=\"h-4 w-3/4\" />\n            <Skeleton className=\"h-3 w-1/2\" />\n          </div>\n          <Skeleton className=\"w-16 h-8 rounded\" />\n        </div>\n      ))}\n    </div>\n  );\n}\n\ninterface SkeletonTextProps {\n  lines?: number;\n  className?: string;\n}\n\nfunction SkeletonText({ lines = 3, className }: SkeletonTextProps): JSX.Element {\n  return (\n    <div className={cn('space-y-2', className)} role=\"status\" aria-label=\"Loading text\">\n      {Array.from({ length: lines }).map((_, index) => (\n        <Skeleton\n          key={index}\n          className={cn(\n            'h-4',\n            index === lines - 1 ? 'w-2/3' : 'w-full',\n          )}\n        />\n      ))}\n    </div>\n  );\n}\n\ninterface SkeletonTreeProps {\n  className?: string;\n}\n\nfunction SkeletonTree({ className }: SkeletonTreeProps): JSX.Element {\n  return (\n    <div\n      className={cn('space-y-6 p-8', className)}\n      role=\"status\"\n      aria-label=\"Loading case tree\"\n    >\n      {/* Root node */}\n      <div className=\"flex flex-col items-center\">\n        <Skeleton className=\"w-48 h-24 rounded-lg\" />\n      </div>\n\n      {/* Second level - 4 branches */}\n      <div className=\"flex justify-center gap-6\">\n        {Array.from({ length: 4 }).map((_, index) => (\n          <div key={index} className=\"flex flex-col items-center gap-4\">\n            <Skeleton className=\"w-40 h-16 rounded-lg\" />\n            {/* Third level - 2 items per branch */}\n            <div className=\"flex gap-3\">\n              <Skeleton className=\"w-32 h-20 rounded-lg\" />\n              <Skeleton className=\"w-32 h-20 rounded-lg\" />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport { Skeleton, SkeletonCard, SkeletonList, SkeletonText, SkeletonTree };\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\ui\\Spinner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\ui\\dialog.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":56,"column":42,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":56,"endColumn":44},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":56,"column":42,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":56,"endColumn":44},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":70,"column":42,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":70,"endColumn":44},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":70,"column":42,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":70,"endColumn":44}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as React from 'react';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { cn } from '@/lib/utils';\nimport { Cross2Icon } from '@radix-ui/react-icons';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      'fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <Cross2Icon className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col space-y-1.5 text-center sm:text-left',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      'text-lg font-semibold leading-none tracking-tight',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n};\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\components\\ui\\sonner.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":7,"column":46,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":7,"endColumn":48},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":7,"column":46,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":7,"endColumn":48}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { useTheme } from 'next-themes';\nimport { Toaster as Sonner } from 'sonner';\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = 'system' } = useTheme();\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps['theme']}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            'group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg',\n          description: 'group-[.toast]:text-muted-foreground',\n          actionButton:\n            'group-[.toast]:bg-primary group-[.toast]:text-primary-foreground',\n          cancelButton:\n            'group-[.toast]:bg-muted group-[.toast]:text-muted-foreground',\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { Toaster };\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\contexts\\DebugContext.tsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":48,"column":5,"nodeType":"MemberExpression","messageId":"limited","endLine":48,"endColumn":16,"suggestions":[{"fix":{"range":[1491,1540],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":53,"column":5,"nodeType":"MemberExpression","messageId":"limited","endLine":53,"endColumn":16,"suggestions":[{"fix":{"range":[1626,1676],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":89,"column":11,"nodeType":"MemberExpression","messageId":"limited","endLine":89,"endColumn":23,"suggestions":[{"fix":{"range":[2827,2870],"text":""},"messageId":"removeConsole","data":{"propertyName":"info"},"desc":"Remove the console.info()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":92,"column":11,"nodeType":"MemberExpression","messageId":"limited","endLine":92,"endColumn":24,"suggestions":[{"fix":{"range":[2920,2964],"text":""},"messageId":"removeConsole","data":{"propertyName":"debug"},"desc":"Remove the console.debug()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":170,"column":7,"nodeType":"MemberExpression","messageId":"limited","endLine":170,"endColumn":18,"suggestions":[{"fix":{"range":[4672,4732],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":173,"column":7,"nodeType":"MemberExpression","messageId":"limited","endLine":173,"endColumn":18,"suggestions":[{"fix":{"range":[4767,4829],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * DebugContext - Structured logging and debug mode management\n *\n * Provides systematic debugging infrastructure across the entire app.\n * Features:\n * - Toggleable debug mode (dev vs production)\n * - Structured logging with levels (error, warn, info, debug)\n * - Component-specific logging\n * - Persistent logs via ErrorLogger\n * - Performance tracking\n *\n * Usage:\n * const { log, isDebugMode } = useDebug();\n * log('info', 'MyComponent', 'Something happened', { data });\n */\n\nimport { createContext, useContext, useState, useCallback, ReactNode } from 'react';\n// errorLogger removed - uses fs which doesn't work in renderer process\n\nexport type LogLevel = 'error' | 'warn' | 'info' | 'debug';\n\ninterface DebugContextValue {\n  isDebugMode: boolean;\n  enableDebug: () => void;\n  disableDebug: () => void;\n  log: (level: LogLevel, component: string, message: string, data?: unknown) => void;\n  startTimer: (label: string) => void;\n  endTimer: (label: string) => void;\n}\n\nconst DebugContext = createContext<DebugContextValue | undefined>(undefined);\n\ninterface DebugProviderProps {\n  children: ReactNode;\n}\n\nexport function DebugProvider({ children }: DebugProviderProps): JSX.Element {\n  // Enable debug mode by default in development\n  const [isDebugMode, setIsDebugMode] = useState<boolean>(\n    process.env.NODE_ENV === 'development',\n  );\n\n  // Performance timers\n  const timers = new Map<string, number>();\n\n  const enableDebug = useCallback(() => {\n    setIsDebugMode(true);\n    console.log('[DebugContext] Debug mode ENABLED');\n  }, []);\n\n  const disableDebug = useCallback(() => {\n    setIsDebugMode(false);\n    console.log('[DebugContext] Debug mode DISABLED');\n  }, []);\n\n  const log = useCallback(\n    (level: LogLevel, component: string, message: string, data?: unknown) => {\n      // Always log errors, even if debug mode is off\n      if (!isDebugMode && level !== 'error') {\n        return;\n      }\n\n      const timestamp = new Date().toISOString();\n      const logPrefix = `[${level.toUpperCase()}][${component}]`;\n\n      // Safely stringify data - handle circular references and errors\n      let dataString = '';\n      if (data !== undefined) {\n        try {\n          dataString = ` ${JSON.stringify(data, null, 2)}`;\n        } catch {\n          // Fallback for circular references or non-serializable objects\n          dataString = ' [Unserializable data]';\n        }\n      }\n\n      const logMessage = `${logPrefix} ${message}${dataString}`;\n\n      // Console output with appropriate styling\n      switch (level) {\n        case 'error':\n          console.error(`${timestamp} ${logMessage}`);\n          // TODO: Send to main process via IPC for persistent logging\n          break;\n        case 'warn':\n          console.warn(`${timestamp} ${logMessage}`);\n          break;\n        case 'info':\n          console.info(`${timestamp} ${logMessage}`);\n          break;\n        case 'debug':\n          console.debug(`${timestamp} ${logMessage}`);\n          break;\n      }\n    },\n    [isDebugMode],\n  );\n\n  const startTimer = useCallback(\n    (label: string) => {\n      if (!isDebugMode) {\n        return;\n      }\n      timers.set(label, performance.now());\n      log('debug', 'Performance', `Timer started: ${label}`);\n    },\n    [isDebugMode, log],\n  );\n\n  const endTimer = useCallback(\n    (label: string) => {\n      if (!isDebugMode) {\n        return;\n      }\n      const startTime = timers.get(label);\n      if (startTime === undefined) {\n        log('warn', 'Performance', `Timer not found: ${label}`);\n        return;\n      }\n\n      const elapsed = performance.now() - startTime;\n      timers.delete(label);\n      log('debug', 'Performance', `Timer ended: ${label}`, {\n        duration: `${elapsed.toFixed(2)}ms`,\n      });\n    },\n    [isDebugMode, log],\n  );\n\n  const value: DebugContextValue = {\n    isDebugMode,\n    enableDebug,\n    disableDebug,\n    log,\n    startTimer,\n    endTimer,\n  };\n\n  return <DebugContext.Provider value={value}>{children}</DebugContext.Provider>;\n}\n\n/**\n * Hook to access debug context\n * Must be used within DebugProvider\n */\nexport function useDebug(): DebugContextValue {\n  const context = useContext(DebugContext);\n  if (context === undefined) {\n    throw new Error('useDebug must be used within a DebugProvider');\n  }\n  return context;\n}\n\n/**\n * Expose debug controls to window for DevTools access\n * Usage in browser console:\n * - window.debug.enable()\n * - window.debug.disable()\n */\nif (typeof window !== 'undefined') {\n  interface WindowWithDebug extends Window {\n    debug?: {\n      enable: () => void;\n      disable: () => void;\n    };\n  }\n\n  (window as WindowWithDebug).debug = {\n    enable: () => {\n      console.log('Debug mode enabled via window.debug.enable()');\n    },\n    disable: () => {\n      console.log('Debug mode disabled via window.debug.disable()');\n    },\n  };\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\db\\backup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\db\\database.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":94,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":94,"endColumn":27},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":94,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":94,"endColumn":27}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import Database from 'better-sqlite3';\nimport fs from 'fs';\nimport path from 'path';\nimport { app } from 'electron';\nimport { errorLogger } from '../utils/error-logger';\n\nconst resolveDatabasePath = (): string => {\n  if (process.env.JUSTICE_DB_PATH) {\n    return process.env.JUSTICE_DB_PATH;\n  }\n\n  if (process.versions?.electron && app && typeof app.getPath === 'function') {\n    try {\n      return path.join(app.getPath('userData'), 'justice.db');\n    } catch (error) {\n      errorLogger.logError(error as Error, { context: 'database-path-resolution' });\n    }\n  }\n\n  const fallbackDir = path.join(process.cwd(), '.justice-companion');\n  fs.mkdirSync(fallbackDir, { recursive: true });\n\n  return path.join(fallbackDir, 'justice.db');\n};\n\nclass DatabaseManager {\n  private static instance: DatabaseManager;\n  private db: Database.Database | null = null;\n\n  private constructor() {}\n\n  public static getInstance(): DatabaseManager {\n    if (!DatabaseManager.instance) {\n      DatabaseManager.instance = new DatabaseManager();\n    }\n    return DatabaseManager.instance;\n  }\n\n  public getDatabase(): Database.Database {\n    if (!this.db) {\n      try {\n        const dbPath = resolveDatabasePath();\n        this.db = new Database(dbPath);\n\n        // Enable foreign keys\n        this.db.pragma('foreign_keys = ON');\n\n        // Enable WAL mode for better concurrency\n        this.db.pragma('journal_mode = WAL');\n\n        errorLogger.logError('Database initialized successfully', { path: dbPath });\n      } catch (error) {\n        errorLogger.logError(error as Error, { context: 'database-init' });\n        throw error;\n      }\n    }\n    return this.db;\n  }\n\n  public close(): void {\n    if (this.db) {\n      try {\n        this.db.close();\n        this.db = null;\n        errorLogger.logError('Database closed successfully', {});\n      } catch (error) {\n        errorLogger.logError(error as Error, { context: 'database-close' });\n      }\n    }\n  }\n\n  public runMigrations(): void {\n    const db = this.getDatabase();\n\n    try {\n      // Create migrations table if it doesn't exist\n      db.exec(`\n        CREATE TABLE IF NOT EXISTS migrations (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          name TEXT NOT NULL UNIQUE,\n          applied_at TEXT NOT NULL DEFAULT (datetime('now'))\n        )\n      `);\n\n      errorLogger.logError('Migrations table ready', {});\n    } catch (error) {\n      errorLogger.logError(error as Error, { context: 'migrations-table-creation' });\n      throw error;\n    }\n  }\n}\n\nexport const databaseManager = DatabaseManager.getInstance();\nexport const getDb = () => databaseManager.getDatabase();\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\db\\migrate.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":1,"message":"Unsafe member access .name on an `any` value.","line":86,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":86,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":1,"message":"Unsafe member access .checksum on an `any` value.","line":87,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":87,"endColumn":31}],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":85,"column":18,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":85,"endColumn":21,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2247,2250],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2247,2250],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import fs from 'fs';\nimport path from 'path';\nimport crypto from 'crypto';\nimport { getDb } from './database';\nimport { errorLogger } from '../utils/error-logger';\n\n/**\n * Migration status type\n */\nexport type MigrationStatus = 'applied' | 'rolled_back' | 'failed';\n\n/**\n * Migration record from database\n */\nexport interface MigrationRecord {\n  id: number;\n  name: string;\n  checksum: string;\n  applied_at: string;\n  applied_by: string | null;\n  duration_ms: number | null;\n  status: MigrationStatus;\n}\n\n/**\n * Enhanced migration table with checksum, duration, and status tracking\n */\nfunction ensureMigrationsTable(): void {\n  const db = getDb();\n\n  db.exec(`\n    CREATE TABLE IF NOT EXISTS migrations (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      name TEXT NOT NULL UNIQUE,\n      checksum TEXT NOT NULL,\n      applied_at TEXT NOT NULL DEFAULT (datetime('now')),\n      applied_by TEXT,\n      duration_ms INTEGER,\n      status TEXT NOT NULL DEFAULT 'applied' CHECK(status IN ('applied', 'rolled_back', 'failed'))\n    )\n  `);\n}\n\n/**\n * Calculate SHA-256 checksum of migration file\n */\nfunction calculateChecksum(content: string): string {\n  return crypto.createHash('sha256').update(content).digest('hex');\n}\n\n/**\n * Parse migration file into UP and DOWN sections\n */\nexport function parseMigration(content: string): { up: string; down: string } {\n  const upMatch = content.match(/--\\s*UP\\s*\\n([\\s\\S]*?)(?=--\\s*DOWN|$)/i);\n  const downMatch = content.match(/--\\s*DOWN\\s*\\n([\\s\\S]*?)$/i);\n\n  const up = upMatch ? upMatch[1].trim() : content.trim();\n  const down = downMatch ? downMatch[1].trim() : '';\n\n  return { up, down };\n}\n\n/**\n * Run all pending migrations\n */\nexport function runMigrations(): void {\n  const db = getDb();\n  const migrationsDir = path.join(__dirname, 'migrations');\n\n  try {\n    ensureMigrationsTable();\n\n    // Get list of migration files\n    const migrationFiles = fs\n      .readdirSync(migrationsDir)\n      .filter((file) => file.endsWith('.sql'))\n      .sort();\n\n    // Get already applied migrations\n    const appliedMigrations = db\n      .prepare('SELECT name, checksum FROM migrations WHERE status = ?')\n      .all('applied')\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .map((row: any) => ({\n        name: row.name as string,\n        checksum: row.checksum as string,\n      }));\n\n    const appliedNames = appliedMigrations.map((m) => m.name);\n\n    // Run pending migrations\n    for (const file of migrationFiles) {\n      if (!appliedNames.includes(file)) {\n        const migrationPath = path.join(migrationsDir, file);\n        const migrationContent = fs.readFileSync(migrationPath, 'utf8');\n        const checksum = calculateChecksum(migrationContent);\n        const { up } = parseMigration(migrationContent);\n\n        errorLogger.logError(`Running migration: ${file}`, { type: 'info' });\n\n        const startTime = Date.now();\n\n        // Execute migration in a transaction\n        const applyMigration = db.transaction(() => {\n          db.exec(up);\n\n          const duration = Date.now() - startTime;\n\n          db.prepare(`\n            INSERT INTO migrations (name, checksum, duration_ms, status)\n            VALUES (?, ?, ?, 'applied')\n          `).run(file, checksum, duration);\n        });\n\n        applyMigration();\n\n        errorLogger.logError(`Migration completed: ${file} (${Date.now() - startTime}ms)`, {\n          type: 'info',\n        });\n      } else {\n        // Verify checksum for already-applied migrations\n        const applied = appliedMigrations.find((m) => m.name === file);\n        const migrationPath = path.join(migrationsDir, file);\n        const migrationContent = fs.readFileSync(migrationPath, 'utf8');\n        const currentChecksum = calculateChecksum(migrationContent);\n\n        if (applied && applied.checksum !== currentChecksum) {\n          errorLogger.logError(\n            `WARNING: Migration ${file} has been modified after being applied! ` +\n            `Original checksum: ${applied.checksum}, Current: ${currentChecksum}`,\n            { type: 'warn' },\n          );\n        }\n      }\n    }\n\n    errorLogger.logError('All migrations completed', { type: 'info' });\n  } catch (error) {\n    errorLogger.logError(error as Error, { context: 'run-migrations' });\n    throw error;\n  }\n}\n\n/**\n * Rollback a specific migration by name\n */\nexport function rollbackMigration(migrationName: string): void {\n  const db = getDb();\n  const migrationsDir = path.join(__dirname, 'migrations');\n\n  try {\n    ensureMigrationsTable();\n\n    // Check if migration is applied\n    const migration = db\n      .prepare('SELECT * FROM migrations WHERE name = ? AND status = ?')\n      .get(migrationName, 'applied') as MigrationRecord | undefined;\n\n    if (!migration) {\n      throw new Error(`Migration ${migrationName} is not applied or already rolled back`);\n    }\n\n    const migrationPath = path.join(migrationsDir, migrationName);\n\n    if (!fs.existsSync(migrationPath)) {\n      throw new Error(`Migration file not found: ${migrationPath}`);\n    }\n\n    const migrationContent = fs.readFileSync(migrationPath, 'utf8');\n    const { down } = parseMigration(migrationContent);\n\n    if (!down || down.length === 0) {\n      throw new Error(`Migration ${migrationName} has no DOWN section - cannot rollback`);\n    }\n\n    errorLogger.logError(`Rolling back migration: ${migrationName}`, { type: 'info' });\n\n    const startTime = Date.now();\n\n    // Execute rollback in a transaction\n    const rollback = db.transaction(() => {\n      db.exec(down);\n\n      db.prepare(`\n        UPDATE migrations\n        SET status = 'rolled_back'\n        WHERE name = ?\n      `).run(migrationName);\n    });\n\n    rollback();\n\n    errorLogger.logError(`Rollback completed: ${migrationName} (${Date.now() - startTime}ms)`, {\n      type: 'info',\n    });\n  } catch (error) {\n    errorLogger.logError(error as Error, { context: 'rollback-migration' });\n    throw error;\n  }\n}\n\n/**\n * Get migration status (applied, pending, rolled back)\n */\nexport function getMigrationStatus(): {\n  applied: MigrationRecord[];\n  pending: string[];\n  rolledBack: MigrationRecord[];\n  } {\n  const db = getDb();\n  const migrationsDir = path.join(__dirname, 'migrations');\n\n  ensureMigrationsTable();\n\n  const migrationFiles = fs\n    .readdirSync(migrationsDir)\n    .filter((file) => file.endsWith('.sql'))\n    .sort();\n\n  const applied = db\n    .prepare('SELECT * FROM migrations WHERE status = ? ORDER BY applied_at ASC')\n    .all('applied') as MigrationRecord[];\n\n  const rolledBack = db\n    .prepare('SELECT * FROM migrations WHERE status = ? ORDER BY applied_at DESC')\n    .all('rolled_back') as MigrationRecord[];\n\n  const appliedNames = applied.map((m) => m.name);\n  const pending = migrationFiles.filter((file) => !appliedNames.includes(file));\n\n  return { applied, pending, rolledBack };\n}\n\n/**\n * Validate migration file format\n */\nexport function validateMigration(migrationName: string): {\n  valid: boolean;\n  errors: string[];\n} {\n  const migrationsDir = path.join(__dirname, 'migrations');\n  const migrationPath = path.join(migrationsDir, migrationName);\n\n  const errors: string[] = [];\n\n  if (!fs.existsSync(migrationPath)) {\n    errors.push('Migration file does not exist');\n    return { valid: false, errors };\n  }\n\n  const content = fs.readFileSync(migrationPath, 'utf8');\n  const { up, down } = parseMigration(content);\n\n  if (!up || up.length === 0) {\n    errors.push('Migration has no UP section');\n  }\n\n  if (!down || down.length === 0) {\n    errors.push('Migration has no DOWN section (rollback not supported)');\n  }\n\n  // Check for basic SQL syntax issues\n  if (up && !up.toUpperCase().includes('CREATE') && !up.toUpperCase().includes('INSERT') &&\n      !up.toUpperCase().includes('ALTER') && !up.toUpperCase().includes('UPDATE')) {\n    errors.push('UP section does not appear to contain valid SQL statements');\n  }\n\n  return { valid: errors.length === 0, errors };\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\electron-ipc-handlers.test.ts","messages":[],"suppressedMessages":[{"ruleId":"no-unreachable","severity":2,"message":"Unreachable code.","line":789,"column":23,"nodeType":"BlockStatement","messageId":"unreachableCode","endLine":794,"endColumn":8,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\cases\\components\\CaseDetailView.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\cases\\components\\CaseDetailView.tsx","messages":[{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":96,"column":39,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":96,"endColumn":41,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[4392,4394],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport { ArrowLeft, FileText, Calendar, User, Scale, StickyNote, Briefcase } from 'lucide-react';\nimport { useCases } from '../hooks/useCases';\nimport { TimelineView } from '@/features/timeline';\nimport { UserFactsPanel, CaseFactsPanel } from '../../facts';\nimport { NotesPanel } from '@/features/notes';\nimport { LegalIssuesPanel } from '@/features/legal';\nimport { useEvidence } from '@/features/documents';\nimport type { Case } from '../../../models/Case';\n\ninterface CaseDetailViewProps {\n  caseId: number;\n  onBack: () => void;\n}\n\ntype TabType = 'overview' | 'timeline' | 'evidence' | 'facts' | 'notes' | 'legal' | 'documents';\n\nconst tabs = [\n  { id: 'overview' as const, label: 'Overview', icon: Briefcase },\n  { id: 'timeline' as const, label: 'Timeline', icon: Calendar },\n  { id: 'evidence' as const, label: 'Evidence', icon: FileText },\n  { id: 'facts' as const, label: 'Facts', icon: User },\n  { id: 'notes' as const, label: 'Notes', icon: StickyNote },\n  { id: 'legal' as const, label: 'Legal Issues', icon: Scale },\n];\n\nexport function CaseDetailView({ caseId, onBack }: CaseDetailViewProps): JSX.Element {\n  const [activeTab, setActiveTab] = useState<TabType>('overview');\n  const { cases, loading } = useCases();\n  const { evidence } = useEvidence();\n  const [caseData, setCaseData] = useState<Case | null>(null);\n\n  useEffect(() => {\n    const foundCase = cases.find(c => c.id === caseId);\n    if (foundCase) {\n      setCaseData(foundCase);\n    }\n  }, [cases, caseId]);\n\n  if (loading || !caseData) {\n    return (\n      <div className=\"flex-1 flex items-center justify-center bg-gradient-to-br from-slate-950 via-blue-950 to-slate-950\">\n        <div className=\"text-blue-200\">Loading case details...</div>\n      </div>\n    );\n  }\n\n  const caseEvidence = evidence.filter(ev => ev.caseId === caseId);\n  const statusColor = caseData.status === 'active' ? 'text-green-400' : caseData.status === 'closed' ? 'text-gray-400' : 'text-amber-400';\n\n  const renderTabContent = (): JSX.Element | null => {\n    switch (activeTab) {\n      case 'overview':\n        return (\n          <div className=\"p-8 space-y-6\">\n            {/* Case Summary Cards */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"bg-slate-900/50 border border-blue-800/30 rounded-xl p-6\">\n                <div className=\"flex items-center gap-3 mb-3\">\n                  <div className=\"p-2 bg-blue-600/20 rounded-lg\">\n                    <FileText className=\"w-5 h-5 text-blue-400\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-white\">Evidence</h3>\n                </div>\n                <div className=\"text-3xl font-bold text-white mb-1\">{caseEvidence.length}</div>\n                <div className=\"text-sm text-blue-300\">Files attached</div>\n              </div>\n\n              <div className=\"bg-slate-900/50 border border-blue-800/30 rounded-xl p-6\">\n                <div className=\"flex items-center gap-3 mb-3\">\n                  <div className=\"p-2 bg-green-600/20 rounded-lg\">\n                    <Calendar className=\"w-5 h-5 text-green-400\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-white\">Timeline</h3>\n                </div>\n                <div className=\"text-3xl font-bold text-white mb-1\">-</div>\n                <div className=\"text-sm text-green-300\">Events tracked</div>\n              </div>\n\n              <div className=\"bg-slate-900/50 border border-blue-800/30 rounded-xl p-6\">\n                <div className=\"flex items-center gap-3 mb-3\">\n                  <div className=\"p-2 bg-purple-600/20 rounded-lg\">\n                    <StickyNote className=\"w-5 h-5 text-purple-400\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-white\">Notes</h3>\n                </div>\n                <div className=\"text-3xl font-bold text-white mb-1\">-</div>\n                <div className=\"text-sm text-purple-300\">Notes created</div>\n              </div>\n            </div>\n\n            {/* Case Description */}\n            <div className=\"bg-slate-900/50 border border-blue-800/30 rounded-xl p-6\">\n              <h3 className=\"text-lg font-semibold text-white mb-3\">Case Description</h3>\n              <p className=\"text-blue-200 leading-relaxed\">\n                {caseData.description || 'No description available'}\n              </p>\n            </div>\n\n            {/* Case Metadata */}\n            <div className=\"grid grid-cols-2 gap-6\">\n              <div className=\"bg-slate-900/50 border border-blue-800/30 rounded-xl p-6\">\n                <h3 className=\"text-sm font-medium text-blue-300 mb-2\">Created</h3>\n                <p className=\"text-white\">{new Date(caseData.createdAt).toLocaleDateString()}</p>\n              </div>\n              <div className=\"bg-slate-900/50 border border-blue-800/30 rounded-xl p-6\">\n                <h3 className=\"text-sm font-medium text-blue-300 mb-2\">Last Updated</h3>\n                <p className=\"text-white\">{new Date(caseData.updatedAt).toLocaleDateString()}</p>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'timeline':\n        return (\n          <div className=\"flex-1 overflow-y-auto\">\n            <TimelineView caseId={caseId} />\n          </div>\n        );\n\n      case 'evidence':\n        return (\n          <div className=\"p-8\">\n            <h2 className=\"text-2xl font-bold text-white mb-6\">Evidence Files</h2>\n            {caseEvidence.length === 0 ? (\n              <div className=\"bg-slate-900/50 border border-blue-800/30 rounded-xl p-12 text-center\">\n                <FileText className=\"w-16 h-16 text-blue-400 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-semibold text-white mb-2\">No Evidence Yet</h3>\n                <p className=\"text-blue-300\">Upload evidence files to get started</p>\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {caseEvidence.map(ev => (\n                  <div key={ev.id} className=\"bg-slate-900/50 border border-blue-800/30 rounded-lg p-4 hover:border-blue-600/50 transition-all\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <FileText className=\"w-5 h-5 text-blue-400\" />\n                      <h3 className=\"font-semibold text-white truncate\">{ev.title}</h3>\n                    </div>\n                    <p className=\"text-sm text-blue-300 truncate\">{ev.evidenceType}</p>\n                    <p className=\"text-xs text-gray-400 mt-2\">{new Date(ev.createdAt).toLocaleDateString()}</p>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        );\n\n      case 'facts':\n        return (\n          <div className=\"flex-1 overflow-y-auto\">\n            <div className=\"p-6 space-y-8\">\n              <div className=\"bg-slate-900/50 border border-blue-800/30 rounded-xl\">\n                <UserFactsPanel caseId={caseId} />\n              </div>\n              <div className=\"bg-slate-900/50 border border-blue-800/30 rounded-xl\">\n                <CaseFactsPanel caseId={caseId} />\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'notes':\n        return (\n          <div className=\"flex-1 overflow-y-auto\">\n            <div className=\"bg-slate-900/50 border border-blue-800/30 rounded-xl m-6\">\n              <NotesPanel caseId={caseId} />\n            </div>\n          </div>\n        );\n\n      case 'legal':\n        return (\n          <div className=\"flex-1 overflow-y-auto\">\n            <div className=\"bg-slate-900/50 border border-blue-800/30 rounded-xl m-6\">\n              <LegalIssuesPanel caseId={caseId} />\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"flex-1 flex flex-col overflow-hidden\">\n      {/* Header */}\n      <div className=\"bg-slate-900/50 border-b border-blue-800/30 p-6\">\n        <div className=\"flex items-center gap-4 mb-4\">\n          <button\n            onClick={onBack}\n            className=\"p-2 hover:bg-blue-600/20 rounded-lg transition-all text-blue-300\"\n            title=\"Back to Cases\"\n          >\n            <ArrowLeft className=\"w-5 h-5\" />\n          </button>\n          <div className=\"flex-1\">\n            <h1 className=\"text-2xl font-bold text-white\">{caseData.title}</h1>\n            <div className=\"flex items-center gap-4 mt-1\">\n              <span className={`text-sm font-medium ${statusColor}`}>\n                {caseData.status.charAt(0).toUpperCase() + caseData.status.slice(1)}\n              </span>\n              <span className=\"text-sm text-blue-300\">\n                {caseData.caseType.charAt(0).toUpperCase() + caseData.caseType.slice(1)}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"flex gap-2 overflow-x-auto\">\n          {tabs.map(tab => {\n            const Icon = tab.icon;\n            const isActive = activeTab === tab.id;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`flex items-center gap-2 px-4 py-2 rounded-lg font-medium transition-all whitespace-nowrap ${\n                  isActive\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-slate-800/50 text-blue-300 hover:bg-slate-700/50'\n                }`}\n              >\n                <Icon className=\"w-4 h-4\" />\n                <span>{tab.label}</span>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"flex-1 overflow-hidden bg-gradient-to-br from-slate-950 via-blue-950 to-slate-950\">\n        {renderTabContent()}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\cases\\components\\CasesView.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\cases\\components\\CasesView.tsx","messages":[{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":71,"column":32,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":71,"endColumn":34,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2438,2440],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":86,"column":34,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":86,"endColumn":36,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2884,2886],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":101,"column":34,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":101,"endColumn":36,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[3286,3288],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":116,"column":32,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":116,"endColumn":34,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[3700,3702],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":131,"column":33,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":131,"endColumn":35,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[4091,4093],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":226,"column":28,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":226,"endColumn":30,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[6595,6597],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":235,"column":64,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":235,"endColumn":66,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[6857,6859],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":498,"column":35,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":498,"endColumn":37,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[16658,16660],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useMemo } from 'react';\nimport { ChevronDown, FileText } from 'lucide-react';\nimport { useCases } from '../hooks/useCases';\nimport { useEvidence } from '@/features/documents';\nimport { SkeletonTree } from '../../../components/ui/Skeleton';\nimport type { Case } from '../../../models/Case';\nimport type { Evidence } from '../../../models/Evidence';\n\ninterface TimelineEvent {\n  date: string;\n  label: string;\n  status: 'completed' | 'current' | 'future';\n}\n\ninterface TreeNode {\n  id: string;\n  type: 'case' | 'category' | 'item';\n  label: string;\n  date?: string;\n  strength?: number; // 1-5 rating for evidence/argument strength\n  faultBreach?: string; // Legal violation/issue reference\n  children?: TreeNode[];\n}\n\ninterface CaseData {\n  id: number;\n  title: string;\n  status: string;\n  timeline: TimelineEvent[];\n  tree: TreeNode;\n}\n\n/**\n * Convert backend Case data to UI CaseData format with tree structure\n * Accepts evidence array to populate real evidence nodes\n */\nfunction transformCaseToTreeData(caseItem: Case, caseEvidence: Evidence[]): CaseData {\n  const createdDate = caseItem.createdAt.split('T')[0];\n  const updatedDate = caseItem.updatedAt.split('T')[0];\n\n  const timeline: TimelineEvent[] = [\n    { date: createdDate, label: 'Case Created', status: 'completed' },\n    { date: updatedDate, label: 'Last Updated', status: caseItem.status === 'active' ? 'current' : 'completed' },\n  ];\n\n  if (caseItem.status === 'closed') {\n    timeline.push({ date: updatedDate, label: 'Case Closed', status: 'completed' });\n  } else {\n    timeline.push({ date: '(TBD)', label: 'Expected Resolution', status: 'future' });\n  }\n\n  // Group evidence by type\n  const documents = caseEvidence.filter(e => e.evidenceType === 'document');\n  const photos = caseEvidence.filter(e => e.evidenceType === 'photo');\n  const emails = caseEvidence.filter(e => e.evidenceType === 'email');\n  const recordings = caseEvidence.filter(e => e.evidenceType === 'recording');\n  const notes = caseEvidence.filter(e => e.evidenceType === 'note');\n\n  // Build evidence nodes\n  const evidenceChildren: TreeNode[] = [];\n\n  if (documents.length > 0) {\n    evidenceChildren.push({\n      id: `docs-category-${caseItem.id}`,\n      type: 'category',\n      label: `Documents (${documents.length})`,\n      children: documents.map(doc => ({\n        id: `evidence-${doc.id}`,\n        type: 'item',\n        label: doc.title,\n        date: doc.obtainedDate || doc.createdAt.split('T')[0],\n        strength: 3, // Default strength - could be enhanced later\n      })),\n    });\n  }\n\n  if (photos.length > 0) {\n    evidenceChildren.push({\n      id: `photos-category-${caseItem.id}`,\n      type: 'category',\n      label: `Photos (${photos.length})`,\n      children: photos.map(photo => ({\n        id: `evidence-${photo.id}`,\n        type: 'item',\n        label: photo.title,\n        date: photo.obtainedDate || photo.createdAt.split('T')[0],\n        strength: 3,\n      })),\n    });\n  }\n\n  if (emails.length > 0) {\n    evidenceChildren.push({\n      id: `emails-category-${caseItem.id}`,\n      type: 'category',\n      label: `Emails (${emails.length})`,\n      children: emails.map(email => ({\n        id: `evidence-${email.id}`,\n        type: 'item',\n        label: email.title,\n        date: email.obtainedDate || email.createdAt.split('T')[0],\n        strength: 3,\n      })),\n    });\n  }\n\n  if (recordings.length > 0) {\n    evidenceChildren.push({\n      id: `recordings-category-${caseItem.id}`,\n      type: 'category',\n      label: `Recordings (${recordings.length})`,\n      children: recordings.map(rec => ({\n        id: `evidence-${rec.id}`,\n        type: 'item',\n        label: rec.title,\n        date: rec.obtainedDate || rec.createdAt.split('T')[0],\n        strength: 3,\n      })),\n    });\n  }\n\n  if (notes.length > 0) {\n    evidenceChildren.push({\n      id: `notes-category-${caseItem.id}`,\n      type: 'category',\n      label: `Notes (${notes.length})`,\n      children: notes.map(note => ({\n        id: `evidence-${note.id}`,\n        type: 'item',\n        label: note.title,\n        date: note.obtainedDate || note.createdAt.split('T')[0],\n        strength: 2, // Notes typically have lower evidentiary weight\n      })),\n    });\n  }\n\n  // If no evidence at all, show placeholder\n  if (evidenceChildren.length === 0) {\n    evidenceChildren.push({\n      id: `evidence-placeholder-${caseItem.id}`,\n      type: 'item',\n      label: 'No evidence yet',\n      date: createdDate,\n    });\n  }\n\n  const tree: TreeNode = {\n    id: `case-${caseItem.id}`,\n    type: 'case',\n    label: caseItem.title,\n    children: [\n      {\n        id: `evidence-${caseItem.id}`,\n        type: 'category',\n        label: `Evidence (${caseEvidence.length} items)`,\n        children: evidenceChildren,\n      },\n      {\n        id: `people-${caseItem.id}`,\n        type: 'category',\n        label: 'People',\n        children: [\n          {\n            id: `person-placeholder-${caseItem.id}`,\n            type: 'item',\n            label: 'No people yet',\n          },\n        ],\n      },\n      {\n        id: `events-${caseItem.id}`,\n        type: 'category',\n        label: 'Events',\n        children: [\n          {\n            id: `event-created-${caseItem.id}`,\n            type: 'item',\n            label: 'Case Created',\n            date: createdDate,\n          },\n          {\n            id: `event-updated-${caseItem.id}`,\n            type: 'item',\n            label: 'Last Updated',\n            date: updatedDate,\n          },\n        ],\n      },\n    ],\n  };\n\n  return {\n    id: caseItem.id,\n    title: caseItem.title,\n    status: caseItem.status,\n    timeline,\n    tree,\n  };\n}\n\ninterface CasesViewProps {\n  onCaseSelect?: (caseId: number) => void;\n}\n\nexport function CasesView({ onCaseSelect }: CasesViewProps): JSX.Element {\n  const { cases, loading: casesLoading, error: casesError } = useCases();\n  const { evidence, loading: evidenceLoading, error: evidenceError } = useEvidence();\n  const [selectedCaseId, setSelectedCaseId] = useState<number | null>(null);\n  const [hoveredNodeId, setHoveredNodeId] = useState<string | null>(null);\n\n  const transformedCases = useMemo(() => {\n    if (!cases || cases.length === 0) {\n      return [];\n    }\n    return cases.map(caseItem => {\n      // Filter evidence for this specific case\n      const caseEvidence = evidence.filter(ev => ev.caseId === caseItem.id);\n      return transformCaseToTreeData(caseItem, caseEvidence);\n    });\n  }, [cases, evidence]);\n\n  // Combine loading states\n  const loading = casesLoading || evidenceLoading;\n\n  // Combine error states\n  const error = casesError || evidenceError;\n\n  const selectedCase = useMemo(() => {\n    if (transformedCases.length === 0) {\n      return null;\n    }\n    if (selectedCaseId === null) {\n      return transformedCases[0];\n    }\n    return transformedCases.find(c => c.id === selectedCaseId) || transformedCases[0];\n  }, [transformedCases, selectedCaseId]);\n\n  // Calculate width needed for each subtree\n  const calculateSubtreeWidth = (node: TreeNode): number => {\n    // Box widths: case=180, category=160, item=150\n    const nodeWidth = node.type === 'case' ? 180 : node.type === 'category' ? 160 : 150;\n\n    if (!node.children || node.children.length === 0) {\n      return nodeWidth;\n    }\n\n    const childWidths = node.children.map(calculateSubtreeWidth);\n    const totalChildWidth = childWidths.reduce((sum, width) => sum + width, 0);\n    const gaps = (node.children.length - 1) * 20; // Gap between children (reduced)\n\n    return Math.max(totalChildWidth + gaps, nodeWidth);\n  };\n\n  const renderTreeNode = (node: TreeNode, x: number, y: number, parentX?: number, parentY?: number): JSX.Element[] => {\n    const elements: JSX.Element[] = [];\n\n    // Box dimensions based on type (reduced sizes)\n    const boxWidth = node.type === 'case' ? 180 : node.type === 'category' ? 160 : 150;\n    const boxHeight = node.type === 'case' ? 90 : node.type === 'category' ? 60 : 100;\n    const boxX = x - boxWidth / 2;\n    const boxY = y - boxHeight / 2;\n\n    // Draw branch from parent to this node\n    if (parentX !== undefined && parentY !== undefined) {\n      // Parent bottom center, child top center\n      const parentBoxHeight = parentY === 100 ? 90 : 60; // Case box=90, category=60\n      const startY = parentY + parentBoxHeight / 2; // Bottom of parent box\n      const endY = y - boxHeight / 2; // Top of current box\n      const midY = startY + (endY - startY) * 0.4;\n      const path = `M ${parentX} ${startY} Q ${parentX} ${midY} ${x} ${endY}`;\n\n      elements.push(\n        <path\n          key={`branch-${node.id}`}\n          d={path}\n          stroke={node.type === 'category' ? '#A0522D' : '#D2691E'}\n          strokeWidth={node.type === 'category' ? 5 : 2}\n          fill=\"none\"\n          strokeLinecap=\"round\"\n          className=\"transition-all duration-300\"\n          style={{\n            filter: hoveredNodeId === node.id ? 'brightness(1.3)' : 'none',\n          }}\n        />,\n      );\n    }\n\n    // Box colors based on type\n    const boxColor = node.type === 'case' ? '#8B4513' :\n      node.type === 'category' ? '#A0522D' :\n        '#1e40af'; // Dark blue for items\n    const borderColor = node.type === 'case' ? '#654321' :\n      node.type === 'category' ? '#8B4513' :\n        '#3b82f6'; // Blue border for items\n\n    // Render strength stars (if item)\n    const renderStars = (strength: number): string => {\n      return '‚òÖ'.repeat(strength) + '‚òÜ'.repeat(5 - strength);\n    };\n\n    // Draw box\n    elements.push(\n      <g key={`node-${node.id}`}>\n        {/* Box background */}\n        <rect\n          x={boxX}\n          y={boxY}\n          width={boxWidth}\n          height={boxHeight}\n          fill={boxColor}\n          stroke={borderColor}\n          strokeWidth={3}\n          rx={8}\n          className=\"transition-all duration-300 cursor-pointer\"\n          style={{\n            filter: hoveredNodeId === node.id ?\n              'brightness(1.3) drop-shadow(0 0 12px rgba(59, 130, 246, 0.8))' :\n              'drop-shadow(0 4px 6px rgba(0,0,0,0.4))',\n          }}\n          onMouseEnter={() => setHoveredNodeId(node.id)}\n          onMouseLeave={() => setHoveredNodeId(null)}\n          onClick={() => {\n            // If this is a case node, navigate to detail\n            if (node.type === 'case' && node.id.startsWith('case-')) {\n              const caseId = parseInt(node.id.replace('case-', ''));\n              if (onCaseSelect && !isNaN(caseId)) {\n                void onCaseSelect(caseId);\n              }\n            }\n          }}\n        />\n\n        {/* Title */}\n        <text\n          x={x}\n          y={y - boxHeight / 2 + 20}\n          textAnchor=\"middle\"\n          className=\"font-bold fill-white pointer-events-none\"\n          style={{ fontSize: node.type === 'case' ? '14px' : node.type === 'category' ? '12px' : '11px' }}\n        >\n          {node.label}\n        </text>\n\n        {/* Strength indicator (only for items) */}\n        {node.strength && node.type === 'item' && (\n          <text\n            x={x}\n            y={y + 5}\n            textAnchor=\"middle\"\n            className=\"fill-yellow-400 pointer-events-none\"\n            style={{ fontSize: '12px' }}\n          >\n            {renderStars(node.strength)}\n          </text>\n        )}\n\n        {/* Fault/Breach reference (only for items) */}\n        {node.faultBreach && node.type === 'item' && (\n          <text\n            x={x}\n            y={y + boxHeight / 2 - 20}\n            textAnchor=\"middle\"\n            className=\"fill-gray-300 pointer-events-none\"\n            style={{ fontSize: '9px' }}\n          >\n            {node.faultBreach.length > 25 ? node.faultBreach.substring(0, 25) + '...' : node.faultBreach}\n          </text>\n        )}\n\n        {/* Date (if present) */}\n        {node.date && (\n          <text\n            x={x}\n            y={y + boxHeight / 2 - 5}\n            textAnchor=\"middle\"\n            className=\"fill-blue-300 pointer-events-none\"\n            style={{ fontSize: '8px' }}\n          >\n            {node.date}\n          </text>\n        )}\n      </g>,\n    );\n\n    // Recursively draw children with proper spacing\n    if (node.children && node.children.length > 0) {\n      const childWidths = node.children.map(calculateSubtreeWidth);\n      const totalWidth = childWidths.reduce((sum, width) => sum + width, 0);\n      const gaps = (node.children.length - 1) * 20;\n      const totalSpan = totalWidth + gaps;\n\n      let currentX = x - totalSpan / 2;\n\n      node.children.forEach((child, index) => {\n        const childWidth = childWidths[index];\n        const childX = currentX + childWidth / 2;\n        const childY = y + 160; // Vertical spacing between levels (reduced)\n\n        elements.push(...renderTreeNode(child, childX, childY, x, y));\n\n        currentX += childWidth + 20; // Move to next child position (reduced gap)\n      });\n    }\n\n    return elements;\n  };\n\n  // Show loading state with skeleton tree\n  if (loading) {\n    return (\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        {/* Case Selector Skeleton */}\n        <div className=\"h-20 bg-slate-900/50 border-b border-blue-800/30 flex items-center px-6\">\n          <div className=\"w-64 h-10 bg-slate-800/50 rounded-lg animate-pulse\" />\n        </div>\n\n        {/* Timeline Skeleton */}\n        <div className=\"h-28 bg-gradient-to-b from-slate-900/30 to-transparent border-b border-blue-800/20 px-6 py-4\">\n          <div className=\"max-w-5xl mx-auto\">\n            <div className=\"relative h-full flex items-center\">\n              <div className=\"absolute left-0 right-0 h-1 bg-slate-700/50 rounded-full\" style={{ top: '40px' }} />\n              <div className=\"relative w-full flex justify-between\">\n                {Array.from({ length: 3 }).map((_, index) => (\n                  <div key={index} className=\"flex flex-col items-center\" style={{ flex: 1 }}>\n                    <div className=\"w-4 h-4 rounded-full bg-slate-600/50 animate-pulse\" />\n                    <div className=\"mt-3 space-y-1\">\n                      <div className=\"h-3 w-20 bg-slate-700/50 rounded animate-pulse\" />\n                      <div className=\"h-2 w-16 bg-slate-700/30 rounded animate-pulse\" />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Tree Skeleton */}\n        <div\n          className=\"flex-1 overflow-auto bg-gradient-to-br from-slate-950 via-blue-950 to-slate-950\"\n          role=\"status\"\n          aria-live=\"polite\"\n          aria-busy=\"true\"\n        >\n          <SkeletonTree />\n          <span className=\"sr-only\">Loading case tree...</span>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <div className=\"flex-1 flex flex-col items-center justify-center bg-gradient-to-br from-slate-950 via-blue-950 to-slate-950 p-8\">\n        <div className=\"max-w-md text-center\">\n          <div className=\"w-24 h-24 bg-red-600/20 rounded-full flex items-center justify-center mx-auto mb-6\">\n            <FileText className=\"w-12 h-12 text-red-400\" />\n          </div>\n          <h2 className=\"text-2xl font-bold text-white mb-3\">Error Loading Cases</h2>\n          <p className=\"text-red-200 mb-6\">{error}</p>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-all font-medium\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Show empty state when no cases\n  if (!selectedCase) {\n    return (\n      <div className=\"flex-1 flex flex-col items-center justify-center bg-gradient-to-br from-slate-950 via-blue-950 to-slate-950 p-8\">\n        <div className=\"max-w-md text-center\">\n          <div className=\"w-24 h-24 bg-blue-600/20 rounded-full flex items-center justify-center mx-auto mb-6\">\n            <FileText className=\"w-12 h-12 text-blue-400\" />\n          </div>\n          <h2 className=\"text-2xl font-bold text-white mb-3\">No Cases Yet</h2>\n          <p className=\"text-blue-200 mb-6\">\n            Create your first case to start organizing evidence, documents, and legal information.\n          </p>\n          <p className=\"text-gray-400 text-sm\">\n            Use the chat to create a case, or wait for the case management feature.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-1 flex flex-col overflow-hidden\">\n      {/* Case Selector */}\n      <div className=\"h-20 bg-slate-900/50 border-b border-blue-800/30 flex items-center px-6\">\n        <div className=\"relative\">\n          <select\n            value={selectedCaseId || ''}\n            onChange={(e) => setSelectedCaseId(Number(e.target.value))}\n            className=\"appearance-none bg-slate-800/50 border border-blue-700/30 rounded-lg px-4 py-2 pr-10 text-white text-sm font-medium focus:outline-none focus:ring-2 focus:ring-blue-500 cursor-pointer transition-all\"\n          >\n            {transformedCases.map(c => (\n              <option key={c.id} value={c.id}>{c.title}</option>\n            ))}\n          </select>\n          <ChevronDown className=\"absolute right-3 top-1/2 -translate-y-1/2 w-4 h-4 text-blue-300 pointer-events-none\" />\n        </div>\n      </div>\n\n      {/* Timeline Tracker */}\n      <div className=\"h-28 bg-gradient-to-b from-slate-900/30 to-transparent border-b border-blue-800/20 px-6 py-4\">\n        <div className=\"max-w-5xl mx-auto\">\n          <div className=\"relative h-full flex items-center\">\n            {/* Timeline line */}\n            <div className=\"absolute left-0 right-0 h-1 bg-slate-700/50 rounded-full\" style={{ top: '40px' }} />\n\n            {/* Timeline events */}\n            <div className=\"relative w-full flex justify-between\">\n              {selectedCase?.timeline.map((event, index) => {\n                const isCompleted = event.status === 'completed';\n                const isCurrent = event.status === 'current';\n\n                return (\n                  <div key={index} className=\"flex flex-col items-center group relative\" style={{ flex: 1 }}>\n                    {/* Marker */}\n                    <div className=\"relative z-10\">\n                      <div\n                        className={`w-4 h-4 rounded-full border-4 transition-all duration-300 ${\n                          isCompleted ? 'bg-gray-400 border-gray-300' :\n                            isCurrent ? 'bg-blue-500 border-blue-400 animate-pulse' :\n                              'bg-slate-600 border-slate-500'\n                        }`}\n                      />\n                      {isCurrent && (\n                        <div className=\"absolute inset-0 bg-blue-500/30 rounded-full animate-ping\" />\n                      )}\n                    </div>\n\n                    {/* Label */}\n                    <div className=\"mt-3 text-center\">\n                      <div className={`text-xs font-medium ${\n                        isCompleted ? 'text-gray-400' :\n                          isCurrent ? 'text-blue-300' :\n                            'text-slate-400'\n                      }`}>\n                        {event.label}\n                      </div>\n                      <div className=\"text-[10px] text-slate-500 mt-1\">{event.date}</div>\n                    </div>\n\n                    {/* Tooltip on hover */}\n                    <div className=\"absolute bottom-full mb-2 hidden group-hover:block\">\n                      <div className=\"bg-slate-800 text-white text-xs px-3 py-2 rounded shadow-lg whitespace-nowrap\">\n                        {event.label}\n                        <div className=\"text-blue-300 mt-1\">{event.date}</div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tree Visualization */}\n      <div className=\"flex-1 overflow-auto bg-gradient-to-br from-slate-950 via-blue-950 to-slate-950 p-8\">\n        <svg\n          viewBox=\"0 0 2000 1200\"\n          className=\"w-full h-full transition-opacity duration-300\"\n          style={{ minHeight: '800px' }}\n        >\n          {renderTreeNode(selectedCase.tree, 1000, 100)}\n        </svg>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\cases\\hooks\\useCases.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\cases\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\cases\\services\\CaseService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\chat\\components\\ChatInput.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\chat\\components\\ChatInput.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\chat\\components\\ChatNotesPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\chat\\components\\ChatPostItNotes.tsx","messages":[{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type error typed assigned to a parameter of type `string | undefined`.","line":42,"column":27,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":42,"endColumn":67},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":42,"column":42,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":42,"endColumn":44,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1483,1485],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport type { CaseFact } from '../../../models/CaseFact';\n\ninterface ChatPostItNotesProps {\n  caseId?: number | null;\n}\n\n/**\n * ChatPostItNotes - AI-Controlled Fact Display\n *\n * Displays facts that the AI has gathered and stored in the database.\n * Read-only - facts are automatically populated by AI function calling.\n *\n * Categories displayed:\n * - User Facts: Parties, witnesses, personal info\n * - Case Facts: Timelines, evidence, events, locations\n *\n * @param caseId - Case ID to load facts for\n */\nexport function ChatPostItNotes({ caseId }: ChatPostItNotesProps): JSX.Element {\n  const [userFacts, setUserFacts] = useState<string>('');\n  const [caseFacts, setCaseFacts] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  // Fetch facts whenever caseId changes\n  useEffect(() => {\n    const loadFacts = async (): Promise<void> => {\n      if (!caseId || !window.justiceAPI) {\n        // No case selected - show empty state\n        setUserFacts('üë§ No user facts yet\\n\\nSelect a case and chat with the AI to gather facts.');\n        setCaseFacts('‚öñÔ∏è No case facts yet\\n\\nThe AI will automatically store important information here.');\n        return;\n      }\n\n      setLoading(true);\n\n      try {\n        // Fetch all facts for this case\n        const response = await window.justiceAPI.getFacts(caseId);\n\n        if (!response.success || !response.data) {\n          throw new Error(response.error || 'Failed to load facts');\n        }\n\n        const facts: CaseFact[] = response.data;\n\n        // Separate facts by category\n        const userCategories = ['witness', 'other']; // User-related facts\n        const caseCategories = ['timeline', 'evidence', 'location', 'communication']; // Case-related facts\n\n        const userFactsList = facts.filter(f => userCategories.includes(f.factCategory));\n        const caseFactsList = facts.filter(f => caseCategories.includes(f.factCategory));\n\n        // Format user facts\n        if (userFactsList.length === 0) {\n          setUserFacts('üë§ No user facts yet\\n\\nThe AI will gather information about parties and witnesses here.');\n        } else {\n          const formatted = userFactsList\n            .map((f, i) => `${i + 1}. ${f.factContent}`)\n            .join('\\n\\n');\n          setUserFacts(`üë§ User Facts (${userFactsList.length})\\n\\n${formatted}`);\n        }\n\n        // Format case facts\n        if (caseFactsList.length === 0) {\n          setCaseFacts('‚öñÔ∏è No case facts yet\\n\\nThe AI will gather timeline, evidence, and location information here.');\n        } else {\n          const formatted = caseFactsList\n            .map((f, i) => `${i + 1}. ${f.factContent}`)\n            .join('\\n\\n');\n          setCaseFacts(`‚öñÔ∏è Case Facts (${caseFactsList.length})\\n\\n${formatted}`);\n        }\n      } catch (error) {\n        console.error('Failed to load case facts:', error);\n        setUserFacts('‚ùå Error loading facts\\n\\nPlease try refreshing.');\n        setCaseFacts('‚ùå Error loading facts\\n\\nPlease try refreshing.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    void loadFacts();\n  }, [caseId]);\n\n  return (\n    <div className=\"mb-8 flex justify-center\">\n      {/* Post-it Notes Container - Centered */}\n      <div className=\"flex gap-6 items-start\">\n        {/* User Facts Note - Blue */}\n        <div\n          className=\"\n            bg-gradient-to-br from-blue-200 via-blue-100 to-blue-200\n            shadow-lg shadow-blue-400/50\n            w-72 min-h-[200px] p-5 rounded-sm\n            transform transition-all duration-300 ease-out\n            hover:scale-105 hover:rotate-0 hover:shadow-xl\n            relative group\n            animate-in slide-in-from-top-4 fade-in duration-500\n          \"\n          style={{\n            transform: 'rotate(-2deg)',\n          }}\n        >\n          {/* Post-it top tape effect */}\n          <div className=\"absolute -top-2 left-1/2 -translate-x-1/2 w-20 h-4 bg-blue-600/20 rounded-sm shadow-sm\" />\n\n          {/* Title */}\n          <h3 className=\"text-blue-800 font-bold text-lg mb-3 font-['Segoe_Print','Comic_Sans_MS',cursive]\">\n            üë§ User Facts\n          </h3>\n\n          {/* Note content - READ ONLY */}\n          <div className=\"w-full h-36 text-gray-800 font-['Segoe_Print','Comic_Sans_MS',cursive] text-sm leading-relaxed whitespace-pre-wrap break-words overflow-auto\">\n            {loading ? '‚è≥ Loading...' : userFacts}\n          </div>\n\n          {/* Note footer with shadow line */}\n          <div className=\"absolute bottom-3 left-0 right-0 h-px bg-gradient-to-r from-transparent via-blue-400/30 to-transparent\" />\n\n          {/* AI-controlled badge */}\n          <div className=\"absolute bottom-1 right-3 text-xs text-blue-600/60 font-['Segoe_Print']\">\n            ü§ñ AI Memory\n          </div>\n        </div>\n\n        {/* Case Facts Note - Yellow */}\n        <div\n          className=\"\n            bg-gradient-to-br from-yellow-200 via-yellow-100 to-yellow-200\n            shadow-lg shadow-yellow-400/50\n            w-72 min-h-[200px] p-5 rounded-sm\n            transform transition-all duration-300 ease-out\n            hover:scale-105 hover:rotate-0 hover:shadow-xl\n            relative group\n            animate-in slide-in-from-top-4 fade-in duration-500\n          \"\n          style={{\n            transform: 'rotate(2deg)',\n            animationDelay: '100ms',\n          }}\n        >\n          {/* Post-it top tape effect */}\n          <div className=\"absolute -top-2 left-1/2 -translate-x-1/2 w-20 h-4 bg-yellow-600/20 rounded-sm shadow-sm\" />\n\n          {/* Title */}\n          <h3 className=\"text-yellow-800 font-bold text-lg mb-3 font-['Segoe_Print','Comic_Sans_MS',cursive]\">\n            ‚öñÔ∏è Case Facts\n          </h3>\n\n          {/* Note content - READ ONLY */}\n          <div className=\"w-full h-36 text-gray-800 font-['Segoe_Print','Comic_Sans_MS',cursive] text-sm leading-relaxed whitespace-pre-wrap break-words overflow-auto\">\n            {loading ? '‚è≥ Loading...' : caseFacts}\n          </div>\n\n          {/* Note footer with shadow line */}\n          <div className=\"absolute bottom-3 left-0 right-0 h-px bg-gradient-to-r from-transparent via-yellow-400/30 to-transparent\" />\n\n          {/* AI-controlled badge */}\n          <div className=\"absolute bottom-1 right-3 text-xs text-yellow-600/60 font-['Segoe_Print']\">\n            ü§ñ AI Memory\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\chat\\components\\ChatWindow.tsx","messages":[{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":53,"column":20,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":53,"endColumn":22,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1691,1693],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-optional-chain","severity":1,"message":"Prefer using an optional chain expression instead, as it's more concise and easier to read.","line":69,"column":53,"nodeType":null,"messageId":"preferOptionalChain","endLine":69,"endColumn":98,"suggestions":[{"fix":{"range":[2361,2406],"text":"profileResult.data?.name"},"messageId":"optionalChainSuggest","desc":"Change to an optional chain."}]},{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":153,"column":33,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":153,"endColumn":46}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport { useAI } from '../hooks/useAI';\nimport { MessageList } from './MessageList';\nimport { FloatingChatInput } from './FloatingChatInput';\nimport { ErrorDisplay } from '../../../components/ErrorDisplay';\nimport { ConfirmDialog } from '../../../components/ConfirmDialog';\nimport { exportChatToPDF } from '../../../utils/exportToPDF';\nimport { BiDownload } from 'react-icons/bi';\nimport { Trash2 } from 'lucide-react';\n\ninterface ChatWindowProps {\n  sidebarExpanded?: boolean;\n  caseId?: number | null;\n}\n\n/**\n * Main chat window component\n *\n * Top-level container for the chat interface.\n * Integrates useAI hook for AI streaming and manages chat state.\n *\n * Layout structure:\n * - Header: App title and metadata\n * - MessageList: Scrollable message container (flex-1)\n * - ChatInput: Input area placeholder (Agent Echo will build actual input)\n *\n * Features:\n * - AI streaming integration via useAI hook\n * - Full-screen layout (h-screen)\n * - Calm blue theme\n * - Error display\n * - Loading states\n *\n * @returns {JSX.Element} Chat window component\n */\nexport function ChatWindow({ sidebarExpanded = false, caseId }: ChatWindowProps): JSX.Element {\n  const [clearChatConfirmOpen, setClearChatConfirmOpen] = useState(false);\n  const [welcomeMessageSent, setWelcomeMessageSent] = useState(false);\n\n  const {\n    messages,\n    loadingState,\n    error,\n    isStreaming,\n    streamingContent,\n    thinkingContent, // NEW: AI reasoning content\n    currentSources, // NEW: Legal source citations\n    progressStages, // NEW: Cumulative progress timeline\n    messagesEndRef,\n    sendMessage,\n    clearMessages,\n    loadMessages,\n  } = useAI(caseId || undefined);\n\n  // First-time user welcome flow\n  useEffect(() => {\n    const checkFirstTimeUser = async (): Promise<void> => {\n      if (!window.justiceAPI || welcomeMessageSent || messages.length > 0) {\n        return;\n      }\n\n      try {\n        // Check if user has any conversations\n        const conversationsResult = await window.justiceAPI.getAllConversations();\n        const hasConversations = conversationsResult.success && conversationsResult.data && conversationsResult.data.length > 0;\n\n        // Check if user profile is empty\n        const profileResult = await window.justiceAPI.getUserProfile();\n        const hasProfile = profileResult.success && profileResult.data && profileResult.data.name;\n\n        // First-time user: no conversations and no profile\n        if (!hasConversations && !hasProfile) {\n          // Auto-inject welcome message\n          const welcomeMessage = {\n            role: 'assistant' as const,\n            content: `Welcome to Justice Companion! üëã\n\nI'm here to help you navigate your legal situation with care and precision.\n\nBefore we dive into the specifics of your case, I'd like to get to know you a bit better so I can provide the most relevant assistance.\n\n**Let's start with a few quick questions:**\n\n1. **What's your name?**\n\n2. **What's your email address?** (optional, but helpful for records)\n\n3. **In a nutshell, what brings you here today?** (e.g., \"I was unfairly dismissed from my job\" or \"I'm having issues with my landlord\")\n\nTake your time - I'm here to listen and help you work through this step by step. ü§ù`,\n            timestamp: new Date().toISOString(),\n          };\n\n          loadMessages([welcomeMessage]);\n          setWelcomeMessageSent(true);\n        }\n      } catch (error) {\n        console.error('Failed to check first-time user:', error);\n      }\n    };\n\n    void checkFirstTimeUser();\n  }, [messages.length, welcomeMessageSent, loadMessages]);\n\n  const handleExportPDF = (): void => {\n    void exportChatToPDF(messages, []);\n  };\n\n  return (\n    <div className=\"flex flex-col h-full overflow-hidden bg-gradient-to-br from-slate-800 via-blue-900 to-indigo-900 relative\">\n      {/* Error Display */}\n      <ErrorDisplay error={error} />\n\n      {/* Action Buttons - Top Right */}\n      {messages.length > 0 && (\n        <div className=\"absolute top-4 right-4 z-30 flex gap-2\">\n          <button\n            onClick={() => setClearChatConfirmOpen(true)}\n            disabled={isStreaming}\n            className=\"flex items-center gap-2 px-4 py-2 bg-slate-700/90 backdrop-blur-sm text-white rounded-lg hover:bg-slate-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors focus:outline-none focus:ring-2 focus:ring-slate-500 focus:ring-offset-2 shadow-lg\"\n            aria-label=\"Clear chat\"\n            title=\"Clear current chat messages\"\n          >\n            <Trash2 className=\"w-4 h-4\" />\n            <span className=\"text-sm font-medium\">Clear</span>\n          </button>\n          <button\n            onClick={handleExportPDF}\n            disabled={isStreaming}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600/90 backdrop-blur-sm text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 shadow-lg\"\n            aria-label=\"Export to PDF\"\n          >\n            <BiDownload className=\"w-5 h-5\" />\n            <span className=\"text-sm font-medium\">Export PDF</span>\n          </button>\n        </div>\n      )}\n\n      {/* Message List - StreamingIndicator now renders inline */}\n      <MessageList\n        messages={messages}\n        streamingContent={streamingContent}\n        isStreaming={isStreaming}\n        loadingState={loadingState}\n        thinkingContent={thinkingContent}\n        currentSources={currentSources}\n        progressStages={progressStages}\n        messagesEndRef={messagesEndRef}\n        caseId={caseId}\n      />\n\n      {/* Floating Chat Input - centered to chat content */}\n      <FloatingChatInput onSend={sendMessage} disabled={isStreaming} isSidebarOpen={sidebarExpanded} />\n\n      {/* Clear Chat Confirmation Dialog */}\n      <ConfirmDialog\n        isOpen={clearChatConfirmOpen}\n        title=\"Clear Chat\"\n        message=\"Are you sure you want to clear all messages in the current chat? This will only clear the display, not delete saved conversations.\"\n        confirmText=\"Clear\"\n        cancelText=\"Cancel\"\n        variant=\"danger\"\n        onConfirm={() => {\n          clearMessages();\n          setClearChatConfirmOpen(false);\n        }}\n        onCancel={() => setClearChatConfirmOpen(false)}\n      />\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\chat\\components\\FloatingChatInput.tsx","messages":[{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":199,"column":21,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":199,"endColumn":38}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useRef, useEffect, type KeyboardEvent, type ChangeEvent } from 'react';\nimport { BiMicrophone, BiPaperclip, BiSend, BiX } from 'react-icons/bi';\nimport { useVoiceRecognition } from '../../../hooks/useVoiceRecognition';\n\n/**\n * Props for FloatingChatInput component\n */\ninterface FloatingChatInputProps {\n  /** Callback when user sends a message */\n  onSend: (message: string) => void;\n  /** Whether input is disabled (e.g., during streaming) */\n  disabled?: boolean;\n  /** Placeholder text for the textarea */\n  placeholder?: string;\n  /** Whether sidebar is open (adjusts positioning) */\n  isSidebarOpen?: boolean;\n}\n\ninterface UploadedFile {\n  fileName: string;\n  fileSize: number;\n  extractedText?: string;\n}\n\n/**\n * FloatingChatInput - ChatGPT-style floating input with voice and upload\n *\n * Features:\n * - Floating centered at bottom\n * - Voice input button (left)\n * - File upload button (left of voice)\n * - Auto-resize textarea\n * - Send button (right)\n * - Keyboard shortcuts\n * - Calm blue theme\n *\n * @param props - FloatingChatInputProps\n * @returns React component\n */\nexport function FloatingChatInput({\n  onSend,\n  disabled = false,\n  placeholder = 'Ask a legal question...',\n  isSidebarOpen = false,\n}: FloatingChatInputProps): JSX.Element {\n  const [value, setValue] = useState<string>('');\n  const [uploadedFile, setUploadedFile] = useState<UploadedFile | null>(null);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  // Voice recognition hook\n  const {\n    isListening,\n    transcript,\n    interimTranscript,\n    startListening,\n    stopListening,\n    error: voiceError,\n  } = useVoiceRecognition();\n\n  // Auto-resize textarea based on content (max 5 lines ‚âà 120px)\n  const MAX_HEIGHT = 120;\n\n  // Update value when voice transcript changes\n  useEffect(() => {\n    if (transcript) {\n      setValue(prev => {\n        const newValue = prev ? `${prev} ${transcript}` : transcript;\n        return newValue;\n      });\n    }\n  }, [transcript]);\n\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      const newHeight = Math.min(textareaRef.current.scrollHeight, MAX_HEIGHT);\n      textareaRef.current.style.height = `${newHeight}px`;\n    }\n  }, [value]);\n\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>): void => {\n    setValue(e.target.value);\n  };\n\n  const handleKeyDown = (e: KeyboardEvent<HTMLTextAreaElement>): void => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  const handleSend = (): void => {\n    let messageToSend = value.trim();\n\n    // Include file text if file is uploaded\n    if (uploadedFile?.extractedText) {\n      messageToSend = `${messageToSend}\\n\\n[Attached file: ${uploadedFile.fileName}]\\n${uploadedFile.extractedText}`;\n    }\n\n    if (messageToSend && !disabled) {\n      onSend(messageToSend);\n      setValue('');\n      setUploadedFile(null);\n    }\n  };\n\n  const handleVoiceClick = (): void => {\n    if (isListening) {\n      stopListening();\n    } else {\n      startListening();\n    }\n  };\n\n  const handleFileClick = async (): Promise<void> => {\n    try {\n      const selectResult = await window.justiceAPI.selectFile({\n        filters: [\n          { name: 'Documents', extensions: ['pdf', 'docx', 'txt'] },\n          { name: 'Images', extensions: ['jpg', 'jpeg', 'png'] },\n        ],\n        properties: ['openFile'],\n      });\n\n      if (selectResult.success && !selectResult.canceled && selectResult.filePaths.length > 0) {\n        const filePath = selectResult.filePaths[0];\n\n        const uploadResult = await window.justiceAPI.uploadFile(filePath);\n\n        if (uploadResult.success) {\n          setUploadedFile({\n            fileName: uploadResult.fileName,\n            fileSize: uploadResult.fileSize,\n            extractedText: uploadResult.extractedText,\n          });\n        } else {\n          console.error('File upload failed:', uploadResult.error);\n        }\n      }\n    } catch (error) {\n      console.error('File selection error:', error);\n    }\n  };\n\n  const handleRemoveFile = (): void => {\n    setUploadedFile(null);\n  };\n\n  const isButtonDisabled = disabled || (!value.trim() && !uploadedFile);\n\n  const formatFileSize = (bytes: number): string => {\n    if (bytes === 0) {\n      return '0 Bytes';\n    }\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return Math.round((bytes / Math.pow(k, i)) * 100) / 100 + ' ' + sizes[i];\n  };\n\n  return (\n    <div className={`fixed bottom-6 w-full max-w-4xl px-6 z-50 animate-slide-up transition-all duration-300 ${\n      isSidebarOpen ? 'left-[calc(50%+160px)] -translate-x-1/2' : 'left-[calc(50%+32px)] -translate-x-1/2'\n    }`}>\n      <div className=\"bg-white rounded-2xl shadow-2xl border border-gray-200\">\n        {/* File Preview (if file uploaded) */}\n        {uploadedFile && (\n          <div className=\"border-b border-gray-200 p-3\">\n            <div className=\"flex items-center gap-2 bg-blue-50 rounded-lg px-3 py-2 border border-blue-200\">\n              <BiPaperclip className=\"w-4 h-4 text-blue-600\" />\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"text-sm font-medium text-gray-900 truncate\">{uploadedFile.fileName}</div>\n                <div className=\"text-xs text-gray-500\">{formatFileSize(uploadedFile.fileSize)}</div>\n              </div>\n              <button\n                onClick={handleRemoveFile}\n                className=\"p-1 text-gray-500 hover:text-red-600 hover:bg-red-50 rounded transition-colors\"\n                aria-label=\"Remove file\"\n              >\n                <BiX className=\"w-5 h-5\" />\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Voice Error Display */}\n        {voiceError && (\n          <div className=\"border-b border-gray-200 p-3\">\n            <div className=\"text-xs text-red-600 bg-red-50 rounded-lg px-3 py-2\">\n              {voiceError}\n            </div>\n          </div>\n        )}\n\n        <div className=\"flex items-end gap-2 p-3\">\n          {/* File Upload Button */}\n          <button\n            type=\"button\"\n            onClick={handleFileClick}\n            disabled={disabled || !!uploadedFile}\n            aria-label=\"Attach file\"\n            className=\"p-2.5 text-gray-500 hover:text-blue-600 hover:bg-blue-50 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <BiPaperclip className=\"w-5 h-5\" />\n          </button>\n\n          {/* Voice Input Button */}\n          <button\n            type=\"button\"\n            onClick={handleVoiceClick}\n            disabled={disabled}\n            aria-label={isListening ? 'Stop listening' : 'Start voice input'}\n            className={`p-2.5 rounded-lg transition-all focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed ${\n              isListening\n                ? 'text-red-600 bg-red-50 animate-pulse'\n                : 'text-gray-500 hover:text-blue-600 hover:bg-blue-50'\n            }`}\n          >\n            <BiMicrophone className=\"w-5 h-5\" />\n          </button>\n\n          {/* Textarea */}\n          <div className=\"flex-1 relative\">\n            <textarea\n              ref={textareaRef}\n              value={value}\n              onChange={handleChange}\n              onKeyDown={handleKeyDown}\n              placeholder={placeholder}\n              disabled={disabled}\n              aria-label=\"Message input\"\n              aria-disabled={disabled}\n              className={`\n                w-full resize-none rounded-lg border-0 px-3 py-2\n                focus:outline-none focus:ring-0\n                transition-colors bg-transparent\n                ${\n    disabled\n      ? 'text-gray-400 cursor-not-allowed'\n      : 'text-gray-900'\n    }\n              `}\n              rows={1}\n              style={{ minHeight: '40px', maxHeight: `${MAX_HEIGHT}px` }}\n            />\n            {/* Interim transcript display */}\n            {interimTranscript && (\n              <div className=\"absolute bottom-full left-0 right-0 mb-1 px-3 py-1 bg-gray-100 rounded text-sm text-gray-500 italic\">\n                {interimTranscript}...\n              </div>\n            )}\n          </div>\n\n          {/* Send button */}\n          <button\n            type=\"button\"\n            onClick={handleSend}\n            disabled={isButtonDisabled}\n            aria-label=\"Send message\"\n            className={`\n              p-2.5 rounded-lg transition-all\n              focus:outline-none focus:ring-2 focus:ring-blue-500\n              ${\n    isButtonDisabled\n      ? 'text-gray-400 cursor-not-allowed'\n      : 'text-white bg-blue-600 hover:bg-blue-700 active:bg-blue-800'\n    }\n            `}\n          >\n            <BiSend className=\"w-5 h-5\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\chat\\components\\MessageBubble.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\chat\\components\\MessageBubble.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\chat\\components\\MessageList.tsx","messages":[{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":70,"column":55,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":70,"endColumn":57,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2333,2335],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import type { RefObject } from 'react';\nimport type { ChatMessage } from '../../../types/ai';\nimport type { AILoadingState, ProgressStage } from '../hooks/useAI';\nimport { MessageBubble } from './MessageBubble';\nimport { StreamingIndicator } from '../../../components/StreamingIndicator';\nimport { ChatPostItNotes } from './ChatPostItNotes';\n\n/**\n * Props for MessageList component\n */\nexport interface MessageListProps {\n  messages: ChatMessage[];\n  streamingContent: string;\n  isStreaming: boolean;\n  loadingState: AILoadingState;\n  thinkingContent: string;\n  currentSources: string[]; // Legal source citations\n  progressStages: ProgressStage[]; // NEW: Cumulative progress timeline\n  messagesEndRef: RefObject<HTMLDivElement>;\n  caseId?: number | null; // Optional case ID for fact display\n}\n\n/**\n * Scrollable message list container\n *\n * Displays all chat messages with auto-scroll functionality.\n * Shows streaming assistant response in real-time.\n *\n * Features:\n * - Auto-scroll to latest message (using messagesEndRef)\n * - Empty state when no messages\n * - Streaming indicator for assistant responses\n * - Smooth scrolling with overflow-y-auto\n *\n * @param {MessageListProps} props - Component props\n * @returns {JSX.Element} Scrollable message list\n */\nexport function MessageList({\n  messages,\n  streamingContent,\n  isStreaming,\n  loadingState,\n  thinkingContent,\n  currentSources,\n  progressStages,\n  messagesEndRef,\n  caseId,\n}: MessageListProps): JSX.Element {\n  return (\n    <div className=\"flex-1 overflow-y-auto p-4\">\n      <div className=\"mx-auto space-y-4 pb-32\">\n        {/* Post-it Notes - Persistent at top */}\n        <ChatPostItNotes caseId={caseId} />\n\n        {/* Empty state */}\n        {messages.length === 0 && !isStreaming && (\n          <div className=\"flex h-full items-center justify-center text-center\">\n            <div className=\"text-gray-500\">\n              <p className=\"text-lg font-medium\">Ask a legal question to get started</p>\n              <p className=\"mt-2 text-sm\">\n                I can help you understand UK law, employment rights, and legal procedures.\n              </p>\n            </div>\n          </div>\n        )}\n\n        {/* Render all messages */}\n        {messages.map((message, index) => (\n          <MessageBubble\n            key={`${message.role}-${message.timestamp || index}`}\n            message={message}\n            isStreaming={false}\n          />\n        ))}\n\n        {/* Inline StreamingIndicator - appears right where AI response will be */}\n        {isStreaming && (\n          <StreamingIndicator\n            loadingState={loadingState}\n            progressStages={progressStages}\n            thinkingContent={thinkingContent}\n          />\n        )}\n\n        {/* Streaming assistant response */}\n        {isStreaming && streamingContent.length > 0 && (\n          <MessageBubble\n            message={{\n              role: 'assistant',\n              content: streamingContent,\n              timestamp: new Date().toISOString(),\n            }}\n            isStreaming={true}\n          />\n        )}\n\n        {/* Legal Sources - Show after streaming completes */}\n        {!isStreaming && currentSources.length > 0 && (\n          <div className=\"ml-12 mt-2 p-4 bg-blue-950/30 border border-blue-800/30 rounded-lg\">\n            <h4 className=\"text-sm font-semibold text-blue-300 mb-2 flex items-center gap-2\">\n              <span>üìö</span>\n              Legal Sources Referenced\n            </h4>\n            <ul className=\"space-y-1\">\n              {currentSources.map((source, index) => (\n                <li key={index} className=\"text-xs text-blue-200\">\n                  {source.includes('http') ? (\n                    <a\n                      href={source.split(' - ')[1]}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"hover:text-blue-100 hover:underline transition-colors\"\n                    >\n                      {source.split(' - ')[0]}\n                    </a>\n                  ) : (\n                    source\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n\n        {/* Auto-scroll anchor */}\n        <div ref={messagesEndRef} />\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\chat\\components\\SidebarCaseContext.tsx","messages":[{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":81,"column":53,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":81,"endColumn":55,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2681,2683],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { Scale, MessageSquarePlus, ChevronDown, Trash2, Edit2 } from 'lucide-react';\nimport type { ChatConversation } from '../../../models/ChatConversation';\nimport type { Case } from '../../../models/Case';\n\ninterface SidebarCaseContextProps {\n  activeCaseId: number | null;\n  activeConversationId: number | null;\n  recentChats: ChatConversation[];\n  onCaseChange: (caseId: number | null) => void;\n  onConversationSelect: (conversationId: number) => void;\n  onNewChat: () => void;\n  onDeleteConversation?: (conversationId: number) => void;\n  onRenameConversation?: (conversationId: number, newTitle: string) => void;\n}\n\nconst SidebarCaseContext = ({\n  activeCaseId,\n  activeConversationId,\n  recentChats,\n  onCaseChange,\n  onConversationSelect,\n  onNewChat,\n  onDeleteConversation,\n  onRenameConversation,\n}: SidebarCaseContextProps): JSX.Element => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [hoveredChatId, setHoveredChatId] = useState<number | null>(null);\n  const [editingChatId, setEditingChatId] = useState<number | null>(null);\n  const [editTitle, setEditTitle] = useState('');\n  const [cases, setCases] = useState<Case[]>([]);\n\n  const formatTimestamp = (timestamp: string): string => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffMins = Math.floor(diffMs / 60000);\n    const diffHours = Math.floor(diffMs / 3600000);\n    const diffDays = Math.floor(diffMs / 86400000);\n\n    if (diffMins < 60) {\n      return diffMins <= 1 ? 'Just now' : `${diffMins} minutes ago`;\n    }\n    if (diffHours < 24) {\n      return diffHours === 1 ? '1 hour ago' : `${diffHours} hours ago`;\n    }\n    if (diffDays === 1) {\n      return 'Yesterday';\n    }\n    if (diffDays < 7) {\n      return `${diffDays} days ago`;\n    }\n    return date.toLocaleDateString('en-GB', { day: 'numeric', month: 'short' });\n  };\n\n  const truncateTitle = (title: string, maxLength: number = 40): string => {\n    return title.length > maxLength ? `${title.substring(0, maxLength)}...` : title;\n  };\n\n  // Load cases from database\n  useEffect(() => {\n    const loadCases = async (): Promise<void> => {\n      if (!window.justiceAPI) {\n        return;\n      }\n\n      try {\n        const response = await window.justiceAPI.getAllCases();\n        if (response.success && response.data) {\n          setCases(response.data);\n        }\n      } catch (error) {\n        console.error('Failed to load cases:', error);\n      }\n    };\n\n    void loadCases();\n  }, []);\n\n  const activeCaseTitle = activeCaseId\n    ? cases.find(c => c.id === activeCaseId)?.title || `Case #${activeCaseId}`\n    : 'General Chat';\n\n  return (\n    <div className=\"border-b border-blue-800/30 p-4\">\n      {/* Active Case Selector */}\n      <div className=\"mb-4\">\n        <label className=\"text-xs font-medium text-blue-300 uppercase tracking-wide mb-2 block\">\n          Active Case\n        </label>\n        <div className=\"relative\">\n          <button\n            onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n            className=\"w-full flex items-center justify-between px-3 py-2 bg-blue-950/50 border border-blue-700/30 rounded-lg hover:bg-blue-900/50 transition-all shadow-sm\"\n          >\n            <div className=\"flex items-center gap-2\">\n              <Scale className=\"w-4 h-4 text-blue-300\" />\n              <span className=\"text-sm text-blue-100 font-medium\">\n                {activeCaseTitle}\n              </span>\n            </div>\n            <ChevronDown\n              className={`w-4 h-4 text-blue-300 transition-transform ${\n                isDropdownOpen ? 'rotate-180' : ''\n              }`}\n            />\n          </button>\n\n          {isDropdownOpen && (\n            <div className=\"absolute top-full left-0 right-0 mt-1 bg-slate-900 border border-blue-700/50 rounded-lg shadow-2xl z-50 backdrop-blur-sm max-h-96 overflow-y-auto scrollbar-thin scrollbar-thumb-blue-600 scrollbar-track-slate-800\">\n              <button\n                onClick={() => {\n                  onCaseChange(null);\n                  setIsDropdownOpen(false);\n                }}\n                className={`w-full text-left px-3 py-2 text-sm hover:bg-blue-800/30 transition-colors rounded-t-lg ${\n                  activeCaseId === null ? 'bg-blue-700/30 text-blue-200' : 'text-blue-100'\n                }`}\n              >\n                General Chat\n              </button>\n              {/* Display loaded cases */}\n              {cases.map((caseItem) => (\n                <button\n                  key={caseItem.id}\n                  onClick={() => {\n                    onCaseChange(caseItem.id);\n                    setIsDropdownOpen(false);\n                  }}\n                  className={`w-full text-left px-3 py-2 text-sm hover:bg-blue-800/30 transition-colors ${\n                    activeCaseId === caseItem.id ? 'bg-blue-700/30 text-blue-200' : 'text-blue-100'\n                  }`}\n                >\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-medium\">{truncateTitle(caseItem.title, 30)}</span>\n                    <span className=\"text-xs text-blue-400/70\">Case #{caseItem.id} ‚Ä¢ {caseItem.caseType}</span>\n                  </div>\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Recent Chats */}\n      <div className=\"mb-4\">\n        <h3 className=\"text-xs font-medium text-blue-300 uppercase tracking-wide mb-2\">\n          Recent Chats\n        </h3>\n        <div className=\"space-y-1 max-h-96 overflow-y-auto custom-scrollbar\">\n          {recentChats.length === 0 ? (\n            <p className=\"text-sm text-blue-400/60 italic py-2 px-3\">\n              No recent chats yet\n            </p>\n          ) : (\n            recentChats.slice(0, 10).map((chat) => (\n              <div\n                key={chat.id}\n                className={`relative rounded-lg transition-all ${\n                  activeConversationId === chat.id\n                    ? 'bg-blue-600/30 shadow-lg border border-blue-500/30'\n                    : 'hover:bg-blue-800/20 border border-transparent'\n                }`}\n                onMouseEnter={() => setHoveredChatId(chat.id)}\n                onMouseLeave={() => setHoveredChatId(null)}\n              >\n                {editingChatId === chat.id ? (\n                  /* Edit Mode */\n                  <div className=\"py-2 px-3\">\n                    <input\n                      type=\"text\"\n                      value={editTitle}\n                      onChange={(e) => setEditTitle(e.target.value)}\n                      onKeyDown={(e) => {\n                        if (e.key === 'Enter') {\n                          onRenameConversation?.(chat.id, editTitle.trim());\n                          setEditingChatId(null);\n                        }\n                        if (e.key === 'Escape') {\n                          setEditingChatId(null);\n                        }\n                      }}\n                      onBlur={() => setEditingChatId(null)}\n                      autoFocus\n                      className=\"w-full bg-blue-950/50 border border-blue-500/50 rounded px-2 py-1 text-sm text-blue-100 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"Enter title...\"\n                    />\n                  </div>\n                ) : (\n                  /* Normal Mode */\n                  <button\n                    onClick={() => onConversationSelect(chat.id)}\n                    className=\"w-full text-left py-2 px-3\"\n                  >\n                    <div className=\"flex items-center justify-between gap-2\">\n                      <div className=\"flex-1 overflow-hidden\">\n                        <div className=\"overflow-hidden text-ellipsis whitespace-nowrap\">\n                          <span className=\"text-sm font-medium text-blue-100\">\n                            {truncateTitle(chat.title)}\n                          </span>\n                        </div>\n                        <div className=\"text-xs text-blue-400 mt-0.5\">\n                          {formatTimestamp(chat.updatedAt)}\n                        </div>\n                      </div>\n\n                      {/* Action Buttons */}\n                      {hoveredChatId === chat.id && (\n                        <div className=\"flex gap-1 flex-shrink-0\">\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              setEditTitle(chat.title);\n                              setEditingChatId(chat.id);\n                            }}\n                            className=\"p-1.5 hover:bg-blue-500/30 rounded transition-colors\"\n                            title=\"Rename chat\"\n                          >\n                            <Edit2 className=\"w-3.5 h-3.5 text-blue-300\" />\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              onDeleteConversation?.(chat.id);\n                            }}\n                            className=\"p-1.5 hover:bg-red-500/30 rounded transition-colors\"\n                            title=\"Delete chat\"\n                          >\n                            <Trash2 className=\"w-3.5 h-3.5 text-red-400\" />\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  </button>\n                )}\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n\n      {/* New Chat Button */}\n      <button\n        onClick={onNewChat}\n        className=\"w-full flex items-center justify-center gap-2 px-4 py-2.5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-lg hover:from-blue-500 hover:to-indigo-500 transition-all font-medium shadow-lg hover:shadow-xl\"\n      >\n        <MessageSquarePlus className=\"w-4 h-4\" />\n        <span className=\"text-sm\">New Chat</span>\n      </button>\n    </div>\n  );\n};\n\nexport default SidebarCaseContext;\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\chat\\components\\SidebarProfile.tsx","messages":[{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":48,"column":37,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":48,"endColumn":39,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1209,1211],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { User } from 'lucide-react';\nimport type { UserProfile } from '../../../models/UserProfile';\n\ninterface SidebarProfileProps {\n  profile: UserProfile | null;\n  onProfileClick: () => void;\n}\n\nexport const SidebarProfile = ({\n  profile,\n  onProfileClick,\n}: SidebarProfileProps): JSX.Element => {\n  const getInitials = (name: string): string => {\n    return name\n      .split(' ')\n      .map(part => part.charAt(0).toUpperCase())\n      .slice(0, 2)\n      .join('');\n  };\n\n  const renderAvatar = (): JSX.Element => {\n    if (profile?.avatarUrl) {\n      return (\n        <img\n          src={profile.avatarUrl}\n          alt={profile.name}\n          className=\"w-10 h-10 rounded-full object-cover\"\n        />\n      );\n    }\n\n    if (profile?.name) {\n      return (\n        <div className=\"w-10 h-10 rounded-full bg-blue-100 text-blue-600 flex items-center justify-center font-medium text-sm\">\n          {getInitials(profile.name)}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"w-10 h-10 rounded-full bg-gray-100 text-gray-400 flex items-center justify-center\">\n        <User className=\"w-5 h-5\" />\n      </div>\n    );\n  };\n\n  const displayName = profile?.name || 'Guest User';\n  const displayEmail = profile?.email;\n\n  return (\n    <div className=\"sticky bottom-0 bg-slate-900/80 border-t border-blue-800/30 backdrop-blur-sm\">\n      <button\n        onClick={onProfileClick}\n        className=\"w-full p-4 flex items-center gap-3 hover:bg-blue-800/20 transition-all duration-150 text-left group\"\n        aria-label=\"Open profile settings\"\n      >\n        {renderAvatar()}\n\n        <div className=\"flex-1 min-w-0\">\n          <p className=\"font-medium text-sm text-blue-100 truncate group-hover:text-white transition-colors\">\n            {displayName}\n          </p>\n          {displayEmail && (\n            <p className=\"text-xs text-blue-400 truncate\">\n              {displayEmail}\n            </p>\n          )}\n        </div>\n\n        <User className=\"w-5 h-5 text-blue-300 group-hover:text-blue-200 transition-colors flex-shrink-0\" />\n      </button>\n    </div>\n  );\n};\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\chat\\hooks\\useAI.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\chat\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\chat\\services\\IntegratedAIService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\dashboard\\components\\DashboardView.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\dashboard\\components\\DashboardView.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\dashboard\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\documents\\components\\DocumentsView.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\documents\\components\\DocumentsView.tsx","messages":[{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":37,"column":51,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":37,"endColumn":53,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1294,1369],"text":"(evidence.filePath?.split('/').pop() ?? evidence.filePath?.split('\\\\').pop())"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":37,"column":91,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":37,"endColumn":93,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1370,1372],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":67,"column":37,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":67,"endColumn":39,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2613,2615],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"brace-style","severity":2,"message":"Statement inside of curly braces should be on next line.","line":455,"column":40,"nodeType":"Punctuator","messageId":"blockSameLine","endLine":455,"endColumn":41,"fix":{"range":[16992,16992],"text":"\n"}},{"ruleId":"brace-style","severity":2,"message":"Closing curly brace should be on the same line as opening curly brace or on the line after the previous block.","line":455,"column":71,"nodeType":"Punctuator","messageId":"singleLineClose","endLine":455,"endColumn":72,"fix":{"range":[17022,17022],"text":"\n"}},{"ruleId":"brace-style","severity":2,"message":"Statement inside of curly braces should be on next line.","line":463,"column":40,"nodeType":"Punctuator","messageId":"blockSameLine","endLine":463,"endColumn":41,"fix":{"range":[17414,17414],"text":"\n"}},{"ruleId":"brace-style","severity":2,"message":"Closing curly brace should be on the same line as opening curly brace or on the line after the previous block.","line":463,"column":68,"nodeType":"Punctuator","messageId":"singleLineClose","endLine":463,"endColumn":69,"fix":{"range":[17441,17441],"text":"\n"}},{"ruleId":"brace-style","severity":2,"message":"Statement inside of curly braces should be on next line.","line":471,"column":40,"nodeType":"Punctuator","messageId":"blockSameLine","endLine":471,"endColumn":41,"fix":{"range":[17828,17828],"text":"\n"}},{"ruleId":"brace-style","severity":2,"message":"Closing curly brace should be on the same line as opening curly brace or on the line after the previous block.","line":471,"column":68,"nodeType":"Punctuator","messageId":"singleLineClose","endLine":471,"endColumn":69,"fix":{"range":[17855,17855],"text":"\n"}},{"ruleId":"brace-style","severity":2,"message":"Statement inside of curly braces should be on next line.","line":485,"column":40,"nodeType":"Punctuator","messageId":"blockSameLine","endLine":485,"endColumn":41,"fix":{"range":[18483,18483],"text":"\n"}},{"ruleId":"brace-style","severity":2,"message":"Closing curly brace should be on the same line as opening curly brace or on the line after the previous block.","line":485,"column":71,"nodeType":"Punctuator","messageId":"singleLineClose","endLine":485,"endColumn":72,"fix":{"range":[18513,18513],"text":"\n"}},{"ruleId":"brace-style","severity":2,"message":"Statement inside of curly braces should be on next line.","line":493,"column":40,"nodeType":"Punctuator","messageId":"blockSameLine","endLine":493,"endColumn":41,"fix":{"range":[18902,18902],"text":"\n"}},{"ruleId":"brace-style","severity":2,"message":"Closing curly brace should be on the same line as opening curly brace or on the line after the previous block.","line":493,"column":68,"nodeType":"Punctuator","messageId":"singleLineClose","endLine":493,"endColumn":69,"fix":{"range":[18929,18929],"text":"\n"}},{"ruleId":"brace-style","severity":2,"message":"Statement inside of curly braces should be on next line.","line":501,"column":40,"nodeType":"Punctuator","messageId":"blockSameLine","endLine":501,"endColumn":41,"fix":{"range":[19313,19313],"text":"\n"}},{"ruleId":"brace-style","severity":2,"message":"Closing curly brace should be on the same line as opening curly brace or on the line after the previous block.","line":501,"column":68,"nodeType":"Punctuator","messageId":"singleLineClose","endLine":501,"endColumn":69,"fix":{"range":[19340,19340],"text":"\n"}}],"suppressedMessages":[],"errorCount":12,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":12,"fixableWarningCount":0,"source":"import { useState } from 'react';\nimport { FileText, Download, Printer, Eye, CheckCircle, AlertCircle, XCircle, Filter, Mail, Upload } from 'lucide-react';\nimport { useEvidence } from '../hooks/useEvidence';\nimport { useCases } from '@/features/cases';\nimport { SkeletonCard } from '@/components/ui/Skeleton';\nimport { FileUploadModal } from './FileUploadModal';\nimport { toast } from 'sonner';\nimport type { Evidence } from '@/models/Evidence';\n\ninterface Document {\n  id: string;\n  title: string;\n  type: 'evidence' | 'witness_statement' | 'contract' | 'correspondence' | 'court_form' | 'expert_report';\n  status: 'complete' | 'needs_review' | 'incomplete';\n  fileName: string;\n  fileType: 'PDF' | 'DOCX';\n  uploadDate: string;\n  fileSize: string;\n  associatedCase: string;\n  priority: 'critical' | 'important' | 'supporting';\n  checklist: {\n    signed: boolean;\n    dated: boolean;\n    witnessed: boolean;\n  };\n}\n\n/**\n * Map Evidence to Document for UI display\n */\nfunction mapEvidenceToDocument(evidence: Evidence, caseName: string): Document {\n  return {\n    id: evidence.id.toString(),\n    title: evidence.title,\n    type: 'evidence', // Map from evidence.evidenceType if needed\n    status: evidence.filePath ? 'complete' : evidence.content ? 'needs_review' : 'incomplete',\n    fileName: evidence.filePath?.split('/').pop() || evidence.filePath?.split('\\\\').pop() || 'Unknown',\n    fileType: evidence.filePath?.endsWith('.pdf') ? 'PDF' : 'DOCX',\n    uploadDate: new Date(evidence.createdAt).toLocaleDateString(),\n    fileSize: 'Unknown', // Evidence model doesn't track file size yet\n    associatedCase: caseName,\n    priority: 'supporting', // Could be enhanced based on evidence metadata\n    checklist: {\n      signed: false,\n      dated: !!evidence.obtainedDate,\n      witnessed: false,\n    },\n  };\n}\n\nexport function DocumentsView(): JSX.Element {\n  const [filterCase, setFilterCase] = useState<string>('all');\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [selectedDocs, setSelectedDocs] = useState<Set<string>>(new Set());\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n\n  // Hooks for evidence and case data\n  const { evidence, loading, error, fetchEvidence } = useEvidence();\n  const { cases } = useCases();\n\n  // Get the first case ID for upload modal (or default to 1)\n  const defaultCaseId = cases.length > 0 ? cases[0].id : 1;\n\n  // Map evidence to documents with case names\n  const documents: Document[] = evidence.map((ev): Document => {\n    const caseObj = cases.find((c): boolean => c.id === ev.caseId);\n    const caseName = caseObj?.title || `Case #${ev.caseId}`;\n    return mapEvidenceToDocument(ev, caseName);\n  });\n\n  const filteredDocuments = documents.filter((doc): boolean => {\n    const caseMatch = filterCase === 'all' || doc.associatedCase === filterCase;\n    const statusMatch = filterStatus === 'all' || doc.status === filterStatus;\n    return caseMatch && statusMatch;\n  });\n\n  const toggleDocSelection = (docId: string): void => {\n    const newSelection = new Set(selectedDocs);\n    if (newSelection.has(docId)) {\n      newSelection.delete(docId);\n    } else {\n      newSelection.add(docId);\n    }\n    setSelectedDocs(newSelection);\n  };\n\n  // Handler functions for file operations\n  const handleViewFile = (doc: Document): void => {\n    const evidence = findEvidenceById(doc.id);\n    if (!evidence?.filePath) {\n      toast.error('File path not found for this document');\n      return;\n    }\n\n    void window.justiceAPI.viewFile(evidence.filePath).then(result => {\n      if (!result.success) {\n        toast.error(`Failed to open file: ${result.error}`);\n      }\n    });\n  };\n\n  const handleDownloadFile = (doc: Document): void => {\n    const evidence = findEvidenceById(doc.id);\n    if (!evidence?.filePath) {\n      toast.error('File path not found for this document');\n      return;\n    }\n\n    void window.justiceAPI.downloadFile(evidence.filePath, doc.fileName).then(result => {\n      if (result.success) {\n        toast.success(`File saved to: ${result.savedPath}`);\n      } else {\n        toast.error(`Failed to download file: ${result.error}`);\n      }\n    });\n  };\n\n  const handlePrintFile = (doc: Document): void => {\n    const evidence = findEvidenceById(doc.id);\n    if (!evidence?.filePath) {\n      toast.error('File path not found for this document');\n      return;\n    }\n\n    void window.justiceAPI.printFile(evidence.filePath).then(result => {\n      if (result.success) {\n        toast.success('File opened for printing');\n      } else {\n        toast.error(`Failed to print file: ${result.error}`);\n      }\n    });\n  };\n\n  const handleEmailFile = (doc: Document): void => {\n    const evidence = findEvidenceById(doc.id);\n    if (!evidence?.filePath) {\n      toast.error('File path not found for this document');\n      return;\n    }\n\n    void window.justiceAPI.emailFiles(\n      [evidence.filePath],\n      `${doc.title} - ${doc.associatedCase}`,\n      `Attached: ${doc.fileName}`,\n    ).then(result => {\n      if (result.success) {\n        toast.success('Email client opened');\n      } else {\n        toast.error(`Failed to open email: ${result.error}`);\n      }\n    });\n  };\n\n  // Bundle operations (multiple files)\n  const handleDownloadBundle = (): void => {\n    const docs = selectedDocs.size > 0\n      ? filteredDocuments.filter((d): boolean => selectedDocs.has(d.id))\n      : filteredDocuments;\n\n    if (docs.length === 0) {\n      toast.error('No documents to download');\n      return;\n    }\n\n    void (async (): Promise<void> => {\n      let successCount = 0;\n      for (const doc of docs) {\n        const evidence = findEvidenceById(doc.id);\n        if (evidence?.filePath) {\n          const result = await window.justiceAPI.downloadFile(evidence.filePath, doc.fileName);\n          if (result.success) {\n            successCount++;\n          }\n        }\n      }\n\n      toast.success(`Downloaded ${successCount} of ${docs.length} files`);\n    })();\n  };\n\n  const handlePrintBundle = (): void => {\n    const docs = selectedDocs.size > 0\n      ? filteredDocuments.filter((d): boolean => selectedDocs.has(d.id))\n      : filteredDocuments;\n\n    if (docs.length === 0) {\n      toast.error('No documents to print');\n      return;\n    }\n\n    void (async (): Promise<void> => {\n      let successCount = 0;\n      for (const doc of docs) {\n        const evidence = findEvidenceById(doc.id);\n        if (evidence?.filePath) {\n          const result = await window.justiceAPI.printFile(evidence.filePath);\n          if (result.success) {\n            successCount++;\n          }\n        }\n      }\n\n      toast.success(`Opened ${successCount} of ${docs.length} files for printing`);\n    })();\n  };\n\n  const handleEmailBundle = (): void => {\n    const docs = selectedDocs.size > 0\n      ? filteredDocuments.filter((d): boolean => selectedDocs.has(d.id))\n      : filteredDocuments;\n\n    if (docs.length === 0) {\n      toast.error('No documents to email');\n      return;\n    }\n\n    const filePaths: string[] = [];\n    for (const doc of docs) {\n      const evidence = findEvidenceById(doc.id);\n      if (evidence?.filePath) {\n        filePaths.push(evidence.filePath);\n      }\n    }\n\n    if (filePaths.length === 0) {\n      toast.error('No valid file paths found');\n      return;\n    }\n\n    void window.justiceAPI.emailFiles(\n      filePaths,\n      `Case Bundle: ${filePaths.length} documents`,\n      'Please find attached case documents.',\n    ).then(result => {\n      if (result.success) {\n        toast.success('Email client opened with documents');\n      } else {\n        toast.error(`Failed to open email: ${result.error}`);\n      }\n    });\n  };\n\n  // Helper function to find evidence by document ID\n  const findEvidenceById = (docId: string): Evidence | undefined => {\n    return evidence.find(ev => ev.id.toString() === docId);\n  };\n\n  const getStatusIcon = (status: string): JSX.Element | null => {\n    switch (status) {\n      case 'complete':\n        return <CheckCircle className=\"w-5 h-5 text-green-400\" />;\n      case 'needs_review':\n        return <AlertCircle className=\"w-5 h-5 text-amber-400\" />;\n      case 'incomplete':\n        return <XCircle className=\"w-5 h-5 text-red-400\" />;\n      default:\n        return null;\n    }\n  };\n\n  const getStatusBadge = (status: string): string => {\n    switch (status) {\n      case 'complete':\n        return 'bg-green-600/20 text-green-300 border-green-600/30';\n      case 'needs_review':\n        return 'bg-amber-600/20 text-amber-300 border-amber-600/30';\n      case 'incomplete':\n        return 'bg-red-600/20 text-red-300 border-red-600/30';\n      default:\n        return '';\n    }\n  };\n\n  const getTypeLabel = (type: string): string => {\n    return type.split('_').map((word): string => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n\n  // Show loading state with skeleton cards\n  if (loading) {\n    return (\n      <div className=\"flex-1 flex flex-col overflow-hidden bg-gradient-to-br from-slate-950 via-blue-950 to-slate-950\">\n        {/* Legal Disclaimer Banner */}\n        <div className=\"bg-gradient-to-r from-amber-600/20 to-orange-600/20 border-b border-amber-600/30 px-4 py-2\">\n          <div className=\"flex items-center gap-2 max-w-7xl mx-auto\">\n            <div className=\"text-amber-400 text-lg\">‚öñÔ∏è</div>\n            <div className=\"flex-1\">\n              <p className=\"text-amber-200 text-xs\">\n                <strong>Legal Notice:</strong> This tool assists with document organization only. You have the right to self-represent.\n                <span className=\"text-amber-100\"> However, licensed legal counsel is strongly advised regardless of your intentions.</span>\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Filter Bar Skeleton */}\n        <div className=\"bg-slate-900/50 border-b border-blue-800/30 px-4 py-2\">\n          <div className=\"max-w-7xl mx-auto flex items-center gap-3 h-10\" />\n        </div>\n\n        {/* Loading State with Skeleton Cards */}\n        <div\n          className=\"flex-1 overflow-y-auto p-6\"\n          role=\"status\"\n          aria-live=\"polite\"\n          aria-busy=\"true\"\n        >\n          <div className=\"w-full max-w-full px-4\">\n            <div className=\"grid grid-cols-4 gap-6 w-full transition-opacity duration-300\">\n              <SkeletonCard count={8} />\n            </div>\n          </div>\n          <span className=\"sr-only\">Loading documents...</span>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <div className=\"flex-1 flex flex-col overflow-hidden bg-gradient-to-br from-slate-950 via-blue-950 to-slate-950\">\n        {/* Legal Disclaimer Banner */}\n        <div className=\"bg-gradient-to-r from-amber-600/20 to-orange-600/20 border-b border-amber-600/30 px-4 py-2\">\n          <div className=\"flex items-center gap-2 max-w-7xl mx-auto\">\n            <div className=\"text-amber-400 text-lg\">‚öñÔ∏è</div>\n            <div className=\"flex-1\">\n              <p className=\"text-amber-200 text-xs\">\n                <strong>Legal Notice:</strong> This tool assists with document organization only. You have the right to self-represent.\n                <span className=\"text-amber-100\"> However, licensed legal counsel is strongly advised regardless of your intentions.</span>\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Error State */}\n        <div className=\"flex-1 flex items-center justify-center p-8\">\n          <div className=\"max-w-md text-center\">\n            <div className=\"w-24 h-24 bg-red-600/20 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <XCircle className=\"w-12 h-12 text-red-400\" />\n            </div>\n            <h2 className=\"text-2xl font-bold text-white mb-3\">Error Loading Documents</h2>\n            <p className=\"text-red-200 mb-6\">{error}</p>\n            <button\n              onClick={(): void => window.location.reload()}\n              className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-all font-medium\"\n            >\n              Retry\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show empty state when no documents exist\n  if (filteredDocuments.length === 0 && documents.length === 0) {\n    return (\n      <div className=\"flex-1 flex flex-col overflow-hidden bg-gradient-to-br from-slate-950 via-blue-950 to-slate-950\">\n        {/* Legal Disclaimer Banner */}\n        <div className=\"bg-gradient-to-r from-amber-600/20 to-orange-600/20 border-b border-amber-600/30 px-4 py-2\">\n          <div className=\"flex items-center gap-2 max-w-7xl mx-auto\">\n            <div className=\"text-amber-400 text-lg\">‚öñÔ∏è</div>\n            <div className=\"flex-1\">\n              <p className=\"text-amber-200 text-xs\">\n                <strong>Legal Notice:</strong> This tool assists with document organization only. You have the right to self-represent.\n                <span className=\"text-amber-100\"> However, licensed legal counsel is strongly advised regardless of your intentions.</span>\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Empty State */}\n        <div className=\"flex-1 flex items-center justify-center p-8\">\n          <div className=\"max-w-md text-center\">\n            <div className=\"w-24 h-24 bg-blue-600/20 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <Upload className=\"w-12 h-12 text-blue-400\" />\n            </div>\n            <h2 className=\"text-2xl font-bold text-white mb-3\">No Documents Yet</h2>\n            <p className=\"text-blue-200 mb-6\">\n              Upload evidence, contracts, witness statements, or other legal documents to get started organizing your case files.\n            </p>\n            <button\n              onClick={(): void => setIsUploadModalOpen(true)}\n              className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-all font-medium\"\n            >\n              Upload Your First Document\n            </button>\n            <p className=\"text-gray-400 text-sm mt-4\">\n              Supported formats: PDF, DOCX, Images\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-1 flex flex-col overflow-hidden\">\n      {/* Legal Disclaimer Banner */}\n      <div className=\"bg-gradient-to-r from-amber-600/20 to-orange-600/20 border-b border-amber-600/30 px-4 py-2\">\n        <div className=\"flex items-center gap-2 max-w-7xl mx-auto\">\n          <div className=\"text-amber-400 text-lg\">‚öñÔ∏è</div>\n          <div className=\"flex-1\">\n            <p className=\"text-amber-200 text-xs\">\n              <strong>Legal Notice:</strong> This tool assists with document organization only. You have the right to self-represent.\n              <span className=\"text-amber-100\"> However, licensed legal counsel is strongly advised regardless of your intentions.</span>\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Filter Bar */}\n      <div className=\"bg-slate-900/50 border-b border-blue-800/30 px-4 py-2\">\n        <div className=\"max-w-7xl mx-auto flex items-center gap-3\">\n          <Filter className=\"w-5 h-5 text-blue-300\" />\n\n          <select\n            value={filterCase}\n            onChange={(e): void => setFilterCase(e.target.value)}\n            className=\"px-4 py-2 bg-slate-800/50 border border-blue-700/30 rounded-lg text-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"all\">All Cases</option>\n            <option value=\"Smith vs ABC Corp\">Smith vs ABC Corp</option>\n            <option value=\"Tenant Rights Case\">Tenant Rights Case</option>\n          </select>\n\n          <select\n            value={filterStatus}\n            onChange={(e): void => setFilterStatus(e.target.value)}\n            className=\"px-4 py-2 bg-slate-800/50 border border-blue-700/30 rounded-lg text-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"all\">All Statuses</option>\n            <option value=\"complete\">Complete</option>\n            <option value=\"needs_review\">Needs Review</option>\n            <option value=\"incomplete\">Incomplete</option>\n          </select>\n\n          <div className=\"flex-1\" />\n\n          {/* Upload Evidence Button */}\n          <button\n            onClick={(): void => setIsUploadModalOpen(true)}\n            className=\"flex items-center gap-2 px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-all text-sm font-medium\"\n            title=\"Upload Evidence\"\n          >\n            <Upload className=\"w-4 h-4\" />\n            <span>Upload Evidence</span>\n          </button>\n\n          {selectedDocs.size > 0 ? (\n            <div className=\"flex items-center gap-3\">\n              <span className=\"text-blue-300 text-sm font-medium\">{selectedDocs.size} selected</span>\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={(): void => { void handleDownloadBundle(); }}\n                  className=\"flex items-center gap-2 px-3 py-2 bg-blue-600/20 text-blue-300 rounded-lg hover:bg-blue-600/30 transition-all text-sm\"\n                  title=\"Download Bundle\"\n                >\n                  <Download className=\"w-4 h-4\" />\n                  <span>Download</span>\n                </button>\n                <button\n                  onClick={(): void => { void handlePrintBundle(); }}\n                  className=\"flex items-center gap-2 px-3 py-2 bg-slate-800/50 text-gray-300 rounded-lg hover:bg-slate-700/50 transition-all text-sm\"\n                  title=\"Print Bundle\"\n                >\n                  <Printer className=\"w-4 h-4\" />\n                  <span>Print</span>\n                </button>\n                <button\n                  onClick={(): void => { void handleEmailBundle(); }}\n                  className=\"flex items-center gap-2 px-3 py-2 bg-slate-800/50 text-gray-300 rounded-lg hover:bg-slate-700/50 transition-all text-sm\"\n                  title=\"Email Bundle\"\n                >\n                  <Mail className=\"w-4 h-4\" />\n                  <span>Email</span>\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div className=\"flex items-center gap-3\">\n              <span className=\"text-blue-300 text-sm font-medium\">Full Case Bundle:</span>\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={(): void => { void handleDownloadBundle(); }}\n                  className=\"flex items-center gap-2 px-3 py-2 bg-blue-600/20 text-blue-300 rounded-lg hover:bg-blue-600/30 transition-all text-sm\"\n                  title=\"Download All\"\n                >\n                  <Download className=\"w-4 h-4\" />\n                  <span>Download</span>\n                </button>\n                <button\n                  onClick={(): void => { void handlePrintBundle(); }}\n                  className=\"flex items-center gap-2 px-3 py-2 bg-slate-800/50 text-gray-300 rounded-lg hover:bg-slate-700/50 transition-all text-sm\"\n                  title=\"Print All\"\n                >\n                  <Printer className=\"w-4 h-4\" />\n                  <span>Print</span>\n                </button>\n                <button\n                  onClick={(): void => { void handleEmailBundle(); }}\n                  className=\"flex items-center gap-2 px-3 py-2 bg-slate-800/50 text-gray-300 rounded-lg hover:bg-slate-700/50 transition-all text-sm\"\n                  title=\"Email All\"\n                >\n                  <Mail className=\"w-4 h-4\" />\n                  <span>Email</span>\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Document Grid */}\n      <div className=\"flex-1 overflow-y-auto p-6 bg-gradient-to-br from-slate-950 via-blue-950 to-slate-950\">\n        <div className=\"w-full max-w-full px-4\">\n          <div className=\"grid grid-cols-4 gap-6 w-full\">\n            {filteredDocuments.map((doc): JSX.Element => (\n              <div\n                key={doc.id}\n                className={`bg-slate-900/50 border rounded-lg p-5 transition-all hover:border-blue-600/50 hover:shadow-lg hover:shadow-blue-600/20 cursor-pointer ${\n                  selectedDocs.has(doc.id) ? 'border-blue-600/70 shadow-lg shadow-blue-600/30' : 'border-blue-800/30'\n                }`}\n                onClick={(): void => toggleDocSelection(doc.id)}\n              >\n                {/* Document Icon and Status */}\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-12 h-12 bg-blue-600/20 rounded-lg flex items-center justify-center\">\n                      <FileText className=\"w-6 h-6 text-blue-400\" />\n                    </div>\n                    <div>\n                      <div className=\"text-sm text-blue-300 font-medium\">{doc.fileType}</div>\n                      <div className=\"text-xs text-gray-400\">{doc.fileSize}</div>\n                    </div>\n                  </div>\n                  {getStatusIcon(doc.status)}\n                </div>\n\n                {/* Title */}\n                <h3 className=\"text-white font-bold text-base mb-2 line-clamp-2\">{doc.title}</h3>\n                <div className=\"text-xs text-blue-300 mb-3\">{getTypeLabel(doc.type)}</div>\n\n                {/* Status Badge */}\n                <div className={`inline-flex items-center gap-1 px-3 py-1 rounded-full border text-xs font-medium mb-4 ${getStatusBadge(doc.status)}`}>\n                  <span className=\"capitalize\">{doc.status.replace('_', ' ')}</span>\n                </div>\n\n                {/* Metadata */}\n                <div className=\"space-y-1 mb-4 text-sm text-gray-400\">\n                  <div className=\"truncate\"><span className=\"text-gray-500\">Case:</span> {doc.associatedCase}</div>\n                  <div><span className=\"text-gray-500\">Uploaded:</span> {doc.uploadDate}</div>\n                  <div><span className=\"text-gray-500\">Priority:</span> <span className={`capitalize font-medium ${doc.priority === 'critical' ? 'text-red-400' : doc.priority === 'important' ? 'text-amber-400' : 'text-gray-400'}`}>{doc.priority}</span></div>\n                </div>\n\n                {/* Checklist */}\n                <div className=\"border-t border-blue-800/30 pt-3 mb-4\">\n                  <div className=\"text-xs text-gray-400 mb-2\">Document Checklist:</div>\n                  <div className=\"flex flex-wrap gap-2\">\n                    <span className={`text-xs px-2 py-1 rounded ${doc.checklist.signed ? 'bg-green-600/20 text-green-300' : 'bg-gray-700/50 text-gray-500'}`}>\n                      {doc.checklist.signed ? '‚úì' : '‚óã'} Signed\n                    </span>\n                    <span className={`text-xs px-2 py-1 rounded ${doc.checklist.dated ? 'bg-green-600/20 text-green-300' : 'bg-gray-700/50 text-gray-500'}`}>\n                      {doc.checklist.dated ? '‚úì' : '‚óã'} Dated\n                    </span>\n                    {doc.type === 'witness_statement' && (\n                      <span className={`text-xs px-2 py-1 rounded ${doc.checklist.witnessed ? 'bg-green-600/20 text-green-300' : 'bg-gray-700/50 text-gray-500'}`}>\n                        {doc.checklist.witnessed ? '‚úì' : '‚óã'} Witnessed\n                      </span>\n                    )}\n                  </div>\n                </div>\n\n                {/* Action Buttons */}\n                <div className=\"grid grid-cols-4 gap-2\">\n                  <button\n                    className=\"flex items-center justify-center gap-1 px-3 py-2 bg-blue-600/20 text-blue-300 rounded-lg hover:bg-blue-600/30 transition-all text-xs font-medium\"\n                    onClick={(e): void => {\n                      e.stopPropagation();\n                      handleViewFile(doc);\n                    }}\n                    title=\"View\"\n                  >\n                    <Eye className=\"w-4 h-4\" />\n                  </button>\n                  <button\n                    className=\"flex items-center justify-center gap-1 px-3 py-2 bg-slate-800/50 text-gray-300 rounded-lg hover:bg-slate-700/50 transition-all text-xs\"\n                    onClick={(e): void => {\n                      e.stopPropagation();\n                      handleDownloadFile(doc);\n                    }}\n                    title=\"Download\"\n                  >\n                    <Download className=\"w-4 h-4\" />\n                  </button>\n                  <button\n                    className=\"flex items-center justify-center gap-1 px-3 py-2 bg-slate-800/50 text-gray-300 rounded-lg hover:bg-slate-700/50 transition-all text-xs\"\n                    onClick={(e): void => {\n                      e.stopPropagation();\n                      handlePrintFile(doc);\n                    }}\n                    title=\"Print\"\n                  >\n                    <Printer className=\"w-4 h-4\" />\n                  </button>\n                  <button\n                    className=\"flex items-center justify-center gap-1 px-3 py-2 bg-slate-800/50 text-gray-300 rounded-lg hover:bg-slate-700/50 transition-all text-xs\"\n                    onClick={(e): void => {\n                      e.stopPropagation();\n                      handleEmailFile(doc);\n                    }}\n                    title=\"Email\"\n                  >\n                    <Mail className=\"w-4 h-4\" />\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* File Upload Modal */}\n      <FileUploadModal\n        isOpen={isUploadModalOpen}\n        onClose={(): void => setIsUploadModalOpen(false)}\n        caseId={defaultCaseId}\n        onUploadComplete={(): void => {\n          void fetchEvidence();\n          toast.success('Evidence uploaded successfully!');\n        }}\n      />\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\documents\\components\\FileUploadModal.tsx","messages":[{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":33,"column":51,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":33,"endColumn":53,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[930,932],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":87,"column":56,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":87,"endColumn":58,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2505,2507],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":231,"column":23,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":231,"endColumn":41},{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":338,"column":21,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":338,"endColumn":35}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\nimport { X, Upload, FileText, AlertCircle, CheckCircle } from 'lucide-react';\nimport { useEvidence } from '../hooks/useEvidence';\nimport type { EvidenceType } from '@/models/Evidence';\n\ninterface FileUploadModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  caseId: number;\n  onUploadComplete?: () => void;\n}\n\ninterface SelectedFile {\n  path: string;\n  name: string;\n  size: number;\n}\n\nconst MAX_FILE_SIZE = 10 * 1024 * 1024; // 10MB in bytes\nconst ALLOWED_EXTENSIONS = ['pdf', 'png', 'jpg', 'jpeg'];\n\nfunction formatFileSize(bytes: number): string {\n  if (bytes === 0) {\n    return '0 Bytes';\n  }\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i];\n}\n\nfunction getFileExtension(filename: string): string {\n  return filename.split('.').pop()?.toLowerCase() || '';\n}\n\nfunction getErrorMessage(error: unknown): string | null {\n  if (!error) {\n    return null;\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (typeof error === 'object' && 'message' in error) {\n    const message = (error as { message?: unknown }).message;\n    return typeof message === 'string' ? message : null;\n  }\n\n  return null;\n}\n\nexport function FileUploadModal({\n  isOpen,\n  onClose,\n  caseId,\n  onUploadComplete,\n}: FileUploadModalProps): JSX.Element | null {\n  const [selectedFile, setSelectedFile] = useState<SelectedFile | null>(null);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [evidenceType, setEvidenceType] = useState<EvidenceType>('document');\n  const [obtainedDate, setObtainedDate] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState(false);\n\n  const { createEvidence } = useEvidence();\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const handleSelectFile = async (): Promise<void> => {\n    try {\n      setError(null);\n      const result = await window.justiceAPI.selectFile({\n        filters: [\n          { name: 'Documents', extensions: ['pdf'] },\n          { name: 'Images', extensions: ['png', 'jpg', 'jpeg'] },\n        ],\n        properties: ['openFile'],\n      });\n\n      if (result.success && !result.canceled && result.filePaths.length > 0) {\n        const filePath = result.filePaths[0];\n        const fileName = filePath.split(/[\\\\/]/).pop() || 'Unknown';\n        const fileExtension = getFileExtension(fileName);\n\n        // Validate file type\n        if (!ALLOWED_EXTENSIONS.includes(fileExtension)) {\n          setError(`Invalid file type. Only PDF, PNG, JPG, and JPEG files are allowed.`);\n          return;\n        }\n\n        // Use file upload handler to validate and get file info\n        const uploadResult = await window.justiceAPI.uploadFile(filePath);\n\n        if (!uploadResult.success) {\n          setError(uploadResult.error || 'Failed to process file');\n          return;\n        }\n\n        // Check file size\n        if (uploadResult.fileSize > MAX_FILE_SIZE) {\n          setError(`File too large. Maximum size is ${formatFileSize(MAX_FILE_SIZE)}.`);\n          return;\n        }\n\n        setSelectedFile({\n          path: filePath,\n          name: fileName,\n          size: uploadResult.fileSize,\n        });\n\n        // Auto-populate title if empty\n        if (!title) {\n          setTitle(fileName.replace(/\\.[^/.]+$/, '')); // Remove extension\n        }\n      }\n    } catch (err) {\n      setError(getErrorMessage(err) ?? 'Failed to select file');\n    }\n  };\n\n  const handleUpload = async (): Promise<void> => {\n    if (!selectedFile || !title.trim()) {\n      setError('Please select a file and enter a title.');\n      return;\n    }\n\n    setIsUploading(true);\n    setError(null);\n\n    try {\n      await createEvidence({\n        caseId,\n        title: title.trim(),\n        filePath: selectedFile.path,\n        content: description.trim() || undefined,\n        evidenceType,\n        obtainedDate: obtainedDate || undefined,\n      });\n\n      setSuccess(true);\n\n      // Close modal after brief delay\n      setTimeout(() => {\n        if (onUploadComplete) {\n          onUploadComplete();\n        }\n        handleClose();\n      }, 1500);\n    } catch (err) {\n      setError(getErrorMessage(err) ?? 'Failed to upload evidence');\n      setIsUploading(false);\n    }\n  };\n\n  const handleClose = (): void => {\n    // Reset form\n    setSelectedFile(null);\n    setTitle('');\n    setDescription('');\n    setEvidenceType('document');\n    setObtainedDate('');\n    setError(null);\n    setSuccess(false);\n    setIsUploading(false);\n    onClose();\n  };\n\n  return (\n    <div className=\"fixed inset-0 z-[100] flex items-center justify-center bg-black/60 backdrop-blur-sm\">\n      <div className=\"bg-gradient-to-br from-slate-900 to-blue-950 border border-blue-700/50 rounded-xl shadow-2xl max-w-2xl w-full mx-4 p-6\">\n        {/* Header */}\n        <div className=\"flex items-start justify-between mb-6\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-10 h-10 bg-blue-600/20 rounded-lg flex items-center justify-center\">\n              <Upload className=\"w-5 h-5 text-blue-400\" />\n            </div>\n            <div>\n              <h3 className=\"text-lg font-bold text-white\">Upload Evidence</h3>\n              <p className=\"text-sm text-blue-300\">Add a file to your case</p>\n            </div>\n          </div>\n          <button\n            onClick={handleClose}\n            className=\"p-1 hover:bg-blue-800/30 rounded-lg transition-colors\"\n            aria-label=\"Close\"\n            disabled={isUploading}\n          >\n            <X className=\"w-5 h-5 text-blue-200\" />\n          </button>\n        </div>\n\n        {/* Success Message */}\n        {success && (\n          <div className=\"mb-4 p-4 bg-green-600/20 border border-green-600/30 rounded-lg flex items-center gap-3\">\n            <CheckCircle className=\"w-5 h-5 text-green-400 flex-shrink-0\" />\n            <div className=\"flex-1\">\n              <p className=\"text-green-200 font-medium\">Evidence uploaded successfully!</p>\n            </div>\n          </div>\n        )}\n\n        {/* Error Message */}\n        {error && (\n          <div className=\"mb-4 p-4 bg-red-600/20 border border-red-600/30 rounded-lg flex items-center gap-3\">\n            <AlertCircle className=\"w-5 h-5 text-red-400 flex-shrink-0\" />\n            <div className=\"flex-1\">\n              <p className=\"text-red-200\">{error}</p>\n            </div>\n            <button\n              onClick={(): void => setError(null)}\n              className=\"p-1 hover:bg-red-600/30 rounded transition-colors\"\n              aria-label=\"Dismiss error\"\n            >\n              <X className=\"w-4 h-4 text-red-300\" />\n            </button>\n          </div>\n        )}\n\n        {/* File Selection */}\n        <div className=\"mb-6\">\n          <label className=\"block text-sm font-medium text-blue-200 mb-2\">\n            Select File <span className=\"text-red-400\">*</span>\n          </label>\n          <div className=\"space-y-3\">\n            <button\n              onClick={handleSelectFile}\n              className=\"w-full px-4 py-3 bg-blue-600/20 hover:bg-blue-600/30 border border-blue-600/50 text-blue-200 rounded-lg transition-all font-medium flex items-center justify-center gap-2\"\n              disabled={isUploading}\n              type=\"button\"\n            >\n              <FileText className=\"w-5 h-5\" />\n              {selectedFile ? 'Change File' : 'Choose File'}\n            </button>\n\n            {selectedFile && (\n              <div className=\"p-4 bg-slate-800/50 border border-blue-700/30 rounded-lg\">\n                <div className=\"flex items-start justify-between gap-3\">\n                  <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n                    <FileText className=\"w-8 h-8 text-blue-400 flex-shrink-0\" />\n                    <div className=\"flex-1 min-w-0\">\n                      <p className=\"text-white font-medium truncate\">{selectedFile.name}</p>\n                      <p className=\"text-sm text-gray-400\">{formatFileSize(selectedFile.size)}</p>\n                    </div>\n                  </div>\n                  <CheckCircle className=\"w-5 h-5 text-green-400 flex-shrink-0\" />\n                </div>\n              </div>\n            )}\n          </div>\n          <p className=\"text-xs text-gray-400 mt-2\">\n            Supported formats: PDF, PNG, JPG, JPEG ‚Ä¢ Max size: {formatFileSize(MAX_FILE_SIZE)}\n          </p>\n        </div>\n\n        {/* Title */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"evidence-title\" className=\"block text-sm font-medium text-blue-200 mb-2\">\n            Title <span className=\"text-red-400\">*</span>\n          </label>\n          <input\n            id=\"evidence-title\"\n            type=\"text\"\n            value={title}\n            onChange={(e): void => setTitle(e.target.value)}\n            className=\"w-full px-4 py-2 bg-slate-800/50 border border-blue-700/30 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"Enter evidence title\"\n            disabled={isUploading}\n            required\n          />\n        </div>\n\n        {/* Description */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"evidence-description\" className=\"block text-sm font-medium text-blue-200 mb-2\">\n            Description (Optional)\n          </label>\n          <textarea\n            id=\"evidence-description\"\n            value={description}\n            onChange={(e): void => setDescription(e.target.value)}\n            className=\"w-full px-4 py-2 bg-slate-800/50 border border-blue-700/30 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 min-h-[80px] resize-y\"\n            placeholder=\"Add any notes or context about this evidence\"\n            disabled={isUploading}\n          />\n        </div>\n\n        {/* Evidence Type */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"evidence-type\" className=\"block text-sm font-medium text-blue-200 mb-2\">\n            Evidence Type\n          </label>\n          <select\n            id=\"evidence-type\"\n            value={evidenceType}\n            onChange={(e): void => setEvidenceType(e.target.value as EvidenceType)}\n            className=\"w-full px-4 py-2 bg-slate-800/50 border border-blue-700/30 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            disabled={isUploading}\n          >\n            <option value=\"document\">Document</option>\n            <option value=\"photo\">Photo</option>\n            <option value=\"email\">Email</option>\n            <option value=\"recording\">Recording</option>\n            <option value=\"note\">Note</option>\n          </select>\n        </div>\n\n        {/* Obtained Date */}\n        <div className=\"mb-6\">\n          <label htmlFor=\"obtained-date\" className=\"block text-sm font-medium text-blue-200 mb-2\">\n            Date Obtained (Optional)\n          </label>\n          <input\n            id=\"obtained-date\"\n            type=\"date\"\n            value={obtainedDate}\n            onChange={(e): void => setObtainedDate(e.target.value)}\n            className=\"w-full px-4 py-2 bg-slate-800/50 border border-blue-700/30 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            disabled={isUploading}\n          />\n        </div>\n\n        {/* Actions */}\n        <div className=\"flex gap-3 justify-end\">\n          <button\n            onClick={handleClose}\n            className=\"px-6 py-2 bg-slate-700 hover:bg-slate-600 text-white rounded-lg transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n            disabled={isUploading}\n            type=\"button\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleUpload}\n            className=\"px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2\"\n            disabled={isUploading || !selectedFile || !title.trim()}\n            type=\"button\"\n          >\n            {isUploading ? (\n              <>\n                <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\n                Uploading...\n              </>\n            ) : (\n              <>\n                <Upload className=\"w-4 h-4\" />\n                Upload Evidence\n              </>\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\documents\\hooks\\useEvidence.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\documents\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\facts\\components\\CaseFactsPanel.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\facts\\components\\CaseFactsPanel.tsx","messages":[{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":241,"column":22,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":241,"endColumn":76},{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":260,"column":26,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":262,"endColumn":18},{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":263,"column":26,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":263,"endColumn":69}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\nimport { PostItNote } from '../../../components/PostItNote';\nimport { useCaseFacts } from '../hooks/useCaseFacts';\nimport type { CaseFact } from '../../../models/CaseFact';\n\nexport interface CaseFactsPanelProps {\n  caseId: number;\n}\n\nconst categoryColors: Record<string, 'yellow' | 'blue' | 'green' | 'pink' | 'purple'> = {\n  timeline: 'blue',\n  evidence: 'green',\n  witness: 'yellow',\n  location: 'pink',\n  communication: 'purple',\n  other: 'yellow',\n};\n\nconst categoryLabels: Record<string, string> = {\n  timeline: 'Timeline',\n  evidence: 'Evidence',\n  witness: 'Witness',\n  location: 'Location',\n  communication: 'Communication',\n  other: 'Other',\n};\n\nconst importanceLabels: Record<string, string> = {\n  low: 'Low',\n  medium: 'Medium',\n  high: 'High',\n  critical: 'Critical',\n};\n\nexport function CaseFactsPanel({ caseId }: CaseFactsPanelProps): JSX.Element {\n  const {\n    caseFacts,\n    loading,\n    error,\n    createCaseFact,\n    updateCaseFact,\n    deleteCaseFact,\n  } = useCaseFacts(caseId);\n\n  const [filterCategory, setFilterCategory] = useState<string>('all');\n  const [filterImportance, setFilterImportance] = useState<string>('all');\n  const [isCreating, setIsCreating] = useState(false);\n  const [newFactCategory, setNewFactCategory] = useState<\n    'timeline' | 'evidence' | 'witness' | 'location' | 'communication' | 'other'\n  >('timeline');\n  const [newFactImportance, setNewFactImportance] = useState<\n    'low' | 'medium' | 'high' | 'critical'\n  >('medium');\n\n  const filteredFacts = caseFacts.filter((fact: CaseFact) => {\n    const categoryMatch =\n      filterCategory === 'all' || fact.factCategory === filterCategory;\n    const importanceMatch =\n      filterImportance === 'all' || fact.importance === filterImportance;\n    return categoryMatch && importanceMatch;\n  });\n\n  const handleCreate = async (content: string): Promise<void> => {\n    if (content.trim()) {\n      await createCaseFact({\n        caseId,\n        factContent: content,\n        factCategory: newFactCategory,\n        importance: newFactImportance,\n      });\n      setIsCreating(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-6 text-center text-blue-300\">\n        Loading case facts...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-6 text-center text-red-300 bg-red-900/30 rounded-lg\">\n        Error: {error}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-2xl font-bold text-white\">\n          Case Facts ({filteredFacts.length})\n        </h2>\n\n        <button\n          onClick={(): void => setIsCreating(true)}\n          className=\"px-5 py-2.5 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm font-bold transition-all duration-200\"\n        >\n          + Add Case Fact\n        </button>\n      </div>\n\n      {/* Filter Bar */}\n      <div className=\"mb-6 space-y-4\">\n        {/* Category Filters */}\n        <div>\n          <label className=\"block mb-2 font-bold text-white text-sm\">\n            Category:\n          </label>\n          <div className=\"flex gap-3 flex-wrap\">\n            <button\n              onClick={(): void => setFilterCategory('all')}\n              className={`px-4 py-2 rounded-full text-xs font-bold transition-all duration-200 ${\n                filterCategory === 'all'\n                  ? 'bg-green-600 text-white'\n                  : 'bg-slate-700/50 text-blue-300 hover:bg-slate-600/50'\n              }`}\n            >\n              All ({caseFacts.length})\n            </button>\n\n            {Object.entries(categoryLabels).map(([category, label]) => {\n              const count = caseFacts.filter((f: CaseFact) => f.factCategory === category).length;\n              return (\n                <button\n                  key={category}\n                  onClick={(): void => setFilterCategory(category)}\n                  className={`px-4 py-2 rounded-full text-xs font-bold transition-all duration-200 ${\n                    filterCategory === category\n                      ? 'bg-green-600 text-white'\n                      : 'bg-slate-700/50 text-blue-300 hover:bg-slate-600/50'\n                  }`}\n                >\n                  {label} ({count})\n                </button>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Importance Filters */}\n        <div>\n          <label className=\"block mb-2 font-bold text-white text-sm\">\n            Importance:\n          </label>\n          <div className=\"flex gap-3 flex-wrap\">\n            <button\n              onClick={(): void => setFilterImportance('all')}\n              className={`px-4 py-2 rounded-full text-xs font-bold transition-all duration-200 ${\n                filterImportance === 'all'\n                  ? 'bg-green-600 text-white'\n                  : 'bg-slate-700/50 text-blue-300 hover:bg-slate-600/50'\n              }`}\n            >\n              All\n            </button>\n\n            {Object.entries(importanceLabels).map(([importance, label]) => {\n              const count = caseFacts.filter(\n                (f: CaseFact) => f.importance === importance,\n              ).length;\n              return (\n                <button\n                  key={importance}\n                  onClick={(): void => setFilterImportance(importance)}\n                  className={`px-4 py-2 rounded-full text-xs font-bold transition-all duration-200 ${\n                    filterImportance === importance\n                      ? 'bg-green-600 text-white'\n                      : 'bg-slate-700/50 text-blue-300 hover:bg-slate-600/50'\n                  }`}\n                >\n                  {label} ({count})\n                </button>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* New Fact Creator */}\n      {isCreating && (\n        <div className=\"mb-6\">\n          <div className=\"flex gap-4 mb-3\">\n            <div className=\"flex-1\">\n              <label className=\"block mb-2 font-bold text-white text-sm\">\n                Category:\n              </label>\n              <select\n                value={newFactCategory}\n                onChange={(e): void =>\n                  setNewFactCategory(\n                    e.target.value as\n                      | 'timeline'\n                      | 'evidence'\n                      | 'witness'\n                      | 'location'\n                      | 'communication'\n                      | 'other',\n                  )\n                }\n                className=\"w-full px-3 py-2 border border-blue-700/30 bg-slate-800/50 rounded-lg text-sm text-white focus:outline-none focus:ring-2 focus:ring-green-500\"\n              >\n                {Object.entries(categoryLabels).map(([category, label]) => (\n                  <option key={category} value={category}>\n                    {label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"flex-1\">\n              <label className=\"block mb-2 font-bold text-white text-sm\">\n                Importance:\n              </label>\n              <select\n                value={newFactImportance}\n                onChange={(e): void =>\n                  setNewFactImportance(\n                    e.target.value as 'low' | 'medium' | 'high' | 'critical',\n                  )\n                }\n                className=\"w-full px-3 py-2 border border-blue-700/30 bg-slate-800/50 rounded-lg text-sm text-white focus:outline-none focus:ring-2 focus:ring-green-500\"\n              >\n                {Object.entries(importanceLabels).map(([importance, label]) => (\n                  <option key={importance} value={importance}>\n                    {label}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          <PostItNote\n            id={-1}\n            content=\"\"\n            color={categoryColors[newFactCategory]}\n            onUpdate={(_, content): Promise<void> => handleCreate(content)}\n            onDelete={(): void => setIsCreating(false)}\n          />\n        </div>\n      )}\n\n      {/* Facts Grid */}\n      {filteredFacts.length === 0 ? (\n        <div className=\"p-12 text-center text-blue-400 bg-slate-800/30 rounded-lg\">\n          No case facts match the current filters.\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n          {filteredFacts.map((fact: CaseFact) => (\n            <div key={fact.id} className=\"relative\">\n              <PostItNote\n                id={fact.id}\n                content={fact.factContent}\n                color={categoryColors[fact.factCategory]}\n                onUpdate={(id, content): Promise<void> =>\n                  updateCaseFact(id, { factContent: content })\n                }\n                onDelete={(id): Promise<void> => deleteCaseFact(id)}\n              />\n              {/* Importance badge */}\n              <div\n                className={`absolute -top-2 -left-2 px-2 py-1 text-white rounded-xl text-xs font-bold shadow-lg ${\n                  fact.importance === 'critical'\n                    ? 'bg-red-600'\n                    : fact.importance === 'high'\n                      ? 'bg-orange-600'\n                      : fact.importance === 'medium'\n                        ? 'bg-yellow-600'\n                        : 'bg-gray-500'\n                }`}\n              >\n                {importanceLabels[fact.importance]}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\facts\\components\\UserFactsPanel.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\facts\\components\\UserFactsPanel.tsx","messages":[{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":157,"column":22,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":157,"endColumn":76},{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":176,"column":24,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":178,"endColumn":16},{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":179,"column":24,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":179,"endColumn":67}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\nimport { PostItNote } from '../../../components/PostItNote';\nimport { useUserFacts } from '../hooks/useUserFacts';\nimport type { UserFact } from '../../../models/UserFact';\n\nexport interface UserFactsPanelProps {\n  caseId: number;\n}\n\nconst factTypeColors: Record<string, 'yellow' | 'blue' | 'green' | 'pink' | 'purple'> = {\n  personal: 'yellow',\n  employment: 'blue',\n  financial: 'green',\n  contact: 'pink',\n  medical: 'purple',\n  other: 'yellow',\n};\n\nconst factTypeLabels: Record<string, string> = {\n  personal: 'Personal',\n  employment: 'Employment',\n  financial: 'Financial',\n  contact: 'Contact',\n  medical: 'Medical',\n  other: 'Other',\n};\n\nexport function UserFactsPanel({ caseId }: UserFactsPanelProps): JSX.Element {\n  const {\n    userFacts,\n    loading,\n    error,\n    createUserFact,\n    updateUserFact,\n    deleteUserFact,\n  } = useUserFacts(caseId);\n\n  const [selectedType, setSelectedType] = useState<string>('all');\n  const [isCreating, setIsCreating] = useState(false);\n  const [newFactType, setNewFactType] = useState<\n    'personal' | 'employment' | 'financial' | 'contact' | 'medical' | 'other'\n  >('personal');\n\n  const filteredFacts =\n    selectedType === 'all'\n      ? userFacts\n      : userFacts.filter((fact: UserFact) => fact.factType === selectedType);\n\n  const handleCreate = async (content: string): Promise<void> => {\n    if (content.trim()) {\n      await createUserFact({\n        caseId,\n        factContent: content,\n        factType: newFactType,\n      });\n      setIsCreating(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-6 text-center text-blue-300\">\n        Loading user facts...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-6 text-center text-red-300 bg-red-900/30 rounded-lg\">\n        Error: {error}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-2xl font-bold text-white\">\n          User Facts ({filteredFacts.length})\n        </h2>\n\n        <button\n          onClick={(): void => setIsCreating(true)}\n          className=\"px-5 py-2.5 bg-blue-600 hover:bg-blue-700 text-white rounded-lg text-sm font-bold transition-all duration-200\"\n        >\n          + Add User Fact\n        </button>\n      </div>\n\n      {/* Filter Bar */}\n      <div className=\"flex gap-3 mb-6 flex-wrap\">\n        <button\n          onClick={(): void => setSelectedType('all')}\n          className={`px-4 py-2 rounded-full text-xs font-bold transition-all duration-200 ${\n            selectedType === 'all'\n              ? 'bg-blue-600 text-white'\n              : 'bg-slate-700/50 text-blue-300 hover:bg-slate-600/50'\n          }`}\n        >\n          All ({userFacts.length})\n        </button>\n\n        {Object.entries(factTypeLabels).map(([type, label]) => {\n          const count = userFacts.filter((f: UserFact) => f.factType === type).length;\n          return (\n            <button\n              key={type}\n              onClick={(): void => setSelectedType(type)}\n              className={`px-4 py-2 rounded-full text-xs font-bold transition-all duration-200 ${\n                selectedType === type\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-slate-700/50 text-blue-300 hover:bg-slate-600/50'\n              }`}\n            >\n              {label} ({count})\n            </button>\n          );\n        })}\n      </div>\n\n      {/* New Fact Creator */}\n      {isCreating && (\n        <div className=\"mb-6\">\n          <div className=\"mb-3\">\n            <label className=\"block mb-2 font-bold text-white text-sm\">\n              Fact Type:\n            </label>\n            <select\n              value={newFactType}\n              onChange={(e): void =>\n                setNewFactType(\n                  e.target.value as\n                    | 'personal'\n                    | 'employment'\n                    | 'financial'\n                    | 'contact'\n                    | 'medical'\n                    | 'other',\n                )\n              }\n              className=\"px-3 py-2 border border-blue-700/30 bg-slate-800/50 rounded-lg text-sm text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              {Object.entries(factTypeLabels).map(([type, label]) => (\n                <option key={type} value={type}>\n                  {label}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <PostItNote\n            id={-1}\n            content=\"\"\n            color={factTypeColors[newFactType]}\n            onUpdate={(_, content): Promise<void> => handleCreate(content)}\n            onDelete={(): void => setIsCreating(false)}\n          />\n        </div>\n      )}\n\n      {/* Facts Grid */}\n      {filteredFacts.length === 0 ? (\n        <div className=\"p-12 text-center text-blue-400 bg-slate-800/30 rounded-lg\">\n          No user facts yet. Click \"Add User Fact\" to create one.\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n          {filteredFacts.map((fact: UserFact) => (\n            <PostItNote\n              key={fact.id}\n              id={fact.id}\n              content={fact.factContent}\n              color={factTypeColors[fact.factType]}\n              onUpdate={(id, content): Promise<void> =>\n                updateUserFact(id, { factContent: content })\n              }\n              onDelete={(id): Promise<void> => deleteUserFact(id)}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\facts\\hooks\\useCaseFacts.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":21,"column":34,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":21,"endColumn":36},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":27,"column":34,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":27,"endColumn":36,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1067,1069],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":29,"column":31,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":29,"endColumn":33,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1120,1122],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":38,"column":60,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":38,"endColumn":62},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":44,"column":34,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":44,"endColumn":36,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1576,1578],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":46,"column":31,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":46,"endColumn":33,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1629,1631],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":55,"column":60,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":55,"endColumn":62},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":61,"column":34,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":61,"endColumn":36,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2097,2099],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":63,"column":31,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":63,"endColumn":33,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2150,2152],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":72,"column":61,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":72,"endColumn":63},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":79,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":79,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2671,2673],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":87,"column":73,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":87,"endColumn":75},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":96,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":96,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[3226,3228],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":104,"column":45,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":104,"endColumn":47},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":110,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":110,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[3662,3664],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport type { CaseFact, CreateCaseFactInput, UpdateCaseFactInput } from '../../../models/CaseFact';\n\ninterface UseCaseFactsReturn {\n  caseFacts: CaseFact[];\n  loading: boolean;\n  error: string | null;\n  createCaseFact: (input: CreateCaseFactInput) => Promise<CaseFact>;\n  updateCaseFact: (id: number, input: UpdateCaseFactInput) => Promise<CaseFact>;\n  deleteCaseFact: (id: number) => Promise<void>;\n  loadFactsByCategory: (factCategory: string) => Promise<void>;\n  loadFactsByImportance: (importance: string) => Promise<void>;\n  refresh: () => Promise<void>;\n}\n\nexport function useCaseFacts(caseId: number): UseCaseFactsReturn {\n  const [caseFacts, setCaseFacts] = useState<CaseFact[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadCaseFacts = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await window.electron.caseFacts.list(caseId);\n      if (result.success) {\n        setCaseFacts(result.data || []);\n      } else {\n        setError(result.error || 'Failed to load case facts');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadFactsByCategory = async (factCategory: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await window.electron.caseFacts.listByCategory(caseId, factCategory);\n      if (result.success) {\n        setCaseFacts(result.data || []);\n      } else {\n        setError(result.error || 'Failed to load case facts by category');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadFactsByImportance = async (importance: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await window.electron.caseFacts.listByImportance(caseId, importance);\n      if (result.success) {\n        setCaseFacts(result.data || []);\n      } else {\n        setError(result.error || 'Failed to load case facts by importance');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createCaseFact = async (input: CreateCaseFactInput) => {\n    try {\n      const result = await window.electron.caseFacts.create(input);\n      if (result.success && result.data) {\n        setCaseFacts((prev) => [...prev, result.data!]);\n        return result.data;\n      } else {\n        throw new Error(result.error || 'Failed to create case fact');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    }\n  };\n\n  const updateCaseFact = async (id: number, input: UpdateCaseFactInput) => {\n    try {\n      const result = await window.electron.caseFacts.update(id, input);\n      if (result.success && result.data) {\n        setCaseFacts((prev) =>\n          prev.map((fact) => (fact.id === id ? result.data! : fact)),\n        );\n        return result.data;\n      } else {\n        throw new Error(result.error || 'Failed to update case fact');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    }\n  };\n\n  const deleteCaseFact = async (id: number) => {\n    try {\n      const result = await window.electron.caseFacts.delete(id);\n      if (result.success) {\n        setCaseFacts((prev) => prev.filter((fact) => fact.id !== id));\n      } else {\n        throw new Error(result.error || 'Failed to delete case fact');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    }\n  };\n\n  useEffect(() => {\n    void loadCaseFacts();\n  }, [caseId]);\n\n  return {\n    caseFacts,\n    loading,\n    error,\n    createCaseFact,\n    updateCaseFact,\n    deleteCaseFact,\n    loadFactsByCategory,\n    loadFactsByImportance,\n    refresh: loadCaseFacts,\n  };\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\facts\\hooks\\useUserFacts.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":20,"column":34,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":20,"endColumn":36},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":26,"column":34,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":26,"endColumn":36,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[995,997],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":28,"column":31,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":28,"endColumn":33,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1048,1050],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":37,"column":52,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":37,"endColumn":54},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":43,"column":34,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":43,"endColumn":36,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1488,1490],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":45,"column":31,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":45,"endColumn":33,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1541,1543],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":54,"column":61,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":54,"endColumn":63},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":61,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":61,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2056,2058],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":69,"column":73,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":69,"endColumn":75},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":78,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":78,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2611,2613],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":86,"column":45,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":86,"endColumn":47},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":92,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":92,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[3047,3049],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport type { UserFact, CreateUserFactInput, UpdateUserFactInput } from '../../../models/UserFact';\n\ninterface UseUserFactsReturn {\n  userFacts: UserFact[];\n  loading: boolean;\n  error: string | null;\n  createUserFact: (input: CreateUserFactInput) => Promise<UserFact>;\n  updateUserFact: (id: number, input: UpdateUserFactInput) => Promise<UserFact>;\n  deleteUserFact: (id: number) => Promise<void>;\n  loadFactsByType: (factType: string) => Promise<void>;\n  refresh: () => Promise<void>;\n}\n\nexport function useUserFacts(caseId: number): UseUserFactsReturn {\n  const [userFacts, setUserFacts] = useState<UserFact[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadUserFacts = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await window.electron.userFacts.list(caseId);\n      if (result.success) {\n        setUserFacts(result.data || []);\n      } else {\n        setError(result.error || 'Failed to load user facts');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadFactsByType = async (factType: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await window.electron.userFacts.listByType(caseId, factType);\n      if (result.success) {\n        setUserFacts(result.data || []);\n      } else {\n        setError(result.error || 'Failed to load user facts by type');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createUserFact = async (input: CreateUserFactInput) => {\n    try {\n      const result = await window.electron.userFacts.create(input);\n      if (result.success && result.data) {\n        setUserFacts((prev) => [...prev, result.data!]);\n        return result.data;\n      } else {\n        throw new Error(result.error || 'Failed to create user fact');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    }\n  };\n\n  const updateUserFact = async (id: number, input: UpdateUserFactInput) => {\n    try {\n      const result = await window.electron.userFacts.update(id, input);\n      if (result.success && result.data) {\n        setUserFacts((prev) =>\n          prev.map((fact) => (fact.id === id ? result.data! : fact)),\n        );\n        return result.data;\n      } else {\n        throw new Error(result.error || 'Failed to update user fact');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    }\n  };\n\n  const deleteUserFact = async (id: number) => {\n    try {\n      const result = await window.electron.userFacts.delete(id);\n      if (result.success) {\n        setUserFacts((prev) => prev.filter((fact) => fact.id !== id));\n      } else {\n        throw new Error(result.error || 'Failed to delete user fact');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    }\n  };\n\n  useEffect(() => {\n    void loadUserFacts();\n  }, [caseId]);\n\n  return {\n    userFacts,\n    loading,\n    error,\n    createUserFact,\n    updateUserFact,\n    deleteUserFact,\n    loadFactsByType,\n    refresh: loadUserFacts,\n  };\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\facts\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\facts\\services\\CaseFactsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\facts\\services\\UserFactsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\legal\\components\\LegalIssuesPanel.tsx","messages":[{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":174,"column":23,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":174,"endColumn":37},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":333,"column":31,"nodeType":"CallExpression","messageId":"unexpected","endLine":333,"endColumn":73}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\nimport { useLegalIssues } from '../hooks/useLegalIssues';\nimport type { LegalIssue } from '@/models/LegalIssue';\n\nexport interface LegalIssuesPanelProps {\n  caseId: number;\n}\n\n// Legal issues don't have status - removed\n\nexport function LegalIssuesPanel({ caseId }: LegalIssuesPanelProps): JSX.Element {\n  const {\n    legalIssues,\n    loading,\n    error,\n    createLegalIssue,\n    deleteLegalIssue,\n  } = useLegalIssues(caseId);\n\n  const [expandedId, setExpandedId] = useState<number | null>(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [newIssue, setNewIssue] = useState({\n    title: '',\n    description: '',\n  });\n\n  const handleCreate = async (): Promise<void> => {\n    if (newIssue.title.trim()) {\n      await createLegalIssue({\n        caseId,\n        title: newIssue.title,\n        description: newIssue.description,\n      });\n      setNewIssue({ title: '', description: '' });\n      setIsCreating(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div style={{ padding: '24px', textAlign: 'center', color: '#666' }}>\n        Loading legal issues...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div\n        style={{\n          padding: '24px',\n          textAlign: 'center',\n          color: '#d32f2f',\n          background: '#ffebee',\n          borderRadius: '4px',\n        }}\n      >\n        Error: {error}\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ padding: '24px' }}>\n      {/* Header */}\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '24px',\n        }}\n      >\n        <h2 style={{ margin: 0, color: '#333', fontSize: '24px' }}>\n          Legal Issues ({legalIssues.length})\n        </h2>\n\n        <button\n          onClick={(): void => setIsCreating(true)}\n          style={{\n            padding: '10px 20px',\n            background: '#7b1fa2',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            fontSize: '14px',\n            fontWeight: 'bold',\n            cursor: 'pointer',\n            transition: 'background 0.2s ease',\n          }}\n          onMouseEnter={(e): void => {\n            e.currentTarget.style.background = '#6a1b9a';\n          }}\n          onMouseLeave={(e): void => {\n            e.currentTarget.style.background = '#7b1fa2';\n          }}\n        >\n          + Add Legal Issue\n        </button>\n      </div>\n\n      {/* New Issue Creator */}\n      {isCreating && (\n        <div\n          style={{\n            marginBottom: '16px',\n            padding: '16px',\n            background: '#f3e5f5',\n            border: '2px solid #7b1fa2',\n            borderRadius: '8px',\n          }}\n        >\n          <div style={{ marginBottom: '12px' }}>\n            <label\n              style={{\n                display: 'block',\n                marginBottom: '8px',\n                fontWeight: 'bold',\n                color: '#333',\n              }}\n            >\n              Title:\n            </label>\n            <input\n              type=\"text\"\n              value={newIssue.title}\n              onChange={(e): void =>\n                setNewIssue({ ...newIssue, title: e.target.value })\n              }\n              placeholder=\"Enter issue title...\"\n              style={{\n                width: '100%',\n                padding: '8px 12px',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                fontSize: '14px',\n              }}\n              autoFocus\n            />\n          </div>\n\n          <div style={{ marginBottom: '12px' }}>\n            <label\n              style={{\n                display: 'block',\n                marginBottom: '8px',\n                fontWeight: 'bold',\n                color: '#333',\n              }}\n            >\n              Description:\n            </label>\n            <textarea\n              value={newIssue.description}\n              onChange={(e): void =>\n                setNewIssue({ ...newIssue, description: e.target.value })\n              }\n              placeholder=\"Enter detailed description...\"\n              style={{\n                width: '100%',\n                minHeight: '100px',\n                padding: '12px',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                fontSize: '14px',\n                fontFamily: 'inherit',\n                resize: 'vertical',\n              }}\n            />\n          </div>\n\n          <div style={{ display: 'flex', gap: '12px', marginTop: '12px' }}>\n            <button\n              onClick={handleCreate}\n              style={{\n                padding: '8px 16px',\n                background: '#388e3c',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                fontSize: '14px',\n                fontWeight: 'bold',\n                cursor: 'pointer',\n              }}\n            >\n              Save\n            </button>\n            <button\n              onClick={(): void => {\n                setIsCreating(false);\n                setNewIssue({ title: '', description: '' });\n              }}\n              style={{\n                padding: '8px 16px',\n                background: '#757575',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                fontSize: '14px',\n                fontWeight: 'bold',\n                cursor: 'pointer',\n              }}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Legal Issues Accordion */}\n      {legalIssues.length === 0 ? (\n        <div\n          style={{\n            padding: '48px',\n            textAlign: 'center',\n            color: '#999',\n            background: '#f5f5f5',\n            borderRadius: '8px',\n          }}\n        >\n          No legal issues yet. Click \"Add Legal Issue\" to create one.\n        </div>\n      ) : (\n        <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n          {legalIssues.map((issue: LegalIssue) => {\n            const isExpanded = expandedId === issue.id;\n\n            return (\n              <div\n                key={issue.id}\n                style={{\n                  border: '1px solid #e0e0e0',\n                  borderRadius: '8px',\n                  overflow: 'hidden',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n                }}\n              >\n                {/* Accordion Header */}\n                <div\n                  onClick={(): void =>\n                    setExpandedId(isExpanded ? null : issue.id)\n                  }\n                  style={{\n                    padding: '16px',\n                    background: isExpanded ? '#f5f5f5' : 'white',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    transition: 'background 0.2s ease',\n                  }}\n                  onMouseEnter={(e): void => {\n                    if (!isExpanded) {\n                      e.currentTarget.style.background = '#fafafa';\n                    }\n                  }}\n                  onMouseLeave={(e): void => {\n                    if (!isExpanded) {\n                      e.currentTarget.style.background = 'white';\n                    }\n                  }}\n                >\n                  <div style={{ flex: 1 }}>\n                    <div\n                      style={{\n                        fontWeight: 'bold',\n                        color: '#333',\n                        fontSize: '16px',\n                      }}\n                    >\n                      {issue.title}\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      fontSize: '24px',\n                      color: '#999',\n                      transform: isExpanded ? 'rotate(180deg)' : 'rotate(0deg)',\n                      transition: 'transform 0.2s ease',\n                    }}\n                  >\n                    ‚ñº\n                  </div>\n                </div>\n\n                {/* Accordion Body */}\n                {isExpanded && (\n                  <div\n                    style={{\n                      padding: '16px',\n                      background: 'white',\n                      borderTop: '1px solid #e0e0e0',\n                    }}\n                  >\n                    {issue.description ? (\n                      <div\n                        style={{\n                          whiteSpace: 'pre-wrap',\n                          wordBreak: 'break-word',\n                          color: '#555',\n                          fontSize: '14px',\n                          lineHeight: '1.6',\n                          marginBottom: '16px',\n                        }}\n                      >\n                        {issue.description}\n                      </div>\n                    ) : (\n                      <div\n                        style={{\n                          color: '#999',\n                          fontSize: '14px',\n                          fontStyle: 'italic',\n                          marginBottom: '16px',\n                        }}\n                      >\n                        No description provided.\n                      </div>\n                    )}\n\n                    <div\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                      }}\n                    >\n                      <div style={{ fontSize: '12px', color: '#999' }}>\n                        Created: {new Date(issue.createdAt).toLocaleString()}\n                      </div>\n                      <button\n                        onClick={(): void => {\n                          if (window.confirm('Delete this legal issue?')) {\n                            void deleteLegalIssue(issue.id);\n                          }\n                        }}\n                        style={{\n                          padding: '6px 12px',\n                          background: '#d32f2f',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '4px',\n                          fontSize: '12px',\n                          fontWeight: 'bold',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\legal\\hooks\\useLegalIssues.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":19,"column":36,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":19,"endColumn":38},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":25,"column":36,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":25,"endColumn":38,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[976,978],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":27,"column":31,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":27,"endColumn":33,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1029,1031],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":36,"column":65,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":36,"endColumn":67},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":43,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":43,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1546,1548],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":51,"column":77,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":51,"endColumn":79},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":60,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":60,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2114,2116],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":68,"column":47,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":68,"endColumn":49},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":74,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":74,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2560,2562],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport type { LegalIssue, CreateLegalIssueInput, UpdateLegalIssueInput } from '@/models/LegalIssue';\n\ninterface UseLegalIssuesReturn {\n  legalIssues: LegalIssue[];\n  loading: boolean;\n  error: string | null;\n  createLegalIssue: (input: CreateLegalIssueInput) => Promise<LegalIssue>;\n  updateLegalIssue: (id: number, input: UpdateLegalIssueInput) => Promise<LegalIssue>;\n  deleteLegalIssue: (id: number) => Promise<void>;\n  refresh: () => Promise<void>;\n}\n\nexport function useLegalIssues(caseId: number): UseLegalIssuesReturn {\n  const [legalIssues, setLegalIssues] = useState<LegalIssue[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadLegalIssues = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await window.electron.legalIssues.list(caseId);\n      if (result.success) {\n        setLegalIssues(result.data || []);\n      } else {\n        setError(result.error || 'Failed to load legal issues');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createLegalIssue = async (input: CreateLegalIssueInput) => {\n    try {\n      const result = await window.electron.legalIssues.create(input);\n      if (result.success && result.data) {\n        setLegalIssues((prev) => [...prev, result.data!]);\n        return result.data;\n      } else {\n        throw new Error(result.error || 'Failed to create legal issue');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    }\n  };\n\n  const updateLegalIssue = async (id: number, input: UpdateLegalIssueInput) => {\n    try {\n      const result = await window.electron.legalIssues.update(id, input);\n      if (result.success && result.data) {\n        setLegalIssues((prev) =>\n          prev.map((issue) => (issue.id === id ? result.data! : issue)),\n        );\n        return result.data;\n      } else {\n        throw new Error(result.error || 'Failed to update legal issue');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    }\n  };\n\n  const deleteLegalIssue = async (id: number) => {\n    try {\n      const result = await window.electron.legalIssues.delete(id);\n      if (result.success) {\n        setLegalIssues((prev) => prev.filter((issue) => issue.id !== id));\n      } else {\n        throw new Error(result.error || 'Failed to delete legal issue');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    }\n  };\n\n  useEffect(() => {\n    void loadLegalIssues();\n  }, [caseId]);\n\n  return {\n    legalIssues,\n    loading,\n    error,\n    createLegalIssue,\n    updateLegalIssue,\n    deleteLegalIssue,\n    refresh: loadLegalIssues,\n  };\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\legal\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\legal\\services\\LegalIssuesService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\notes\\components\\NotesPanel.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\notes\\components\\NotesPanel.tsx","messages":[{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":78,"column":23,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":78,"endColumn":37},{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":118,"column":31,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":118,"endColumn":60},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":155,"column":31,"nodeType":"CallExpression","messageId":"unexpected","endLine":155,"endColumn":66}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\nimport { useNotes } from '../hooks/useNotes';\nimport type { Note } from '@/models/Note';\n\nexport interface NotesPanelProps {\n  caseId: number;\n}\n\nexport function NotesPanel({ caseId }: NotesPanelProps): JSX.Element {\n  const { notes, loading, error, createNote, updateNote, deleteNote } =\n    useNotes(caseId);\n\n  const [isCreating, setIsCreating] = useState(false);\n  const [newNoteContent, setNewNoteContent] = useState('');\n  const [editingId, setEditingId] = useState<number | null>(null);\n  const [editContent, setEditContent] = useState('');\n\n  const handleCreate = async (): Promise<void> => {\n    if (newNoteContent.trim()) {\n      await createNote(newNoteContent);\n      setNewNoteContent('');\n      setIsCreating(false);\n    }\n  };\n\n  const handleUpdate = async (id: number): Promise<void> => {\n    if (editContent.trim()) {\n      await updateNote(id, editContent);\n      setEditingId(null);\n      setEditContent('');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-6 text-center text-blue-300\">\n        Loading notes...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-6 text-center text-red-300 bg-red-900/30 rounded-lg\">\n        Error: {error}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-2xl font-bold text-white\">\n          Notes ({notes.length})\n        </h2>\n\n        <button\n          onClick={() => setIsCreating(true)}\n          className=\"px-5 py-2.5 bg-yellow-600 hover:bg-yellow-700 text-white rounded-lg text-sm font-bold transition-all duration-200\"\n        >\n          + Add Note\n        </button>\n      </div>\n\n      {/* New Note Creator */}\n      {isCreating && (\n        <div className=\"mb-4 p-4 bg-yellow-900/20 border-2 border-yellow-600/50 rounded-lg\">\n          <textarea\n            value={newNoteContent}\n            onChange={(e) => setNewNoteContent(e.target.value)}\n            placeholder=\"Enter note content...\"\n            className=\"w-full min-h-[100px] p-3 border border-blue-700/30 bg-slate-800/50 rounded-lg text-sm text-white placeholder-blue-400/50 focus:outline-none focus:ring-2 focus:ring-yellow-500 resize-y\"\n            autoFocus\n          />\n          <div className=\"flex gap-3 mt-3\">\n            <button\n              onClick={handleCreate}\n              className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm font-bold transition-all duration-200\"\n            >\n              Save\n            </button>\n            <button\n              onClick={() => {\n                setIsCreating(false);\n                setNewNoteContent('');\n              }}\n              className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm font-bold transition-all duration-200\"\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Notes List */}\n      {notes.length === 0 ? (\n        <div className=\"p-12 text-center text-blue-400 bg-slate-800/30 rounded-lg\">\n          No notes yet. Click \"Add Note\" to create one.\n        </div>\n      ) : (\n        <div className=\"flex flex-col gap-3\">\n          {notes.map((note: Note) => (\n            <div\n              key={note.id}\n              className=\"p-4 bg-slate-900/50 border border-blue-800/30 rounded-lg shadow-lg\"\n            >\n              {editingId === note.id ? (\n                <div>\n                  <textarea\n                    value={editContent}\n                    onChange={(e) => setEditContent(e.target.value)}\n                    className=\"w-full min-h-[100px] p-3 border border-blue-700/30 bg-slate-800/50 rounded-lg text-sm text-white focus:outline-none focus:ring-2 focus:ring-blue-500 resize-y\"\n                    autoFocus\n                  />\n                  <div className=\"flex gap-3 mt-3\">\n                    <button\n                      onClick={() => handleUpdate(note.id)}\n                      className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm font-bold transition-all duration-200\"\n                    >\n                      Save\n                    </button>\n                    <button\n                      onClick={() => {\n                        setEditingId(null);\n                        setEditContent('');\n                      }}\n                      className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm font-bold transition-all duration-200\"\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div>\n                  <div className=\"whitespace-pre-wrap break-words text-blue-100 text-sm leading-relaxed mb-3\">\n                    {note.content}\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"text-xs text-blue-400/70\">\n                      {new Date(note.updatedAt).toLocaleString()}\n                    </div>\n                    <div className=\"flex gap-2\">\n                      <button\n                        onClick={() => {\n                          setEditingId(note.id);\n                          setEditContent(note.content);\n                        }}\n                        className=\"px-3 py-1.5 bg-blue-600 hover:bg-blue-700 text-white rounded text-xs font-bold transition-all duration-200\"\n                      >\n                        Edit\n                      </button>\n                      <button\n                        onClick={() => {\n                          if (window.confirm('Delete this note?')) {\n                            void deleteNote(note.id);\n                          }\n                        }}\n                        className=\"px-3 py-1.5 bg-red-600 hover:bg-red-700 text-white rounded text-xs font-bold transition-all duration-200\"\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\notes\\hooks\\useNotes.ts","messages":[{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":25,"column":30,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":25,"endColumn":32,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[835,837],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":27,"column":31,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":27,"endColumn":33,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[888,890],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":43,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":43,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1404,1406],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":58,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":58,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1931,1933],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":72,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":72,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2359,2361],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport type { Note } from '@/models/Note';\n\ninterface UseNotesReturn {\n  notes: Note[];\n  loading: boolean;\n  error: string | null;\n  createNote: (content: string) => Promise<Note | undefined>;\n  updateNote: (id: number, content: string) => Promise<Note | undefined>;\n  deleteNote: (id: number) => Promise<void>;\n  refresh: () => Promise<void>;\n}\n\nexport function useNotes(caseId: number): UseNotesReturn {\n  const [notes, setNotes] = useState<Note[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadNotes = async (): Promise<void> => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await window.electron.notes.list(caseId);\n      if (result.success) {\n        setNotes(result.data || []);\n      } else {\n        setError(result.error || 'Failed to load notes');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createNote = async (content: string): Promise<Note | undefined> => {\n    try {\n      const result = await window.electron.notes.create(caseId, content);\n      if (result.success && result.data) {\n        setNotes((prev) => [...prev, result.data!]);\n        return result.data;\n      } else {\n        throw new Error(result.error || 'Failed to create note');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    }\n  };\n\n  const updateNote = async (id: number, content: string): Promise<Note | undefined> => {\n    try {\n      const result = await window.electron.notes.update(id, content);\n      if (result.success && result.data) {\n        setNotes((prev) => prev.map((n) => (n.id === id ? result.data! : n)));\n        return result.data;\n      } else {\n        throw new Error(result.error || 'Failed to update note');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    }\n  };\n\n  const deleteNote = async (id: number): Promise<void> => {\n    try {\n      const result = await window.electron.notes.delete(id);\n      if (result.success) {\n        setNotes((prev) => prev.filter((n) => n.id !== id));\n      } else {\n        throw new Error(result.error || 'Failed to delete note');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    }\n  };\n\n  useEffect(() => {\n    void loadNotes();\n  }, [caseId]);\n\n  return {\n    notes,\n    loading,\n    error,\n    createNote,\n    updateNote,\n    deleteNote,\n    refresh: loadNotes,\n  };\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\notes\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\notes\\services\\NotesService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\settings\\components\\SettingsView.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\settings\\components\\SettingsView.tsx","messages":[{"ruleId":"@typescript-eslint/no-unsafe-return","severity":1,"message":"Unsafe return of a value of type `any`.","line":24,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":24,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":1,"message":"Unsafe return of a value of type `any`.","line":30,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":30,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":1,"message":"Unsafe return of a value of type `any`.","line":35,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":35,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":1,"message":"Unsafe return of a value of type `any`.","line":40,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":40,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":1,"message":"Unsafe return of a value of type `any`.","line":46,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":46,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":1,"message":"Unsafe return of a value of type `any`.","line":52,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":52,"endColumn":54},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":57,"column":18,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":57,"endColumn":20,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2378,2380],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":63,"column":18,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":63,"endColumn":20,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2574,2576],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":68,"column":18,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":68,"endColumn":20,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2733,2735],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":1,"message":"Unsafe return of a value of type `any`.","line":73,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":73,"endColumn":54},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":79,"column":18,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":79,"endColumn":20,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[3111,3113],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":84,"column":18,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":84,"endColumn":20,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[3287,3289],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":1,"message":"Unsafe return of a value of type `any`.","line":90,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":90,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":1,"message":"Unsafe return of a value of type `any`.","line":95,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":95,"endColumn":54},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":101,"column":18,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":101,"endColumn":20,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[3890,3892],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":106,"column":18,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":106,"endColumn":20,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[4050,4052],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":111,"column":18,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":111,"endColumn":20,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[4204,4206],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":117,"column":18,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":117,"endColumn":20,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[4405,4407],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":122,"column":18,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":122,"endColumn":20,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[4567,4569],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":127,"column":18,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":127,"endColumn":20,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[4727,4729],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":147,"column":44,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":147,"endColumn":46,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[5339,5341],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":370,"column":29,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":370,"endColumn":48},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":386,"column":55,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":386,"endColumn":57,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[13737,13739],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":387,"column":57,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":387,"endColumn":59,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[13801,13803],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":400,"column":44,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":400,"endColumn":46,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[14327,14329],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":406,"column":45,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":406,"endColumn":47,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[14558,14560],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":585,"column":30,"nodeType":"MemberExpression","messageId":"limited","endLine":585,"endColumn":41},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":609,"column":30,"nodeType":"MemberExpression","messageId":"limited","endLine":609,"endColumn":41},{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":705,"column":19,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":705,"endColumn":39}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect, type ComponentType, type ReactNode } from 'react';\nimport { User, Bell, Lock, Database, Info, Brain, Briefcase } from 'lucide-react';\nimport { ConfirmDialog } from '@/components/ConfirmDialog';\nimport { useToast } from '@/hooks/useToast';\nimport { SkeletonText } from '@/components/ui/Skeleton';\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner';\nimport type { UserProfile } from '@/models/UserProfile';\n\nexport function SettingsView(): JSX.Element {\n  const toast = useToast();\n\n  // User Profile\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\n  const [isEditingProfile, setIsEditingProfile] = useState(false);\n  const [editedName, setEditedName] = useState('');\n  const [editedEmail, setEditedEmail] = useState('');\n  const [showSaveSuccess, setShowSaveSuccess] = useState(false);\n  const [isLoadingProfile, setIsLoadingProfile] = useState(true);\n  const [isSavingProfile, setIsSavingProfile] = useState(false);\n\n  // RAG toggle state - persisted in localStorage\n  const [ragEnabled, setRagEnabled] = useState<boolean>(() => {\n    const saved = localStorage.getItem('ragEnabled');\n    return saved !== null ? JSON.parse(saved) : true; // Default: enabled\n  });\n\n  // Notification toggles\n  const [chatNotifications, setChatNotifications] = useState<boolean>(() => {\n    const saved = localStorage.getItem('chatNotifications');\n    return saved !== null ? JSON.parse(saved) : true;\n  });\n\n  const [caseUpdates, setCaseUpdates] = useState<boolean>(() => {\n    const saved = localStorage.getItem('caseUpdates');\n    return saved !== null ? JSON.parse(saved) : true;\n  });\n\n  const [documentAnalysisNotif, setDocumentAnalysisNotif] = useState<boolean>(() => {\n    const saved = localStorage.getItem('documentAnalysisNotif');\n    return saved !== null ? JSON.parse(saved) : false;\n  });\n\n  // Privacy toggle\n  const [encryptData, setEncryptData] = useState<boolean>(() => {\n    const saved = localStorage.getItem('encryptData');\n    return saved !== null ? JSON.parse(saved) : true;\n  });\n\n  // Appearance settings\n  const [darkMode, setDarkMode] = useState<boolean>(() => {\n    const saved = localStorage.getItem('darkMode');\n    return saved !== null ? JSON.parse(saved) : true;\n  });\n\n  const [fontSize, setFontSize] = useState(() => {\n    const saved = localStorage.getItem('fontSize');\n    return saved || 'medium';\n  });\n\n  // Voice Input settings\n  const [selectedMicrophone, setSelectedMicrophone] = useState(() => {\n    const saved = localStorage.getItem('selectedMicrophone');\n    return saved || 'default';\n  });\n\n  const [speechLanguage, setSpeechLanguage] = useState(() => {\n    const saved = localStorage.getItem('speechLanguage');\n    return saved || 'en-GB';\n  });\n\n  const [autoTranscribe, setAutoTranscribe] = useState<boolean>(() => {\n    const saved = localStorage.getItem('autoTranscribe');\n    return saved !== null ? JSON.parse(saved) : true;\n  });\n\n  // Export & Backup settings\n  const [exportLocation, setExportLocation] = useState(() => {\n    const saved = localStorage.getItem('exportLocation');\n    return saved || 'Downloads';\n  });\n\n  const [autoBackupFrequency, setAutoBackupFrequency] = useState(() => {\n    const saved = localStorage.getItem('autoBackupFrequency');\n    return saved || 'daily';\n  });\n\n  // Accessibility settings\n  const [highContrast, setHighContrast] = useState<boolean>(() => {\n    const saved = localStorage.getItem('highContrast');\n    return saved !== null ? JSON.parse(saved) : false;\n  });\n\n  const [screenReaderSupport, setScreenReaderSupport] = useState<boolean>(() => {\n    const saved = localStorage.getItem('screenReaderSupport');\n    return saved !== null ? JSON.parse(saved) : true;\n  });\n\n  // Advanced AI settings\n  const [responseLength, setResponseLength] = useState(() => {\n    const saved = localStorage.getItem('responseLength');\n    return saved || 'balanced';\n  });\n\n  const [citationDetail, setCitationDetail] = useState(() => {\n    const saved = localStorage.getItem('citationDetail');\n    return saved || 'detailed';\n  });\n\n  const [jurisdiction, setJurisdiction] = useState(() => {\n    const saved = localStorage.getItem('jurisdiction');\n    return saved || 'uk-england-wales';\n  });\n\n  // Case Management settings\n  const [defaultCaseType, setDefaultCaseType] = useState(() => {\n    const saved = localStorage.getItem('defaultCaseType');\n    return saved || 'general';\n  });\n\n  const [autoArchiveDays, setAutoArchiveDays] = useState(() => {\n    const saved = localStorage.getItem('autoArchiveDays');\n    return saved || '90';\n  });\n\n  const [caseNumberFormat, setCaseNumberFormat] = useState(() => {\n    const saved = localStorage.getItem('caseNumberFormat');\n    return saved || 'YYYY-NNNN';\n  });\n\n  // Clear data confirmation\n  const [clearDataConfirmOpen, setClearDataConfirmOpen] = useState(false);\n\n  // Load user profile on mount\n  useEffect(() => {\n    const loadProfile = async (): Promise<void> => {\n      if (!window.justiceAPI) {\n        setIsLoadingProfile(false);\n        return;\n      }\n\n      setIsLoadingProfile(true);\n      try {\n        const result = await window.justiceAPI.getUserProfile();\n        if (result.success && result.data) {\n          setUserProfile(result.data);\n          setEditedName(result.data.name || '');\n          setEditedEmail(result.data.email || '');\n        }\n      } catch (error) {\n        console.error('Failed to load user profile:', error);\n      } finally {\n        setIsLoadingProfile(false);\n      }\n    };\n\n    void loadProfile();\n  }, []);\n\n  // Persist RAG setting to localStorage\n  useEffect(() => {\n    localStorage.setItem('ragEnabled', JSON.stringify(ragEnabled));\n  }, [ragEnabled]);\n\n  // Persist notification settings\n  useEffect(() => {\n    localStorage.setItem('chatNotifications', JSON.stringify(chatNotifications));\n  }, [chatNotifications]);\n\n  useEffect(() => {\n    localStorage.setItem('caseUpdates', JSON.stringify(caseUpdates));\n  }, [caseUpdates]);\n\n  useEffect(() => {\n    localStorage.setItem('documentAnalysisNotif', JSON.stringify(documentAnalysisNotif));\n  }, [documentAnalysisNotif]);\n\n  // Persist privacy settings\n  useEffect(() => {\n    localStorage.setItem('encryptData', JSON.stringify(encryptData));\n  }, [encryptData]);\n\n  // Persist appearance settings\n  useEffect(() => {\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  useEffect(() => {\n    localStorage.setItem('fontSize', fontSize);\n  }, [fontSize]);\n\n  // Persist voice input settings\n  useEffect(() => {\n    localStorage.setItem('selectedMicrophone', selectedMicrophone);\n  }, [selectedMicrophone]);\n\n  useEffect(() => {\n    localStorage.setItem('speechLanguage', speechLanguage);\n  }, [speechLanguage]);\n\n  useEffect(() => {\n    localStorage.setItem('autoTranscribe', JSON.stringify(autoTranscribe));\n  }, [autoTranscribe]);\n\n  // Persist export & backup settings\n  useEffect(() => {\n    localStorage.setItem('exportLocation', exportLocation);\n  }, [exportLocation]);\n\n  useEffect(() => {\n    localStorage.setItem('autoBackupFrequency', autoBackupFrequency);\n  }, [autoBackupFrequency]);\n\n  // Persist accessibility settings\n  useEffect(() => {\n    localStorage.setItem('highContrast', JSON.stringify(highContrast));\n  }, [highContrast]);\n\n  useEffect(() => {\n    localStorage.setItem('screenReaderSupport', JSON.stringify(screenReaderSupport));\n  }, [screenReaderSupport]);\n\n  // Persist advanced AI settings\n  useEffect(() => {\n    localStorage.setItem('responseLength', responseLength);\n  }, [responseLength]);\n\n  useEffect(() => {\n    localStorage.setItem('citationDetail', citationDetail);\n  }, [citationDetail]);\n\n  useEffect(() => {\n    localStorage.setItem('jurisdiction', jurisdiction);\n  }, [jurisdiction]);\n\n  // Persist case management settings\n  useEffect(() => {\n    localStorage.setItem('defaultCaseType', defaultCaseType);\n  }, [defaultCaseType]);\n\n  useEffect(() => {\n    localStorage.setItem('autoArchiveDays', autoArchiveDays);\n  }, [autoArchiveDays]);\n\n  useEffect(() => {\n    localStorage.setItem('caseNumberFormat', caseNumberFormat);\n  }, [caseNumberFormat]);\n\n  const handleSaveProfile = async (): Promise<void> => {\n    if (!window.justiceAPI) {\n      return;\n    }\n\n    setIsSavingProfile(true);\n    try {\n      const result = await window.justiceAPI.updateUserProfile({\n        name: editedName,\n        email: editedEmail,\n      });\n\n      if (result.success && result.data) {\n        setUserProfile(result.data);\n        setIsEditingProfile(false);\n        setShowSaveSuccess(true);\n        setTimeout(() => setShowSaveSuccess(false), 3000);\n      }\n    } catch (error) {\n      console.error('Failed to update profile:', error);\n      toast.error('Failed to update profile. Please try again.');\n    } finally {\n      setIsSavingProfile(false);\n    }\n  };\n\n  const handleClearAllData = async (): Promise<void> => {\n    try {\n      toast.info('Clearing all data...');\n\n      // Get all cases\n      const casesResponse = await window.justiceAPI.getAllCases();\n      if (casesResponse.success && casesResponse.data.length > 0) {\n        // Delete each case (should cascade delete evidence)\n        for (const caseItem of casesResponse.data) {\n          await window.justiceAPI.deleteCase(caseItem.id);\n        }\n      }\n\n      // Get all conversations\n      const conversationsResponse = await window.justiceAPI.getAllConversations();\n      if (conversationsResponse.success && conversationsResponse.data.length > 0) {\n        // Delete each conversation\n        for (const conversation of conversationsResponse.data) {\n          await window.justiceAPI.deleteConversation(conversation.id);\n        }\n      }\n\n      // Clear localStorage settings (except RAG and notification preferences)\n      // We keep user preferences but clear application data\n      localStorage.removeItem('recentSearches');\n      localStorage.removeItem('draftMessages');\n\n      toast.success('All data cleared successfully!');\n      setClearDataConfirmOpen(false);\n\n      // Reload page to reset all state\n      setTimeout(() => {\n        window.location.reload();\n      }, 1000);\n    } catch (error) {\n      console.error('Failed to clear data:', error);\n      toast.error('Failed to clear all data. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"flex-1 overflow-hidden p-6 flex flex-col\">\n      {/* Success Message */}\n      {showSaveSuccess && (\n        <div className=\"mb-4 p-3 bg-green-600/20 border border-green-500/30 rounded-lg flex items-center gap-3 animate-in slide-in-from-top-4 fade-in\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\" />\n          <span className=\"text-green-300 text-sm font-medium\">Profile updated successfully!</span>\n        </div>\n      )}\n\n      {/* Header */}\n      <div className=\"mb-6\">\n        <h1 className=\"text-2xl font-bold text-white mb-1\">Settings</h1>\n        <p className=\"text-sm text-blue-200\">Manage your preferences</p>\n      </div>\n\n      {/* Settings Grid - Fills remaining space with scroll */}\n      <div className=\"flex-1 overflow-y-auto\">\n        <div className=\"grid grid-cols-3 gap-4 pb-4\">\n          {/* Profile Section */}\n          <SettingsSection\n            icon={User}\n            title=\"Profile\"\n            description=\"Manage your personal information\"\n          >\n            {isLoadingProfile ? (\n              <div className=\"space-y-3\" role=\"status\" aria-live=\"polite\" aria-busy=\"true\">\n                <SkeletonText lines={2} />\n                <span className=\"sr-only\">Loading profile...</span>\n              </div>\n            ) : isEditingProfile ? (\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-xs font-medium text-white mb-1\">Name</label>\n                  <input\n                    type=\"text\"\n                    value={editedName}\n                    onChange={(e) => setEditedName(e.target.value)}\n                    className=\"w-full px-3 py-1.5 text-xs bg-slate-800/50 border border-blue-700/30 rounded-lg text-white focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                    placeholder=\"Enter your name\"\n                    disabled={isSavingProfile}\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-xs font-medium text-white mb-1\">Email</label>\n                  <input\n                    type=\"email\"\n                    value={editedEmail}\n                    onChange={(e) => setEditedEmail(e.target.value)}\n                    className=\"w-full px-3 py-1.5 text-xs bg-slate-800/50 border border-blue-700/30 rounded-lg text-white focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                    placeholder=\"Enter your email\"\n                    disabled={isSavingProfile}\n                  />\n                </div>\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={handleSaveProfile}\n                    disabled={isSavingProfile}\n                    className=\"flex-1 px-3 py-1.5 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-xs font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\n                  >\n                    {isSavingProfile ? (\n                      <>\n                        <LoadingSpinner size=\"sm\" color=\"white\" />\n                        <span>Saving...</span>\n                      </>\n                    ) : (\n                      'Save'\n                    )}\n                  </button>\n                  <button\n                    onClick={() => {\n                      setIsEditingProfile(false);\n                      setEditedName(userProfile?.name || '');\n                      setEditedEmail(userProfile?.email || '');\n                    }}\n                    disabled={isSavingProfile}\n                    className=\"flex-1 px-3 py-1.5 bg-slate-700 text-white rounded-lg hover:bg-slate-600 transition-colors text-xs font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <>\n                <SettingItem\n                  label=\"Name\"\n                  value={userProfile?.name || 'Not set'}\n                  action=\"Edit\"\n                  onAction={() => setIsEditingProfile(true)}\n                />\n                <SettingItem\n                  label=\"Email\"\n                  value={userProfile?.email || 'Not set'}\n                  action=\"Edit\"\n                  onAction={() => setIsEditingProfile(true)}\n                />\n              </>\n            )}\n          </SettingsSection>\n\n          {/* AI & Legal Data Section */}\n          <SettingsSection\n            icon={Brain}\n            title=\"AI & Legal Data\"\n            description=\"Configure AI assistant and legal information sources\"\n          >\n            <ToggleSetting\n              label=\"Enhanced legal responses (RAG)\"\n              enabled={ragEnabled}\n              onChange={setRagEnabled}\n            />\n            <SettingItem\n              label=\"Data sources\"\n              value=\"legislation.gov.uk, caselaw.nationalarchives.gov.uk\"\n              info\n            />\n            <SettingItem\n              label=\"Response mode\"\n              value=\"Information only - never legal advice\"\n              info\n            />\n          </SettingsSection>\n\n          {/* Notifications Section */}\n          <SettingsSection\n            icon={Bell}\n            title=\"Notifications\"\n            description=\"Control how you receive updates\"\n          >\n            <ToggleSetting\n              label=\"Chat notifications\"\n              enabled={chatNotifications}\n              onChange={setChatNotifications}\n            />\n            <ToggleSetting\n              label=\"Case updates\"\n              enabled={caseUpdates}\n              onChange={setCaseUpdates}\n            />\n            <ToggleSetting\n              label=\"Document analysis complete\"\n              enabled={documentAnalysisNotif}\n              onChange={setDocumentAnalysisNotif}\n            />\n          </SettingsSection>\n\n          {/* Privacy & Security */}\n          <SettingsSection\n            icon={Lock}\n            title=\"Privacy & Security\"\n            description=\"Your data privacy and security settings\"\n          >\n            <SettingItem\n              label=\"Local data storage\"\n              value=\"All data stored locally on your device\"\n              info\n            />\n            <ToggleSetting\n              label=\"Encrypt sensitive data\"\n              enabled={encryptData}\n              onChange={setEncryptData}\n            />\n          </SettingsSection>\n\n          {/* Data Management */}\n          <SettingsSection\n            icon={Database}\n            title=\"Data Management\"\n            description=\"Manage your stored data\"\n          >\n            <SettingItem label=\"Database location\" value=\"AppData/justice-companion\" info />\n            <button\n              onClick={() => setClearDataConfirmOpen(true)}\n              className=\"w-full px-3 py-2 bg-red-600/20 border border-red-500/30 text-red-300 rounded-lg hover:bg-red-600/30 transition-all text-xs font-medium\"\n            >\n              Clear All Data\n            </button>\n          </SettingsSection>\n\n          {/* About */}\n          <SettingsSection\n            icon={Info}\n            title=\"About\"\n            description=\"Application information\"\n          >\n            <SettingItem label=\"Version\" value=\"1.0.0\" />\n            <SettingItem label=\"Build\" value=\"Development\" />\n            <SettingItem\n              label=\"License\"\n              value=\"MIT License - Free and open source\"\n              info\n            />\n          </SettingsSection>\n\n          {/* Appearance */}\n          <SettingsSection\n            icon={User}\n            title=\"Appearance\"\n            description=\"Customize the interface look and feel\"\n          >\n            <ToggleSetting\n              label=\"Dark mode\"\n              enabled={darkMode}\n              onChange={setDarkMode}\n            />\n            <SelectSetting\n              label=\"Font size\"\n              value={fontSize}\n              onChange={setFontSize}\n              options={[\n                { value: 'small', label: 'Small' },\n                { value: 'medium', label: 'Medium' },\n                { value: 'large', label: 'Large' },\n              ]}\n            />\n          </SettingsSection>\n\n          {/* Voice Input */}\n          <SettingsSection\n            icon={Bell}\n            title=\"Voice Input\"\n            description=\"Configure speech recognition settings\"\n          >\n            <SelectSetting\n              label=\"Microphone\"\n              value={selectedMicrophone}\n              onChange={setSelectedMicrophone}\n              options={[\n                { value: 'default', label: 'Default' },\n                { value: 'system', label: 'System Default' },\n              ]}\n            />\n            <SelectSetting\n              label=\"Language\"\n              value={speechLanguage}\n              onChange={setSpeechLanguage}\n              options={[\n                { value: 'en-GB', label: 'English (UK)' },\n                { value: 'en-US', label: 'English (US)' },\n              ]}\n            />\n            <ToggleSetting\n              label=\"Auto-transcribe\"\n              enabled={autoTranscribe}\n              onChange={setAutoTranscribe}\n            />\n          </SettingsSection>\n\n          {/* Export & Backup */}\n          <SettingsSection\n            icon={Database}\n            title=\"Export & Backup\"\n            description=\"Configure data export and backup options\"\n          >\n            <SettingItem\n              label=\"Export location\"\n              value={exportLocation}\n              action=\"Change\"\n              onAction={() => setExportLocation('Custom/Path')}\n            />\n            <SelectSetting\n              label=\"Auto-backup\"\n              value={autoBackupFrequency}\n              onChange={setAutoBackupFrequency}\n              options={[\n                { value: 'never', label: 'Never' },\n                { value: 'daily', label: 'Daily' },\n                { value: 'weekly', label: 'Weekly' },\n              ]}\n            />\n            <button\n              onClick={() => console.log('Restore from backup')}\n              className=\"w-full px-3 py-2 bg-blue-600/20 border border-blue-500/30 text-blue-300 rounded-lg hover:bg-blue-600/30 transition-all text-xs font-medium\"\n            >\n              Restore from Backup\n            </button>\n          </SettingsSection>\n\n          {/* Accessibility */}\n          <SettingsSection\n            icon={Lock}\n            title=\"Accessibility\"\n            description=\"Enhance usability and accessibility\"\n          >\n            <ToggleSetting\n              label=\"High contrast mode\"\n              enabled={highContrast}\n              onChange={setHighContrast}\n            />\n            <ToggleSetting\n              label=\"Screen reader support\"\n              enabled={screenReaderSupport}\n              onChange={setScreenReaderSupport}\n            />\n            <button\n              onClick={() => console.log('View keyboard shortcuts')}\n              className=\"w-full px-3 py-2 bg-slate-700/50 border border-slate-600/30 text-slate-300 rounded-lg hover:bg-slate-600/50 transition-all text-xs font-medium\"\n            >\n              Keyboard Shortcuts\n            </button>\n          </SettingsSection>\n\n          {/* Advanced AI */}\n          <SettingsSection\n            icon={Brain}\n            title=\"Advanced AI\"\n            description=\"Fine-tune AI response behavior\"\n          >\n            <SelectSetting\n              label=\"Response length\"\n              value={responseLength}\n              onChange={setResponseLength}\n              options={[\n                { value: 'concise', label: 'Concise' },\n                { value: 'balanced', label: 'Balanced' },\n                { value: 'detailed', label: 'Detailed' },\n              ]}\n            />\n            <SelectSetting\n              label=\"Citation detail\"\n              value={citationDetail}\n              onChange={setCitationDetail}\n              options={[\n                { value: 'minimal', label: 'Minimal' },\n                { value: 'detailed', label: 'Detailed' },\n                { value: 'comprehensive', label: 'Comprehensive' },\n              ]}\n            />\n            <SelectSetting\n              label=\"Jurisdiction\"\n              value={jurisdiction}\n              onChange={setJurisdiction}\n              options={[\n                { value: 'uk-england-wales', label: 'England & Wales' },\n                { value: 'uk-scotland', label: 'Scotland' },\n                { value: 'uk-northern-ireland', label: 'Northern Ireland' },\n              ]}\n            />\n          </SettingsSection>\n\n          {/* Case Management */}\n          <SettingsSection\n            icon={Briefcase}\n            title=\"Case Management\"\n            description=\"Configure case handling preferences\"\n          >\n            <SelectSetting\n              label=\"Default case type\"\n              value={defaultCaseType}\n              onChange={setDefaultCaseType}\n              options={[\n                { value: 'general', label: 'General' },\n                { value: 'employment', label: 'Employment' },\n                { value: 'family', label: 'Family' },\n                { value: 'housing', label: 'Housing' },\n                { value: 'immigration', label: 'Immigration' },\n              ]}\n            />\n            <SelectSetting\n              label=\"Auto-archive after\"\n              value={autoArchiveDays}\n              onChange={setAutoArchiveDays}\n              options={[\n                { value: '30', label: '30 days' },\n                { value: '90', label: '90 days' },\n                { value: '180', label: '180 days' },\n                { value: 'never', label: 'Never' },\n              ]}\n            />\n            <SelectSetting\n              label=\"Case numbering\"\n              value={caseNumberFormat}\n              onChange={setCaseNumberFormat}\n              options={[\n                { value: 'YYYY-NNNN', label: 'YYYY-NNNN' },\n                { value: 'NNNN-YYYY', label: 'NNNN-YYYY' },\n                { value: 'SEQUENTIAL', label: 'Sequential' },\n              ]}\n            />\n          </SettingsSection>\n        </div>\n      </div>\n\n      {/* Clear Data Confirmation Dialog */}\n      <ConfirmDialog\n        isOpen={clearDataConfirmOpen}\n        title=\"Clear All Data\"\n        message=\"Are you sure you want to clear all data? This will permanently delete all cases, conversations, documents, and user data. This action cannot be undone.\"\n        confirmText=\"Clear All Data\"\n        cancelText=\"Cancel\"\n        variant=\"danger\"\n        onConfirm={handleClearAllData}\n        onCancel={() => setClearDataConfirmOpen(false)}\n      />\n    </div>\n  );\n}\n\ninterface SettingsSectionProps {\n  icon: ComponentType<{ className?: string }>;\n  title: string;\n  description: string;\n  children: ReactNode;\n}\n\nfunction SettingsSection({ icon: Icon, title, description, children }: SettingsSectionProps): JSX.Element {\n  return (\n    <div className=\"bg-gradient-to-br from-slate-900/50 to-blue-950/50 border border-blue-800/30 rounded-xl overflow-hidden flex flex-col\">\n      <div className=\"flex items-center gap-3 p-4 border-b border-blue-800/30 bg-slate-900/50\">\n        <div className=\"p-2 bg-blue-600/20 rounded-lg\">\n          <Icon className=\"w-5 h-5 text-blue-400\" />\n        </div>\n        <div className=\"flex-1 min-w-0\">\n          <h2 className=\"text-base font-bold text-white truncate\">{title}</h2>\n          <p className=\"text-xs text-blue-300 truncate\">{description}</p>\n        </div>\n      </div>\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-3\">{children}</div>\n    </div>\n  );\n}\n\ninterface SettingItemProps {\n  label: string;\n  value: string;\n  action?: string;\n  onAction?: () => void;\n  info?: boolean;\n}\n\nfunction SettingItem({ label, value, action, onAction, info }: SettingItemProps): JSX.Element {\n  return (\n    <div className=\"flex items-center justify-between py-2 border-b border-blue-800/20 last:border-0\">\n      <div className=\"flex-1 min-w-0\">\n        <div className=\"text-xs font-medium text-white mb-0.5\">{label}</div>\n        <div className={`text-xs truncate ${info ? 'text-blue-400' : 'text-blue-300'}`}>{value}</div>\n      </div>\n      {action && (\n        <button\n          onClick={onAction}\n          className=\"px-3 py-1.5 text-xs text-blue-300 hover:text-blue-200 font-medium transition-colors flex-shrink-0\"\n        >\n          {action}\n        </button>\n      )}\n    </div>\n  );\n}\n\ninterface ToggleSettingProps {\n  label: string;\n  enabled: boolean;\n  onChange?: (enabled: boolean) => void;\n}\n\nfunction ToggleSetting({ label, enabled, onChange }: ToggleSettingProps): JSX.Element {\n  return (\n    <div className=\"flex items-center justify-between py-2 border-b border-blue-800/20 last:border-0\">\n      <div className=\"text-xs font-medium text-white\">{label}</div>\n      <button\n        onClick={() => onChange?.(!enabled)}\n        className={`relative inline-flex h-5 w-9 items-center rounded-full transition-colors flex-shrink-0 ${\n          enabled ? 'bg-blue-600' : 'bg-slate-700'\n        }`}\n      >\n        <span\n          className={`inline-block h-3.5 w-3.5 transform rounded-full bg-white transition-transform ${\n            enabled ? 'translate-x-[18px]' : 'translate-x-0.5'\n          }`}\n        />\n      </button>\n    </div>\n  );\n}\n\ninterface SelectSettingProps {\n  label: string;\n  value: string;\n  onChange?: (value: string) => void;\n  options: Array<{ value: string; label: string }>;\n}\n\nfunction SelectSetting({ label, value, onChange, options }: SelectSettingProps): JSX.Element {\n  return (\n    <div className=\"flex items-center justify-between py-2 border-b border-blue-800/20 last:border-0\">\n      <div className=\"text-xs font-medium text-white flex-shrink-0 mr-3\">{label}</div>\n      <select\n        value={value}\n        onChange={(e) => onChange?.(e.target.value)}\n        className=\"px-2 py-1 text-xs bg-slate-800/50 border border-blue-700/30 rounded text-white focus:outline-none focus:ring-1 focus:ring-blue-500 flex-shrink-0\"\n      >\n        {options.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\settings\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\timeline\\components\\TimelineView.tsx","messages":[{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":223,"column":23,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":223,"endColumn":37},{"ruleId":"@typescript-eslint/no-misused-promises","severity":1,"message":"Promise-returning function provided to attribute where a void return was expected.","line":383,"column":35,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":383,"endColumn":65},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":452,"column":64,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":452,"endColumn":66,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[14457,14459],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":470,"column":35,"nodeType":"CallExpression","messageId":"unexpected","endLine":470,"endColumn":71}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\nimport { useTimeline } from '../hooks/useTimeline';\nimport type { TimelineEvent } from '@/models/TimelineEvent';\n\nexport interface TimelineViewProps {\n  caseId: number;\n}\n\nexport function TimelineView({ caseId }: TimelineViewProps): JSX.Element {\n  const {\n    timelineEvents,\n    loading,\n    error,\n    createTimelineEvent,\n    updateTimelineEvent,\n    deleteTimelineEvent,\n  } = useTimeline(caseId);\n\n  const [isCreating, setIsCreating] = useState(false);\n  const [newEvent, setNewEvent] = useState({\n    title: '',\n    eventDate: '',\n    description: '',\n  });\n  const [editingId, setEditingId] = useState<number | null>(null);\n  const [editEvent, setEditEvent] = useState({\n    title: '',\n    eventDate: '',\n    description: '',\n  });\n\n  const handleCreate = async (): Promise<void> => {\n    if (newEvent.title.trim() && newEvent.eventDate) {\n      await createTimelineEvent({\n        caseId,\n        title: newEvent.title,\n        eventDate: newEvent.eventDate,\n        description: newEvent.description,\n      });\n      setNewEvent({ title: '', eventDate: '', description: '' });\n      setIsCreating(false);\n    }\n  };\n\n  const handleUpdate = async (id: number): Promise<void> => {\n    if (editEvent.title.trim() && editEvent.eventDate) {\n      await updateTimelineEvent(id, {\n        title: editEvent.title,\n        eventDate: editEvent.eventDate,\n        description: editEvent.description,\n      });\n      setEditingId(null);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div style={{ padding: '24px', textAlign: 'center', color: '#666' }}>\n        Loading timeline...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div\n        style={{\n          padding: '24px',\n          textAlign: 'center',\n          color: '#d32f2f',\n          background: '#ffebee',\n          borderRadius: '4px',\n        }}\n      >\n        Error: {error}\n      </div>\n    );\n  }\n\n  // Sort events by date (most recent first)\n  const sortedEvents = [...timelineEvents].sort(\n    (a, b) => new Date(b.eventDate).getTime() - new Date(a.eventDate).getTime(),\n  );\n\n  return (\n    <div style={{ padding: '24px' }}>\n      {/* Header */}\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '24px',\n        }}\n      >\n        <h2 style={{ margin: 0, color: '#333', fontSize: '24px' }}>\n          Timeline ({timelineEvents.length} events)\n        </h2>\n\n        <button\n          onClick={() => setIsCreating(true)}\n          style={{\n            padding: '10px 20px',\n            background: '#c2185b',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            fontSize: '14px',\n            fontWeight: 'bold',\n            cursor: 'pointer',\n            transition: 'background 0.2s ease',\n          }}\n          onMouseEnter={(e) => {\n            e.currentTarget.style.background = '#ad1457';\n          }}\n          onMouseLeave={(e) => {\n            e.currentTarget.style.background = '#c2185b';\n          }}\n        >\n          + Add Event\n        </button>\n      </div>\n\n      {/* New Event Creator */}\n      {isCreating && (\n        <div\n          style={{\n            marginBottom: '24px',\n            padding: '16px',\n            background: '#fce4ec',\n            border: '2px solid #c2185b',\n            borderRadius: '8px',\n          }}\n        >\n          <div style={{ marginBottom: '12px' }}>\n            <label\n              style={{\n                display: 'block',\n                marginBottom: '8px',\n                fontWeight: 'bold',\n                color: '#333',\n              }}\n            >\n              Event Title:\n            </label>\n            <input\n              type=\"text\"\n              value={newEvent.title}\n              onChange={(e) =>\n                setNewEvent({ ...newEvent, title: e.target.value })\n              }\n              placeholder=\"Enter event title...\"\n              style={{\n                width: '100%',\n                padding: '8px 12px',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                fontSize: '14px',\n              }}\n              autoFocus\n            />\n          </div>\n\n          <div style={{ marginBottom: '12px' }}>\n            <label\n              style={{\n                display: 'block',\n                marginBottom: '8px',\n                fontWeight: 'bold',\n                color: '#333',\n              }}\n            >\n              Event Date:\n            </label>\n            <input\n              type=\"date\"\n              value={newEvent.eventDate}\n              onChange={(e) =>\n                setNewEvent({ ...newEvent, eventDate: e.target.value })\n              }\n              style={{\n                width: '100%',\n                padding: '8px 12px',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                fontSize: '14px',\n              }}\n            />\n          </div>\n\n          <div style={{ marginBottom: '12px' }}>\n            <label\n              style={{\n                display: 'block',\n                marginBottom: '8px',\n                fontWeight: 'bold',\n                color: '#333',\n              }}\n            >\n              Description (optional):\n            </label>\n            <textarea\n              value={newEvent.description}\n              onChange={(e) =>\n                setNewEvent({ ...newEvent, description: e.target.value })\n              }\n              placeholder=\"Enter event description...\"\n              style={{\n                width: '100%',\n                minHeight: '100px',\n                padding: '12px',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                fontSize: '14px',\n                fontFamily: 'inherit',\n                resize: 'vertical',\n              }}\n            />\n          </div>\n\n          <div style={{ display: 'flex', gap: '12px' }}>\n            <button\n              onClick={handleCreate}\n              style={{\n                padding: '8px 16px',\n                background: '#388e3c',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                fontSize: '14px',\n                fontWeight: 'bold',\n                cursor: 'pointer',\n              }}\n            >\n              Save\n            </button>\n            <button\n              onClick={() => {\n                setIsCreating(false);\n                setNewEvent({ title: '', eventDate: '', description: '' });\n              }}\n              style={{\n                padding: '8px 16px',\n                background: '#757575',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                fontSize: '14px',\n                fontWeight: 'bold',\n                cursor: 'pointer',\n              }}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Vertical Timeline */}\n      {sortedEvents.length === 0 ? (\n        <div\n          style={{\n            padding: '48px',\n            textAlign: 'center',\n            color: '#999',\n            background: '#f5f5f5',\n            borderRadius: '8px',\n          }}\n        >\n          No timeline events yet. Click \"Add Event\" to create one.\n        </div>\n      ) : (\n        <div style={{ position: 'relative', paddingLeft: '40px' }}>\n          {/* Vertical Line */}\n          <div\n            style={{\n              position: 'absolute',\n              left: '15px',\n              top: '0',\n              bottom: '0',\n              width: '3px',\n              background: 'linear-gradient(180deg, #c2185b 0%, #e91e63 100%)',\n            }}\n          />\n\n          {/* Timeline Events */}\n          {sortedEvents.map((event: TimelineEvent) => {\n            const isEditing = editingId === event.id;\n\n            return (\n              <div\n                key={event.id}\n                style={{\n                  position: 'relative',\n                  marginBottom: '32px',\n                }}\n              >\n                {/* Timeline Dot */}\n                <div\n                  style={{\n                    position: 'absolute',\n                    left: '-33px',\n                    top: '8px',\n                    width: '16px',\n                    height: '16px',\n                    borderRadius: '50%',\n                    background: '#c2185b',\n                    border: '3px solid white',\n                    boxShadow: '0 0 0 3px #c2185b',\n                  }}\n                />\n\n                {/* Event Card */}\n                <div\n                  style={{\n                    padding: '16px',\n                    background: 'white',\n                    border: '1px solid #e0e0e0',\n                    borderRadius: '8px',\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n                  }}\n                >\n                  {isEditing ? (\n                    <div>\n                      <div style={{ marginBottom: '12px' }}>\n                        <input\n                          type=\"text\"\n                          value={editEvent.title}\n                          onChange={(e) =>\n                            setEditEvent({ ...editEvent, title: e.target.value })\n                          }\n                          style={{\n                            width: '100%',\n                            padding: '8px 12px',\n                            border: '1px solid #ccc',\n                            borderRadius: '4px',\n                            fontSize: '14px',\n                          }}\n                        />\n                      </div>\n                      <div style={{ marginBottom: '12px' }}>\n                        <input\n                          type=\"date\"\n                          value={editEvent.eventDate}\n                          onChange={(e) =>\n                            setEditEvent({\n                              ...editEvent,\n                              eventDate: e.target.value,\n                            })\n                          }\n                          style={{\n                            width: '100%',\n                            padding: '8px 12px',\n                            border: '1px solid #ccc',\n                            borderRadius: '4px',\n                            fontSize: '14px',\n                          }}\n                        />\n                      </div>\n                      <div style={{ marginBottom: '12px' }}>\n                        <textarea\n                          value={editEvent.description || ''}\n                          onChange={(e) =>\n                            setEditEvent({\n                              ...editEvent,\n                              description: e.target.value,\n                            })\n                          }\n                          style={{\n                            width: '100%',\n                            minHeight: '80px',\n                            padding: '12px',\n                            border: '1px solid #ccc',\n                            borderRadius: '4px',\n                            fontSize: '14px',\n                            fontFamily: 'inherit',\n                            resize: 'vertical',\n                          }}\n                        />\n                      </div>\n                      <div style={{ display: 'flex', gap: '8px' }}>\n                        <button\n                          onClick={() => handleUpdate(event.id)}\n                          style={{\n                            padding: '6px 12px',\n                            background: '#388e3c',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '4px',\n                            fontSize: '12px',\n                            fontWeight: 'bold',\n                            cursor: 'pointer',\n                          }}\n                        >\n                          Save\n                        </button>\n                        <button\n                          onClick={() => setEditingId(null)}\n                          style={{\n                            padding: '6px 12px',\n                            background: '#757575',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '4px',\n                            fontSize: '12px',\n                            fontWeight: 'bold',\n                            cursor: 'pointer',\n                          }}\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                    </div>\n                  ) : (\n                    <div>\n                      <div\n                        style={{\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                          alignItems: 'flex-start',\n                          marginBottom: '8px',\n                        }}\n                      >\n                        <div>\n                          <div\n                            style={{\n                              fontWeight: 'bold',\n                              color: '#333',\n                              fontSize: '16px',\n                              marginBottom: '4px',\n                            }}\n                          >\n                            {event.title}\n                          </div>\n                          <div\n                            style={{\n                              fontSize: '13px',\n                              color: '#c2185b',\n                              fontWeight: 'bold',\n                            }}\n                          >\n                            {new Date(event.eventDate).toLocaleDateString()}\n                          </div>\n                        </div>\n                        <div style={{ display: 'flex', gap: '8px' }}>\n                          <button\n                            onClick={() => {\n                              setEditingId(event.id);\n                              setEditEvent({\n                                title: event.title,\n                                eventDate: event.eventDate,\n                                description: event.description || '',\n                              });\n                            }}\n                            style={{\n                              padding: '6px 12px',\n                              background: '#1976d2',\n                              color: 'white',\n                              border: 'none',\n                              borderRadius: '4px',\n                              fontSize: '12px',\n                              fontWeight: 'bold',\n                              cursor: 'pointer',\n                            }}\n                          >\n                            Edit\n                          </button>\n                          <button\n                            onClick={() => {\n                              if (window.confirm('Delete this event?')) {\n                                void deleteTimelineEvent(event.id);\n                              }\n                            }}\n                            style={{\n                              padding: '6px 12px',\n                              background: '#d32f2f',\n                              color: 'white',\n                              border: 'none',\n                              borderRadius: '4px',\n                              fontSize: '12px',\n                              fontWeight: 'bold',\n                              cursor: 'pointer',\n                            }}\n                          >\n                            Delete\n                          </button>\n                        </div>\n                      </div>\n                      {event.description && (\n                        <div\n                          style={{\n                            whiteSpace: 'pre-wrap',\n                            wordBreak: 'break-word',\n                            color: '#555',\n                            fontSize: '14px',\n                            lineHeight: '1.6',\n                            marginTop: '8px',\n                          }}\n                        >\n                          {event.description}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\timeline\\hooks\\useTimeline.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":19,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":19,"endColumn":41},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":25,"column":39,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":25,"endColumn":41,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1018,1020],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":27,"column":31,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":27,"endColumn":33,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1071,1073],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":36,"column":71,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":36,"endColumn":73},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":43,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":43,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1597,1599],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":51,"column":83,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":51,"endColumn":85},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":60,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":60,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2174,2176],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":68,"column":50,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":68,"endColumn":52},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":74,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":74,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2626,2628],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport type { TimelineEvent, CreateTimelineEventInput, UpdateTimelineEventInput } from '@/models/TimelineEvent';\n\ninterface UseTimelineReturn {\n  timelineEvents: TimelineEvent[];\n  loading: boolean;\n  error: string | null;\n  createTimelineEvent: (input: CreateTimelineEventInput) => Promise<TimelineEvent>;\n  updateTimelineEvent: (id: number, input: UpdateTimelineEventInput) => Promise<TimelineEvent>;\n  deleteTimelineEvent: (id: number) => Promise<void>;\n  refresh: () => Promise<void>;\n}\n\nexport function useTimeline(caseId: number): UseTimelineReturn {\n  const [timelineEvents, setTimelineEvents] = useState<TimelineEvent[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadTimelineEvents = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await window.electron.timeline.list(caseId);\n      if (result.success) {\n        setTimelineEvents(result.data || []);\n      } else {\n        setError(result.error || 'Failed to load timeline events');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createTimelineEvent = async (input: CreateTimelineEventInput) => {\n    try {\n      const result = await window.electron.timeline.create(input);\n      if (result.success && result.data) {\n        setTimelineEvents((prev) => [...prev, result.data!]);\n        return result.data;\n      } else {\n        throw new Error(result.error || 'Failed to create timeline event');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    }\n  };\n\n  const updateTimelineEvent = async (id: number, input: UpdateTimelineEventInput) => {\n    try {\n      const result = await window.electron.timeline.update(id, input);\n      if (result.success && result.data) {\n        setTimelineEvents((prev) =>\n          prev.map((event) => (event.id === id ? result.data! : event)),\n        );\n        return result.data;\n      } else {\n        throw new Error(result.error || 'Failed to update timeline event');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    }\n  };\n\n  const deleteTimelineEvent = async (id: number) => {\n    try {\n      const result = await window.electron.timeline.delete(id);\n      if (result.success) {\n        setTimelineEvents((prev) => prev.filter((event) => event.id !== id));\n      } else {\n        throw new Error(result.error || 'Failed to delete timeline event');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    }\n  };\n\n  useEffect(() => {\n    void loadTimelineEvents();\n  }, [caseId]);\n\n  return {\n    timelineEvents,\n    loading,\n    error,\n    createTimelineEvent,\n    updateTimelineEvent,\n    deleteTimelineEvent,\n    refresh: loadTimelineEvents,\n  };\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\timeline\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\features\\timeline\\services\\TimelineService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\hooks\\useAI.example.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\hooks\\useAI.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\hooks\\useCaseFacts.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\hooks\\useLegalIssues.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\hooks\\useNotes.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\hooks\\useTimeline.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\hooks\\useToast.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\hooks\\useUserFacts.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\hooks\\useVoiceRecognition.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":171,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":171,"endColumn":31},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":189,"column":28,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":189,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect, useRef } from 'react';\n\n/**\n * SpeechRecognition types (browser API)\n */\ninterface SpeechRecognitionEvent {\n  resultIndex: number;\n  results: SpeechRecognitionResultList;\n}\n\ninterface SpeechRecognitionResultList {\n  length: number;\n  item(index: number): SpeechRecognitionResult;\n  [index: number]: SpeechRecognitionResult;\n}\n\ninterface SpeechRecognitionResult {\n  isFinal: boolean;\n  [index: number]: SpeechRecognitionAlternative;\n}\n\ninterface SpeechRecognitionAlternative {\n  transcript: string;\n  confidence: number;\n}\n\ninterface SpeechRecognitionErrorEvent {\n  error: 'no-speech' | 'aborted' | 'audio-capture' | 'network' | 'not-allowed' | 'service-not-allowed' | 'bad-grammar' | 'language-not-supported';\n  message: string;\n}\n\ninterface SpeechRecognition extends EventTarget {\n  continuous: boolean;\n  interimResults: boolean;\n  lang: string;\n  start(): void;\n  stop(): void;\n  abort(): void;\n  onresult: ((event: SpeechRecognitionEvent) => void) | null;\n  onerror: ((event: SpeechRecognitionErrorEvent) => void) | null;\n  onend: (() => void) | null;\n}\n\ndeclare global {\n  interface Window {\n    SpeechRecognition: new () => SpeechRecognition;\n    webkitSpeechRecognition: new () => SpeechRecognition;\n  }\n}\n\n/**\n * Voice recognition hook result\n */\nexport interface VoiceRecognitionResult {\n  /** Whether voice recognition is actively listening */\n  isListening: boolean;\n  /** Final transcript text (accumulated) */\n  transcript: string;\n  /** Interim (in-progress) transcript text */\n  interimTranscript: string;\n  /** Start listening */\n  startListening: () => void;\n  /** Stop listening */\n  stopListening: () => void;\n  /** Any error that occurred */\n  error: string | null;\n}\n\n/**\n * useVoiceRecognition - Web Speech API hook for voice input\n *\n * Features:\n * - Continuous listening with interim results\n * - UK English (en-GB) by default\n * - Error handling for permissions, network, etc.\n * - Accumulates final transcript, shows interim separately\n *\n * Browser Support:\n * - Chrome/Edge: Full support\n * - Firefox: Limited support\n * - Safari: Webkit support\n *\n * @returns {VoiceRecognitionResult} Voice recognition controls and state\n */\nexport function useVoiceRecognition(): VoiceRecognitionResult {\n  const [isListening, setIsListening] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [interimTranscript, setInterimTranscript] = useState('');\n  const [error, setError] = useState<string | null>(null);\n\n  const recognitionRef = useRef<SpeechRecognition | null>(null);\n\n  useEffect(() => {\n    // Check for browser support\n    const SpeechRecognition =\n      (window as unknown as Window).SpeechRecognition || (window as unknown as Window).webkitSpeechRecognition;\n\n    if (!SpeechRecognition) {\n      setError('Voice recognition not supported in this browser');\n      return;\n    }\n\n    // Initialize speech recognition\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-GB';\n\n    recognition.onresult = (event: SpeechRecognitionEvent) => {\n      let interimText = '';\n      let finalText = '';\n\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const result = event.results[i];\n        const text = result[0].transcript;\n\n        if (result.isFinal) {\n          finalText += text + ' ';\n        } else {\n          interimText += text;\n        }\n      }\n\n      if (finalText) {\n        setTranscript((prev) => prev + finalText);\n      }\n      setInterimTranscript(interimText);\n    };\n\n    recognition.onerror = (event: SpeechRecognitionErrorEvent) => {\n      let errorMessage = 'Voice recognition error';\n\n      switch (event.error) {\n        case 'not-allowed':\n          errorMessage = 'Microphone permission denied. Please allow microphone access.';\n          break;\n        case 'no-speech':\n          errorMessage = 'No speech detected. Please try again.';\n          break;\n        case 'network':\n          errorMessage = 'Network error occurred. Check your connection.';\n          break;\n        case 'audio-capture':\n          errorMessage = 'No microphone found. Please connect a microphone.';\n          break;\n        case 'aborted':\n          // Silently ignore abort errors (happens when user stops manually)\n          return;\n        default:\n          errorMessage = `Voice recognition error: ${event.error}`;\n      }\n\n      setError(errorMessage);\n      setIsListening(false);\n    };\n\n    recognition.onend = () => {\n      setIsListening(false);\n      setInterimTranscript('');\n    };\n\n    recognitionRef.current = recognition;\n\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, []);\n\n  const startListening = () => {\n    if (!recognitionRef.current) {\n      setError('Voice recognition not initialized');\n      return;\n    }\n\n    try {\n      setError(null);\n      setTranscript('');\n      setInterimTranscript('');\n      recognitionRef.current.start();\n      setIsListening(true);\n    } catch (_err) {\n      setError('Failed to start voice recognition');\n      setIsListening(false);\n    }\n  };\n\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n      setInterimTranscript('');\n    }\n  };\n\n  return {\n    isListening,\n    transcript,\n    interimTranscript,\n    startListening,\n    stopListening,\n    error,\n  };\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\lib\\utils.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":8,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":8,"endColumn":19},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":8,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":8,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Utility function to merge Tailwind CSS classes with proper precedence\n * Used by shadcn/ui components for conditional styling\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\main.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\models\\Action.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\models\\AuditLog.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\models\\Case.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\models\\CaseFact.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\models\\ChatConversation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\models\\Evidence.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\models\\LegalIssue.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\models\\Note.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\models\\TimelineEvent.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\models\\UserFact.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\models\\UserProfile.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\models\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\CaseFactsRepository.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\CaseFactsRepository.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\CaseRepository.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\CaseRepository.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\ChatConversationRepository.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\EvidenceRepository.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\EvidenceRepository.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\FactsRepositories.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\LegalIssuesRepository.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\NotesRepository.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\NotesRepository.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\Phase3Repositories.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\TimelineRepository.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\UserFactsRepository.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\UserFactsRepository.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\repositories\\UserProfileRepository.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\AIFunctionDefinitions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\AIServiceFactory.ts","messages":[{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??=`) instead of an assignment expression, as it is simpler to read.","line":48,"column":5,"nodeType":"IfStatement","messageId":"preferNullishOverAssignment","endLine":50,"endColumn":6,"suggestions":[{"messageId":"suggestNullish","data":{"equals":"="},"fix":{"range":[1376,1473],"text":"AIServiceFactory.instance ??= new AIServiceFactory();"},"desc":"Fix to nullish coalescing operator (`??=`)."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { errorLogger } from '../utils/error-logger';\nimport { IntegratedAIService } from '../features/chat/services/IntegratedAIService';\nimport type {\n  AIConfig,\n  AIStatus,\n  AIChatRequest,\n  AIResponse,\n} from '../types/ai';\nimport fs from 'fs';\nimport path from 'path';\nimport { app } from 'electron';\nimport type { CaseFactsRepository } from '../repositories/CaseFactsRepository.js';\n\n/**\n * AIServiceFactory - Integrated AI Service Manager\n *\n * Uses IntegratedAIService (Qwen 3 8B with node-llama-cpp) as the sole AI provider.\n * No external dependencies or fallbacks.\n */\nexport class AIServiceFactory {\n  private static instance: AIServiceFactory | null = null;\n  private integratedService: IntegratedAIService;\n  private modelPath: string;\n\n  private constructor() {\n    // IntegratedService created without repository initially\n    // Will be set via setCaseFactsRepository() after main.ts initializes\n    this.integratedService = new IntegratedAIService();\n\n    // Check model availability\n    const userDataPath = app.getPath('userData');\n    this.modelPath = path.join(\n      userDataPath,\n      'models',\n      'Qwen_Qwen3-8B-Q4_K_M.gguf',\n    );\n\n    errorLogger.logError('AIServiceFactory initialized', {\n      type: 'info',\n      modelPath: this.modelPath,\n    });\n  }\n\n  /**\n   * Get singleton instance\n   */\n  static getInstance(): AIServiceFactory {\n    if (!AIServiceFactory.instance) {\n      AIServiceFactory.instance = new AIServiceFactory();\n    }\n    return AIServiceFactory.instance;\n  }\n\n  /**\n   * Set CaseFactsRepository dependency (called from main.ts after repository initialization)\n   */\n  setCaseFactsRepository(repository: CaseFactsRepository): void {\n    // Recreate IntegratedAIService with repository\n    this.integratedService = new IntegratedAIService(undefined, repository);\n    errorLogger.logError('CaseFactRepository injected into AIServiceFactory', { type: 'info' });\n  }\n\n  /**\n   * Initialize integrated AI service (after model download)\n   */\n  async initialize(): Promise<boolean> {\n    try {\n      // Verify model exists\n      if (!fs.existsSync(this.modelPath)) {\n        throw new Error('Qwen 3 model file not found');\n      }\n\n      // Try to initialize\n      await this.integratedService.initialize();\n\n      errorLogger.logError('Integrated AI initialized successfully', { type: 'info' });\n\n      return true;\n    } catch (error) {\n      errorLogger.logError(error as Error, {\n        context: 'AIServiceFactory.initialize',\n      });\n\n      return false;\n    }\n  }\n\n  /**\n   * Check if Qwen 3 model is available\n   */\n  isModelAvailable(): boolean {\n    return fs.existsSync(this.modelPath);\n  }\n\n  /**\n   * Get model file path\n   */\n  getModelPath(): string {\n    return this.modelPath;\n  }\n\n  /**\n   * Check AI connection status\n   */\n  async checkConnection(): Promise<AIStatus> {\n    try {\n      const status = await this.integratedService.checkConnection();\n\n      if (!status.connected) {\n        errorLogger.logError('Integrated AI connection check failed', {\n          type: 'info',\n          error: status.error,\n        });\n      }\n\n      return status;\n    } catch (error) {\n      errorLogger.logError(error as Error, {\n        context: 'AIServiceFactory.checkConnection',\n      });\n\n      return {\n        connected: false,\n        endpoint: 'Error checking AI service',\n        error: error instanceof Error ? error.message : 'Unknown error',\n      };\n    }\n  }\n\n  /**\n   * Non-streaming chat\n   */\n  async chat(request: AIChatRequest): Promise<AIResponse> {\n    return this.integratedService.chat(request);\n  }\n\n  /**\n   * Streaming chat\n   */\n  async streamChat(\n    request: AIChatRequest,\n    onToken: (token: string) => void,\n    onComplete: () => void,\n    onError: (error: string) => void,\n    onThinkToken?: (token: string) => void,\n    onSources?: (sources: string[]) => void,\n  ): Promise<void> {\n    await this.integratedService.streamChat(\n      request,\n      onToken,\n      onComplete,\n      onError,\n      onThinkToken,\n      onSources,\n    );\n  }\n\n  /**\n   * Streaming chat with function calling (for fact-gathering)\n   *\n   * Enables AI to call store_case_fact and get_case_facts functions.\n   * Functions are automatically executed when AI uses [[call: function()]] syntax.\n   * Used when working on specific cases that require persistent memory.\n   *\n   * @param request - Chat request with messages and context\n   * @param caseId - Case ID for fact loading/storing\n   * @param onToken - Callback for each token generated\n   * @param onComplete - Callback when streaming completes\n   * @param onError - Callback for errors\n   */\n  async streamChatWithFunctions(\n    request: AIChatRequest,\n    caseId: number | undefined,\n    onToken: (token: string) => void,\n    onComplete: () => void,\n    onError: (error: string) => void,\n  ): Promise<void> {\n    await this.integratedService.streamChatWithFunctions(\n      request,\n      caseId,\n      onToken,\n      onComplete,\n      onError,\n    );\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(config: Partial<AIConfig>): void {\n    this.integratedService.updateConfig(config);\n\n    errorLogger.logError('AI configuration updated', {\n      type: 'info',\n      config,\n    });\n  }\n\n  /**\n   * Get current configuration\n   */\n  getConfig(): AIConfig {\n    return this.integratedService.getConfig();\n  }\n\n  /**\n   * Cleanup resources\n   */\n  async dispose(): Promise<void> {\n    try {\n      await this.integratedService.dispose();\n      errorLogger.logError('AIServiceFactory disposed', { type: 'info' });\n    } catch (error) {\n      errorLogger.logError(error as Error, {\n        context: 'AIServiceFactory.dispose',\n      });\n    }\n  }\n}\n\n// Singleton instance for app-wide use\nexport const aiServiceFactory = AIServiceFactory.getInstance();\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\AuditLogger.e2e.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\AuditLogger.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\AuditLogger.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":1,"message":"Unsafe assignment of an `any` value.","line":410,"column":9,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":410,"endColumn":48}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createHash, randomUUID } from 'node:crypto';\nimport type Database from 'better-sqlite3';\nimport type {\n  AuditEvent,\n  AuditLogEntry,\n  AuditQueryFilters,\n  IntegrityReport,\n} from '../models/AuditLog.js';\n\n/**\n * AuditLogger - Blockchain-style immutable audit trail\n *\n * Features:\n * - Cryptographic hash chaining (like blockchain)\n * - Tamper-evident logging\n * - No updates/deletes - INSERT-ONLY\n * - Never throws exceptions (audit failures shouldn't break app)\n */\nexport class AuditLogger {\n  constructor(private db: Database.Database) {}\n\n  /**\n   * Log an audit event (immutable, blockchain-style)\n   *\n   * @param event - Audit event to log\n   *\n   * NOTE: This method NEVER throws. Audit logging failures are logged\n   * to console but don't break application flow.\n   */\n  log(event: AuditEvent): void {\n    try {\n      // Get previous hash for chaining\n      const previousHash = this.getLastLogHash();\n\n      // Create entry with timestamp and ID\n      const entry: AuditLogEntry = {\n        id: randomUUID(),\n        timestamp: new Date().toISOString(),\n        eventType: event.eventType,\n        userId: event.userId ?? null,\n        resourceType: event.resourceType,\n        resourceId: event.resourceId,\n        action: event.action,\n        details: event.details ?? null,\n        ipAddress: event.ipAddress ?? null,\n        userAgent: event.userAgent ?? null,\n        success: event.success ?? true,\n        errorMessage: event.errorMessage ?? null,\n        previousLogHash: previousHash,\n        integrityHash: '', // Calculate next\n        createdAt: new Date().toISOString(),\n      };\n\n      // Calculate integrity hash\n      entry.integrityHash = this.calculateIntegrityHash(entry);\n\n      // INSERT (atomic)\n      this.insertAuditLog(entry);\n    } catch (error) {\n      // CRITICAL: Audit failures should NOT break app\n      console.error('‚ùå Audit logging failed:', error);\n    }\n  }\n\n  /**\n   * Query audit logs with optional filters\n   *\n   * @param filters - Query filters\n   * @returns Array of audit log entries\n   */\n  query(filters: AuditQueryFilters = {}): AuditLogEntry[] {\n    const conditions: string[] = [];\n    const params: Record<string, unknown> = {};\n\n    // Build WHERE clauses\n    if (filters.startDate) {\n      conditions.push('timestamp >= @startDate');\n      params.startDate = filters.startDate;\n    }\n\n    if (filters.endDate) {\n      conditions.push('timestamp <= @endDate');\n      params.endDate = filters.endDate;\n    }\n\n    if (filters.resourceType) {\n      conditions.push('resource_type = @resourceType');\n      params.resourceType = filters.resourceType;\n    }\n\n    if (filters.resourceId) {\n      conditions.push('resource_id = @resourceId');\n      params.resourceId = filters.resourceId;\n    }\n\n    if (filters.eventType) {\n      conditions.push('event_type = @eventType');\n      params.eventType = filters.eventType;\n    }\n\n    if (filters.userId) {\n      conditions.push('user_id = @userId');\n      params.userId = filters.userId;\n    }\n\n    if (filters.success !== undefined) {\n      conditions.push('success = @success');\n      params.success = filters.success ? 1 : 0;\n    }\n\n    // Build SQL query\n    let sql = 'SELECT * FROM audit_logs';\n    if (conditions.length > 0) {\n      sql += ' WHERE ' + conditions.join(' AND ');\n    }\n    // Use ROWID for deterministic ordering (most recent first)\n    sql += ' ORDER BY ROWID DESC';\n\n    if (filters.limit) {\n      sql += ' LIMIT @limit';\n      params.limit = filters.limit;\n    }\n\n    if (filters.offset) {\n      sql += ' OFFSET @offset';\n      params.offset = filters.offset;\n    }\n\n    const stmt = this.db.prepare(sql);\n    const rows = stmt.all(params) as Array<{\n      id: string;\n      timestamp: string;\n      event_type: string;\n      user_id: string | null;\n      resource_type: string;\n      resource_id: string;\n      action: string;\n      details: string | null;\n      ip_address: string | null;\n      user_agent: string | null;\n      success: number;\n      error_message: string | null;\n      integrity_hash: string;\n      previous_log_hash: string | null;\n      created_at: string;\n    }>;\n\n    // Map database rows to AuditLogEntry objects\n    return rows.map((row) => this.mapRowToEntry(row));\n  }\n\n  /**\n   * Verify integrity of entire audit log chain\n   *\n   * @returns Integrity report with validation status\n   */\n  verifyIntegrity(): IntegrityReport {\n    try {\n      // Fetch all logs in chain order (insertion order via ROWID)\n      const stmt = this.db.prepare(`\n        SELECT * FROM audit_logs\n        ORDER BY ROWID ASC\n      `);\n\n      const rows = stmt.all() as Array<{\n        id: string;\n        timestamp: string;\n        event_type: string;\n        user_id: string | null;\n        resource_type: string;\n        resource_id: string;\n        action: string;\n        details: string | null;\n        ip_address: string | null;\n        user_agent: string | null;\n        success: number;\n        error_message: string | null;\n        integrity_hash: string;\n        previous_log_hash: string | null;\n        created_at: string;\n      }>;\n\n      if (rows.length === 0) {\n        return {\n          valid: true,\n          totalLogs: 0,\n        };\n      }\n\n      const entries = rows.map((row) => this.mapRowToEntry(row));\n      let previousHash: string | null = null;\n\n      // Verify each log entry\n      for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        // Verify integrity hash matches calculated hash\n        const calculatedHash = this.calculateIntegrityHash(entry);\n        if (entry.integrityHash !== calculatedHash) {\n          return {\n            valid: false,\n            totalLogs: entries.length,\n            brokenAt: i,\n            brokenLog: entry,\n            error: 'Integrity hash mismatch - log entry may have been tampered with',\n          };\n        }\n\n        // Verify chain linking\n        if (entry.previousLogHash !== previousHash) {\n          return {\n            valid: false,\n            totalLogs: entries.length,\n            brokenAt: i,\n            brokenLog: entry,\n            error: 'Chain broken - previousLogHash does not match previous entry',\n          };\n        }\n\n        previousHash = entry.integrityHash;\n      }\n\n      return {\n        valid: true,\n        totalLogs: entries.length,\n      };\n    } catch (error) {\n      return {\n        valid: false,\n        totalLogs: 0,\n        error: error instanceof Error ? error.message : 'Unknown error',\n      };\n    }\n  }\n\n  /**\n   * Export audit logs in JSON or CSV format\n   *\n   * @param format - Export format ('json' or 'csv')\n   * @param filters - Optional query filters\n   * @returns Formatted string (JSON or CSV)\n   */\n  exportLogs(format: 'json' | 'csv', filters?: AuditQueryFilters): string {\n    const logs = this.query(filters);\n\n    if (format === 'json') {\n      return JSON.stringify(logs, null, 2);\n    }\n\n    // CSV format\n    if (logs.length === 0) {\n      return '';\n    }\n\n    // CSV headers\n    const headers = [\n      'id',\n      'timestamp',\n      'eventType',\n      'userId',\n      'resourceType',\n      'resourceId',\n      'action',\n      'details',\n      'ipAddress',\n      'userAgent',\n      'success',\n      'errorMessage',\n      'integrityHash',\n      'previousLogHash',\n      'createdAt',\n    ];\n\n    // Build CSV rows\n    const rows = logs.map((log) => {\n      return [\n        log.id,\n        log.timestamp,\n        log.eventType,\n        log.userId ?? '',\n        log.resourceType,\n        log.resourceId,\n        log.action,\n        log.details ? JSON.stringify(log.details) : '',\n        log.ipAddress ?? '',\n        log.userAgent ?? '',\n        log.success.toString(),\n        log.errorMessage ?? '',\n        log.integrityHash,\n        log.previousLogHash ?? '',\n        log.createdAt,\n      ].map((field) => this.escapeCsvField(field));\n    });\n\n    // Combine headers and rows\n    const csvLines = [headers.join(','), ...rows.map((row) => row.join(','))];\n\n    return csvLines.join('\\n');\n  }\n\n  /**\n   * Calculate cryptographic integrity hash for an audit log entry\n   *\n   * Hash includes: id, timestamp, eventType, userId, resourceType, resourceId,\n   * action, details, success, previousLogHash\n   *\n   * @param entry - Audit log entry\n   * @returns SHA-256 hash (hex string)\n   */\n  private calculateIntegrityHash(entry: AuditLogEntry): string {\n    const data = {\n      id: entry.id,\n      timestamp: entry.timestamp,\n      eventType: entry.eventType,\n      userId: entry.userId ?? null,\n      resourceType: entry.resourceType,\n      resourceId: entry.resourceId,\n      action: entry.action,\n      details: entry.details ?? null,\n      success: entry.success,\n      previousLogHash: entry.previousLogHash,\n    };\n\n    // Deterministic JSON string (same input = same hash)\n    const jsonString = JSON.stringify(data);\n    return createHash('sha256').update(jsonString).digest('hex');\n  }\n\n  /**\n   * Get the integrity hash of the most recent audit log entry\n   *\n   * @returns Hash of last log, or null if no logs exist\n   */\n  private getLastLogHash(): string | null {\n    const stmt = this.db.prepare(`\n      SELECT integrity_hash\n      FROM audit_logs\n      ORDER BY ROWID DESC\n      LIMIT 1\n    `);\n\n    const row = stmt.get() as { integrity_hash: string } | undefined;\n    return row?.integrity_hash ?? null;\n  }\n\n  /**\n   * Insert audit log entry into database\n   *\n   * @param entry - Audit log entry to insert\n   */\n  private insertAuditLog(entry: AuditLogEntry): void {\n    const stmt = this.db.prepare(`\n      INSERT INTO audit_logs (\n        id, timestamp, event_type, user_id, resource_type, resource_id,\n        action, details, ip_address, user_agent, success, error_message,\n        integrity_hash, previous_log_hash, created_at\n      ) VALUES (\n        @id, @timestamp, @eventType, @userId, @resourceType, @resourceId,\n        @action, @details, @ipAddress, @userAgent, @success, @errorMessage,\n        @integrityHash, @previousLogHash, @createdAt\n      )\n    `);\n\n    stmt.run({\n      id: entry.id,\n      timestamp: entry.timestamp,\n      eventType: entry.eventType,\n      userId: entry.userId ?? null,\n      resourceType: entry.resourceType,\n      resourceId: entry.resourceId,\n      action: entry.action,\n      details: entry.details ? JSON.stringify(entry.details) : null,\n      ipAddress: entry.ipAddress ?? null,\n      userAgent: entry.userAgent ?? null,\n      success: entry.success ? 1 : 0,\n      errorMessage: entry.errorMessage ?? null,\n      integrityHash: entry.integrityHash,\n      previousLogHash: entry.previousLogHash,\n      createdAt: entry.createdAt,\n    });\n  }\n\n  /**\n   * Map database row to AuditLogEntry object\n   *\n   * @param row - Database row\n   * @returns Typed AuditLogEntry\n   */\n  private mapRowToEntry(row: {\n    id: string;\n    timestamp: string;\n    event_type: string;\n    user_id: string | null;\n    resource_type: string;\n    resource_id: string;\n    action: string;\n    details: string | null;\n    ip_address: string | null;\n    user_agent: string | null;\n    success: number;\n    error_message: string | null;\n    integrity_hash: string;\n    previous_log_hash: string | null;\n    created_at: string;\n  }): AuditLogEntry {\n    // Parse details if it's a JSON string, otherwise keep as object\n    let parsedDetails: Record<string, unknown> | undefined;\n    if (row.details) {\n      try {\n        parsedDetails = JSON.parse(row.details);\n      } catch {\n        // If parse fails, treat as plain object\n        parsedDetails = { value: row.details };\n      }\n    }\n\n    return {\n      id: row.id,\n      timestamp: row.timestamp,\n      eventType: row.event_type as AuditLogEntry['eventType'],\n      userId: row.user_id,\n      resourceType: row.resource_type,\n      resourceId: row.resource_id,\n      action: row.action as AuditLogEntry['action'],\n      details: parsedDetails ?? null,\n      ipAddress: row.ip_address,\n      userAgent: row.user_agent,\n      success: row.success === 1,\n      errorMessage: row.error_message,\n      integrityHash: row.integrity_hash,\n      previousLogHash: row.previous_log_hash,\n      createdAt: row.created_at,\n    };\n  }\n\n  /**\n   * Escape CSV field (handle quotes and commas)\n   *\n   * @param field - Field value\n   * @returns Escaped field value\n   */\n  private escapeCsvField(field: string): string {\n    if (field.includes(',') || field.includes('\"') || field.includes('\\n')) {\n      return `\"${field.replace(/\"/g, '\"\"')}\"`;\n    }\n    return field;\n  }\n}\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\CaseFactsService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\ChatConversationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\EncryptionService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\EncryptionService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\LegalAPIService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\LegalAPIService.ts","messages":[{"ruleId":"@typescript-eslint/require-await","severity":1,"message":"Async method 'extractKeywords' has no 'await' expression.","line":473,"column":3,"nodeType":"FunctionExpression","messageId":"missingAwait","endLine":473,"endColumn":24,"suggestions":[{"messageId":"removeAsync","fix":{"range":[10713,10780],"text":"extractKeywords(question: string): ExtractedKeywords"},"desc":"Remove 'async'."}]},{"ruleId":"@typescript-eslint/require-await","severity":1,"message":"Async method 'searchKnowledgeBase' has no 'await' expression.","line":619,"column":3,"nodeType":"FunctionExpression","messageId":"missingAwait","endLine":619,"endColumn":28,"suggestions":[{"messageId":"removeAsync","fix":{"range":[15039,15111],"text":"searchKnowledgeBase(keywords: string[]): KnowledgeEntry[]"},"desc":"Remove 'async'."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":722,"column":97,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":722,"endColumn":99,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[18278,18280],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":723,"column":46,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":723,"endColumn":48,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[18341,18343],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":725,"column":43,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":725,"endColumn":45,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[18409,18411],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":785,"column":97,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":785,"endColumn":99,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[20607,20609],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":786,"column":46,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":786,"endColumn":48,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[20670,20672],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":788,"column":43,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":788,"endColumn":45,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[20738,20740],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":825,"column":36,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":825,"endColumn":38,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[21801,21803],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":1,"message":"Unsafe assignment of an `any` value.","line":909,"column":17,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":909,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `{ [s: string]: CacheEntry<unknown>; } | ArrayLike<CacheEntry<unknown>>`.","line":910,"column":47,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":910,"endColumn":53}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { errorLogger } from '../utils/error-logger.js';\nimport { XMLParser } from 'fast-xml-parser';\nimport type {\n  LegislationResult,\n  CaseResult,\n  KnowledgeEntry,\n} from '../types/ai.js';\n\n// ============================================================================\n// ADDITIONAL TYPE DEFINITIONS\n// ============================================================================\n\n/**\n * Combined search results from all APIs\n */\nexport interface LegalSearchResults {\n  legislation: LegislationResult[];\n  cases: CaseResult[];\n  knowledgeBase: KnowledgeEntry[];\n  cached: boolean;\n  timestamp: number;\n}\n\n/**\n * Cache entry with expiration\n */\ninterface CacheEntry<T> {\n  data: T;\n  timestamp: number;\n  expiresAt: number;\n}\n\n/**\n * Extracted keywords from natural language question\n */\nexport interface ExtractedKeywords {\n  all: string[];\n  legal: string[];\n  general: string[];\n}\n\n// ============================================================================\n// XML/RSS FEED TYPE DEFINITIONS\n// ============================================================================\n\n/**\n * XML link element structure\n */\ninterface XMLLink {\n  '@_href'?: string;\n  '@_rel'?: string;\n  '@_type'?: string;\n}\n\n/**\n * XML text content (can be string or object with #text property)\n */\ninterface XMLTextContent {\n  '#text'?: string;\n  [key: string]: unknown;\n}\n\n/**\n * Atom feed entry structure\n */\ninterface XMLFeedEntry {\n  title?: string | XMLTextContent;\n  summary?: string | XMLTextContent;\n  content?: string | XMLTextContent;\n  link?: XMLLink | XMLLink[];\n  updated?: string | XMLTextContent;\n  published?: string | XMLTextContent;\n  id?: string | XMLTextContent;\n  author?: unknown;\n  category?: unknown;\n}\n\n/**\n * Atom feed root structure\n */\ninterface XMLFeed {\n  feed?: {\n    entry?: XMLFeedEntry | XMLFeedEntry[];\n    title?: string | XMLTextContent;\n    link?: XMLLink | XMLLink[];\n    updated?: string | XMLTextContent;\n    id?: string | XMLTextContent;\n    author?: unknown;\n  };\n}\n\n/**\n * Type guard to check if value is XMLTextContent\n */\nfunction isXMLTextContent(value: unknown): value is XMLTextContent {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    '#text' in value\n  );\n}\n\n// ============================================================================\n// CONSTANTS & CONFIGURATION\n// ============================================================================\n\nconst API_CONFIG = {\n  LEGISLATION_BASE_URL: 'https://www.legislation.gov.uk',\n  CASELAW_BASE_URL: 'https://caselaw.nationalarchives.gov.uk',\n  TIMEOUT_MS: 10000,\n  MAX_RETRIES: 3,\n  RETRY_DELAY_MS: 1000,\n  CACHE_TTL_HOURS: 24,\n  EMPTY_CACHE_TTL_HOURS: 1,\n  MAX_CACHE_SIZE: 100,\n} as const;\n\n/**\n * Legal terms dictionary for keyword extraction\n */\nconst LEGAL_TERMS_DICTIONARY = {\n  employment: [\n    'fired',\n    'dismissed',\n    'redundancy',\n    'employment',\n    'unfair dismissal',\n    'constructive dismissal',\n    'contract',\n    'wages',\n    'salary',\n    'notice period',\n    'disciplinary',\n    'grievance',\n    'maternity',\n    'paternity',\n    'pregnant',\n    'pregnancy',\n  ],\n  discrimination: [\n    'discrimination',\n    'protected characteristic',\n    'harassment',\n    'victimisation',\n    'equality',\n    'race',\n    'gender',\n    'disability',\n    'age',\n    'religion',\n    'sexual orientation',\n  ],\n  housing: [\n    'eviction',\n    'tenant',\n    'landlord',\n    'rent',\n    'housing',\n    'tenancy',\n    'deposit',\n    'repairs',\n    'notice',\n    'possession',\n    'section 21',\n    'section 8',\n  ],\n  family: [\n    'custody',\n    'divorce',\n    'child',\n    'maintenance',\n    'contact',\n    'residence',\n    'separation',\n    'matrimonial',\n    'parental responsibility',\n  ],\n  consumer: [\n    'refund',\n    'warranty',\n    'guarantee',\n    'faulty',\n    'consumer rights',\n    'sale of goods',\n    'services',\n    'complaint',\n    'product',\n  ],\n  criminal: [\n    'arrest',\n    'charge',\n    'bail',\n    'police',\n    'prosecution',\n    'defence',\n    'sentence',\n    'conviction',\n    'caution',\n  ],\n} as const;\n\n/**\n * Map legal categories to relevant court/tribunal codes for better case law filtering\n * Based on Find Case Law API court codes\n */\nconst CATEGORY_TO_COURT_MAP: Record<string, string[]> = {\n  employment: [\n    'eat', // Employment Appeal Tribunal\n    'ukeat', // UK Employment Appeal Tribunal (alternative code)\n  ],\n  discrimination: [\n    'eat', // Employment Appeal Tribunal (handles many discrimination cases)\n    'uksc', // Supreme Court (landmark discrimination cases)\n    'ewca', // Court of Appeal\n  ],\n  housing: [\n    'ukut', // Upper Tribunal (housing cases)\n    'ewca', // Court of Appeal\n  ],\n  family: [\n    'ewfc', // Family Court\n    'ewca', // Court of Appeal (Family Division)\n    'uksc', // Supreme Court (landmark family law)\n  ],\n  consumer: [\n    'ewca', // Court of Appeal\n    'ewhc', // High Court\n  ],\n  criminal: [\n    'uksc', // Supreme Court\n    'ewca', // Court of Appeal (Criminal Division)\n    'ewhc', // High Court\n  ],\n  civil: [\n    'ewca', // Court of Appeal (Civil Division)\n    'ewhc', // High Court\n    'uksc', // Supreme Court\n  ],\n};\n\n/**\n * Common English stop words to filter out\n */\nconst STOP_WORDS = new Set([\n  'a',\n  'an',\n  'and',\n  'are',\n  'as',\n  'at',\n  'be',\n  'by',\n  'can',\n  'for',\n  'from',\n  'has',\n  'he',\n  'she',\n  'in',\n  'is',\n  'it',\n  'its',\n  'of',\n  'on',\n  'that',\n  'the',\n  'to',\n  'was',\n  'will',\n  'with',\n  'i',\n  'my',\n  'me',\n  'am',\n  'being',\n  'been',\n  'do',\n  'does',\n  'did',\n  'would',\n  'could',\n  'should',\n  'may',\n  'might',\n]);\n\n// ============================================================================\n// HELPER FUNCTIONS\n// ============================================================================\n\n/**\n * Check if error is network-related\n */\nfunction isNetworkError(error: unknown): boolean {\n  if (error instanceof Error) {\n    return (\n      error.message.includes('fetch') ||\n      error.message.includes('network') ||\n      error.message.includes('ENOTFOUND') ||\n      error.message.includes('ECONNREFUSED') ||\n      error.message.includes('ETIMEDOUT') ||\n      error.name === 'AbortError' ||\n      error.name === 'TypeError'\n    );\n  }\n  return false;\n}\n\n/**\n * Determine if request should be retried\n */\nfunction shouldRetry(error: unknown, attempt: number): boolean {\n  if (attempt >= API_CONFIG.MAX_RETRIES) {\n    return false;\n  }\n\n  if (isNetworkError(error)) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Calculate exponential backoff delay\n */\nfunction getRetryDelay(attempt: number): number {\n  return API_CONFIG.RETRY_DELAY_MS * Math.pow(2, attempt);\n}\n\n/**\n * Sleep for specified milliseconds\n */\nfunction sleep(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n// ============================================================================\n// LEGAL API SERVICE CLASS\n// ============================================================================\n\n/**\n * Service for interacting with UK Legal APIs\n * Handles legislation.gov.uk and Find Case Law API with caching and error handling\n */\nexport class LegalAPIService {\n  private cache: Map<string, CacheEntry<unknown>>;\n\n  constructor() {\n    this.cache = new Map();\n    this.loadCacheFromStorage();\n  }\n\n  // ==========================================================================\n  // PUBLIC API\n  // ==========================================================================\n\n  /**\n   * Search for legal information based on natural language question\n   * Handles offline gracefully and uses aggressive caching\n   */\n  async searchLegalInfo(question: string): Promise<LegalSearchResults> {\n    try {\n      // Extract keywords from question\n      const keywords = await this.extractKeywords(question);\n\n      // Classify question to determine relevant courts\n      const category = this.classifyQuestion(question);\n\n      errorLogger.logError('Legal API search initiated', {\n        question,\n        keywords: keywords.all,\n        category,\n      });\n\n      // Check cache first\n      const cacheKey = this.generateCacheKey('search', [\n        ...keywords.all,\n        category,\n      ]);\n      const cached = this.getCached<LegalSearchResults>(cacheKey);\n\n      if (cached) {\n        errorLogger.logError('Returning cached results', { cacheKey });\n        return { ...cached, cached: true };\n      }\n\n      // Fetch from APIs in parallel\n      const [legislation, cases, knowledgeBase] = await Promise.all([\n        this.searchLegislation(keywords.all),\n        this.searchCaseLaw(keywords.all, category), // Pass category for court filtering\n        this.searchKnowledgeBase(keywords.all),\n      ]);\n\n      const results: LegalSearchResults = {\n        legislation,\n        cases,\n        knowledgeBase,\n        cached: false,\n        timestamp: Date.now(),\n      };\n\n      // Cache results\n      const ttl =\n        legislation.length > 0 || cases.length > 0\n          ? API_CONFIG.CACHE_TTL_HOURS\n          : API_CONFIG.EMPTY_CACHE_TTL_HOURS;\n\n      this.setCache(cacheKey, results, ttl);\n\n      errorLogger.logError('Legal API search completed', {\n        legislationCount: legislation.length,\n        casesCount: cases.length,\n        knowledgeBaseCount: knowledgeBase.length,\n        category,\n      });\n\n      return results;\n    } catch (error) {\n      errorLogger.logError(error as Error, {\n        context: 'searchLegalInfo',\n        question,\n      });\n\n      // Return empty results on error (graceful degradation)\n      return {\n        legislation: [],\n        cases: [],\n        knowledgeBase: [],\n        cached: false,\n        timestamp: Date.now(),\n      };\n    }\n  }\n\n  /**\n   * Clear all cached data\n   */\n  clearCache(): void {\n    this.cache.clear();\n    this.saveCacheToStorage();\n    errorLogger.logError('Legal API cache cleared', {});\n  }\n\n  /**\n   * Classify question type for targeted API queries\n   * Returns category: employment, housing, consumer, civil, etc.\n   */\n  classifyQuestion(question: string): string {\n    const lowerQuestion = question.toLowerCase();\n\n    // Check each category\n    for (const [category, terms] of Object.entries(LEGAL_TERMS_DICTIONARY)) {\n      for (const term of terms) {\n        if (lowerQuestion.includes(term)) {\n          return category;\n        }\n      }\n    }\n\n    // No legal terms found - this is a general conversation\n    return 'general';\n  }\n\n  // ==========================================================================\n  // KEYWORD EXTRACTION\n  // ==========================================================================\n\n  /**\n   * Extract keywords from natural language question\n   * Uses simple NLP to identify legal terms, acts, and key concepts\n   */\n  async extractKeywords(question: string): Promise<ExtractedKeywords> {\n    const words = question\n      .toLowerCase()\n      .replace(/[^a-z0-9\\s]/g, '') // Remove punctuation\n      .split(/\\s+/)\n      .filter((word) => word.length > 2 && !STOP_WORDS.has(word));\n\n    const legalTerms: string[] = [];\n    const allTerms = Object.values(LEGAL_TERMS_DICTIONARY).flat();\n\n    // Match against legal dictionary\n    for (const word of words) {\n      for (const term of allTerms) {\n        if (\n          term.includes(word) ||\n          word.includes(term) ||\n          question.toLowerCase().includes(term)\n        ) {\n          if (!legalTerms.includes(term)) {\n            legalTerms.push(term);\n          }\n        }\n      }\n    }\n\n    // Keep original meaningful words as general keywords\n    const generalKeywords = words.filter((word) => !legalTerms.includes(word));\n\n    // Combine for search (deduplicated)\n    const allKeywords = Array.from(new Set([...legalTerms, ...generalKeywords]));\n\n    errorLogger.logError('Keywords extracted', {\n      all: allKeywords,\n      legal: legalTerms,\n      general: generalKeywords,\n    });\n\n    return {\n      all: allKeywords,\n      legal: legalTerms,\n      general: generalKeywords,\n    };\n  }\n\n  // ==========================================================================\n  // API CLIENTS\n  // ==========================================================================\n\n  /**\n   * Search legislation.gov.uk API\n   * Queries UK statutes, regulations, and statutory instruments\n   */\n  async searchLegislation(keywords: string[]): Promise<LegislationResult[]> {\n    try {\n      const query = keywords.join(' ');\n      // Use Atom feed endpoint for UK Public General Acts\n      const url = `${API_CONFIG.LEGISLATION_BASE_URL}/ukpga/data.feed?title=${encodeURIComponent(query)}`;\n\n      errorLogger.logError('Searching legislation.gov.uk', {\n        type: 'info',\n        url,\n        keywords,\n      });\n\n      const response = await this.fetchWithRetry(url);\n\n      if (!response.ok) {\n        throw new Error(`Legislation API returned ${response.status}`);\n      }\n\n      const xmlText = await response.text();\n\n      // Parse Atom XML response\n      return this.parseAtomFeedToLegislation(xmlText, query);\n    } catch (error) {\n      errorLogger.logError(error as Error, {\n        context: 'searchLegislation',\n        keywords,\n        isOffline: isNetworkError(error),\n      });\n      return [];\n    }\n  }\n\n  /**\n   * Search Find Case Law API\n   * Queries tribunal decisions, court judgments, and precedents with intelligent court filtering\n   */\n  async searchCaseLaw(\n    keywords: string[],\n    category: string = 'general',\n  ): Promise<CaseResult[]> {\n    try {\n      // Build improved query with quoted phrases for multi-word terms\n      const queryTerms = keywords.map((term) => {\n        // Quote multi-word terms for exact phrase matching\n        return term.includes(' ') ? `\"${term}\"` : term;\n      });\n      const query = queryTerms.join(' ');\n\n      // Build URL with court filtering if category matches\n      let url = `${API_CONFIG.CASELAW_BASE_URL}/atom.xml?query=${encodeURIComponent(query)}`;\n\n      // Add court filtering based on question category\n      const relevantCourts = CATEGORY_TO_COURT_MAP[category];\n      if (relevantCourts && relevantCourts.length > 0) {\n        // API supports multiple court parameters\n        const courtParams = relevantCourts\n          .map((court) => `court=${court}`)\n          .join('&');\n        url += `&${courtParams}`;\n      }\n\n      errorLogger.logError('Searching Find Case Law', {\n        type: 'info',\n        url,\n        keywords,\n        category,\n        courts: relevantCourts,\n      });\n\n      const response = await this.fetchWithRetry(url);\n\n      if (!response.ok) {\n        throw new Error(`Case Law API returned ${response.status}`);\n      }\n\n      const xmlText = await response.text();\n\n      // Parse Atom XML response\n      return this.parseAtomFeedToCaseLaw(xmlText, query);\n    } catch (error) {\n      errorLogger.logError(error as Error, {\n        context: 'searchCaseLaw',\n        keywords,\n        category,\n        isOffline: isNetworkError(error),\n      });\n      return [];\n    }\n  }\n\n  /**\n   * Search internal knowledge base\n   * Queries cached FAQs, guides, and common scenarios\n   */\n  async searchKnowledgeBase(keywords: string[]): Promise<KnowledgeEntry[]> {\n    try {\n      errorLogger.logError('Searching knowledge base', {\n        keywords,\n      });\n\n      // FUTURE ENHANCEMENT: Implement knowledge base integration\n      // For now, return empty array\n      return [];\n    } catch (error) {\n      errorLogger.logError(error as Error, {\n        context: 'searchKnowledgeBase',\n        keywords,\n      });\n      return [];\n    }\n  }\n\n  // ==========================================================================\n  // HTTP CLIENT WITH RETRY LOGIC\n  // ==========================================================================\n\n  /**\n   * Fetch with automatic retry and timeout handling\n   */\n  private async fetchWithRetry(\n    url: string,\n    options: RequestInit = {},\n    attempt: number = 0,\n  ): Promise<Response> {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(\n      () => controller.abort(),\n      API_CONFIG.TIMEOUT_MS,\n    );\n\n    try {\n      const response = await fetch(url, {\n        ...options,\n        signal: controller.signal,\n        headers: {\n          'User-Agent': 'Justice Companion/1.0',\n          ...options.headers,\n        },\n      });\n\n      clearTimeout(timeoutId);\n      return response;\n    } catch (error) {\n      clearTimeout(timeoutId);\n\n      if (shouldRetry(error, attempt)) {\n        const delay = getRetryDelay(attempt);\n        errorLogger.logError(`Retrying request (attempt ${attempt + 1})`, {\n          url,\n          delay,\n        });\n\n        await sleep(delay);\n        return this.fetchWithRetry(url, options, attempt + 1);\n      }\n\n      throw error;\n    }\n  }\n\n  // ==========================================================================\n  // RESPONSE PARSERS\n  // ==========================================================================\n\n  /**\n   * Parse Atom XML feed to legislation results\n   * Atom format: <feed><entry><title>, <link>, <summary>, etc.\n   */\n  private parseAtomFeedToLegislation(xmlText: string, _query: string): LegislationResult[] {\n    try {\n      const parser = new XMLParser({\n        ignoreAttributes: false,\n        attributeNamePrefix: '@_',\n      });\n\n      const xmlDoc = parser.parse(xmlText) as XMLFeed;\n\n      // Handle feed structure: feed.entry can be array or single object\n      let entries: XMLFeedEntry[] = [];\n      if (xmlDoc?.feed?.entry) {\n        entries = Array.isArray(xmlDoc.feed.entry) ? xmlDoc.feed.entry : [xmlDoc.feed.entry];\n      }\n\n      const results: LegislationResult[] = [];\n\n      for (let i = 0; i < Math.min(entries.length, 5); i++) { // Limit to 5 results\n        const entry = entries[i];\n\n        // Extract text from potentially nested objects\n        const title = this.getTextContent(entry?.title) || 'Unknown';\n        const summary = this.getTextContent(entry?.summary) || this.getTextContent(entry?.content) || 'No summary available';\n\n        // Extract link href - handle both single link and array of links\n        let link = '';\n        if (entry?.link) {\n          if (Array.isArray(entry.link)) {\n            // Find first alternate link or use first link\n            const alternateLink = entry.link.find((l: XMLLink) => l?.['@_rel'] === 'alternate') || entry.link[0];\n            link = alternateLink?.['@_href'] || '';\n          } else {\n            link = entry.link?.['@_href'] || '';\n          }\n        }\n\n        // Extract section from title if present (e.g., \"Employment Rights Act 1996 Section 94\")\n        const sectionMatch = title.match(/Section (\\d+[A-Z]?)/i);\n        const section = sectionMatch ? sectionMatch[0] : undefined;\n\n        results.push({\n          title: title.trim(),\n          section,\n          content: summary.trim().substring(0, 500), // Limit content length\n          url: link,\n          relevance: 1.0 - (i * 0.1), // Simple relevance scoring\n        });\n      }\n\n      return results;\n    } catch (error) {\n      errorLogger.logError(error as Error, {\n        context: 'parseAtomFeedToLegislation',\n      });\n      return [];\n    }\n  }\n\n  /**\n   * Parse Atom XML feed to case law results\n   * Atom format: <feed><entry><title>, <link>, <summary>, etc.\n   */\n  private parseAtomFeedToCaseLaw(xmlText: string, _query: string): CaseResult[] {\n    try {\n      const parser = new XMLParser({\n        ignoreAttributes: false,\n        attributeNamePrefix: '@_',\n      });\n\n      const xmlDoc = parser.parse(xmlText) as XMLFeed;\n\n      // Handle feed structure: feed.entry can be array or single object\n      let entries: XMLFeedEntry[] = [];\n      if (xmlDoc?.feed?.entry) {\n        entries = Array.isArray(xmlDoc.feed.entry) ? xmlDoc.feed.entry : [xmlDoc.feed.entry];\n      }\n\n      const results: CaseResult[] = [];\n\n      for (let i = 0; i < Math.min(entries.length, 5); i++) { // Limit to 5 results\n        const entry = entries[i];\n\n        // Extract text from potentially nested objects\n        const title = this.getTextContent(entry?.title) || 'Unknown Case';\n        const summary = this.getTextContent(entry?.summary) || this.getTextContent(entry?.content) || 'No summary available';\n        const dateStr = this.getTextContent(entry?.updated) || this.getTextContent(entry?.published) || new Date().toISOString();\n\n        // Extract link href - handle both single link and array of links\n        let link = '';\n        if (entry?.link) {\n          if (Array.isArray(entry.link)) {\n            // Find first alternate link or use first link\n            const alternateLink = entry.link.find((l: XMLLink) => l?.['@_rel'] === 'alternate') || entry.link[0];\n            link = alternateLink?.['@_href'] || '';\n          } else {\n            link = entry.link?.['@_href'] || '';\n          }\n        }\n\n        // Extract court from title or use default\n        const courtMatch = title.match(/\\[(.*?)\\]/);\n        const court = courtMatch ? courtMatch[1] : 'UK Court';\n\n        results.push({\n          citation: title.trim(),\n          court,\n          date: dateStr.split('T')[0], // ISO date format\n          summary: summary.trim().substring(0, 500), // Limit summary length\n          outcome: undefined, // Not typically in atom feed\n          url: link,\n          relevance: 1.0 - (i * 0.1), // Simple relevance scoring\n        });\n      }\n\n      return results;\n    } catch (error) {\n      errorLogger.logError(error as Error, {\n        context: 'parseAtomFeedToCaseLaw',\n      });\n      return [];\n    }\n  }\n\n  /**\n   * Helper: Extract text content from XML parser result\n   * Handles both simple strings and objects with #text property\n   */\n  private getTextContent(value: unknown): string {\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (isXMLTextContent(value)) {\n      return String(value['#text'] || '');\n    }\n    return '';\n  }\n\n  // ==========================================================================\n  // CACHE LAYER\n  // ==========================================================================\n\n  /**\n   * Generate cache key from prefix and parameters\n   */\n  private generateCacheKey(prefix: string, params: string[]): string {\n    const sortedParams = params.sort().join(',');\n    return `${prefix}:${sortedParams}`;\n  }\n\n  /**\n   * Get cached data if valid\n   */\n  private getCached<T>(key: string): T | null {\n    const entry = this.cache.get(key) as CacheEntry<T> | undefined;\n\n    if (!entry) {\n      return null;\n    }\n\n    // Check if expired\n    if (Date.now() > entry.expiresAt) {\n      this.cache.delete(key);\n      this.saveCacheToStorage();\n      return null;\n    }\n\n    return entry.data;\n  }\n\n  /**\n   * Set cache with TTL\n   */\n  private setCache<T>(key: string, data: T, ttlHours: number): void {\n    const entry: CacheEntry<T> = {\n      data,\n      timestamp: Date.now(),\n      expiresAt: Date.now() + ttlHours * 60 * 60 * 1000,\n    };\n\n    this.cache.set(key, entry);\n\n    // Enforce cache size limit\n    if (this.cache.size > API_CONFIG.MAX_CACHE_SIZE) {\n      this.evictOldestCache();\n    }\n\n    this.saveCacheToStorage();\n  }\n\n  /**\n   * Evict oldest cache entries when limit exceeded\n   */\n  private evictOldestCache(): void {\n    let oldestKey: string | null = null;\n    let oldestTime = Infinity;\n\n    for (const [key, entry] of this.cache.entries()) {\n      if (entry.timestamp < oldestTime) {\n        oldestTime = entry.timestamp;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey) {\n      this.cache.delete(oldestKey);\n    }\n  }\n\n  /**\n   * Load cache from localStorage (browser) or file (Electron)\n   */\n  private loadCacheFromStorage(): void {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        const stored = localStorage.getItem('legalAPICache');\n        if (stored) {\n          const parsed = JSON.parse(stored);\n          this.cache = new Map(Object.entries(parsed));\n\n          errorLogger.logError('Cache loaded from localStorage', {\n            entries: this.cache.size,\n          });\n        }\n      }\n    } catch (error) {\n      errorLogger.logError(error as Error, {\n        context: 'loadCacheFromStorage',\n      });\n    }\n  }\n\n  /**\n   * Save cache to localStorage (browser) or file (Electron)\n   */\n  private saveCacheToStorage(): void {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        const cacheObject = Object.fromEntries(this.cache);\n        localStorage.setItem('legalAPICache', JSON.stringify(cacheObject));\n      }\n    } catch (error) {\n      errorLogger.logError(error as Error, {\n        context: 'saveCacheToStorage',\n      });\n    }\n  }\n}\n\n// ============================================================================\n// SINGLETON EXPORT\n// ============================================================================\n\n/**\n * Singleton instance for app-wide use\n */\nexport const legalAPIService = new LegalAPIService();\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\LegalIssuesService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\ModelDownloadService.ts","messages":[{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":1,"message":"Prefer using nullish coalescing operator (`??=`) instead of an assignment expression, as it is simpler to read.","line":103,"column":5,"nodeType":"IfStatement","messageId":"preferNullishOverAssignment","endLine":105,"endColumn":6,"suggestions":[{"messageId":"suggestNullish","data":{"equals":"="},"fix":{"range":[2828,2937],"text":"ModelDownloadService.instance ??= new ModelDownloadService();"},"desc":"Fix to nullish coalescing operator (`??=`)."}]},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":1,"message":"Unsafe member access .length on an `any` value.","line":292,"column":38,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":292,"endColumn":44},{"ruleId":"@typescript-eslint/require-await","severity":1,"message":"Async method 'deleteModel' has no 'await' expression.","line":358,"column":3,"nodeType":"FunctionExpression","messageId":"missingAwait","endLine":358,"endColumn":20,"suggestions":[{"messageId":"removeAsync","fix":{"range":[9228,9280],"text":"deleteModel(modelId: string): boolean"},"desc":"Remove 'async'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { errorLogger } from '../utils/error-logger';\nimport fs from 'fs';\nimport path from 'path';\nimport { app } from 'electron';\nimport https from 'https';\nimport crypto from 'crypto';\n\n/**\n * Model metadata for available models\n */\nexport interface ModelInfo {\n  id: string;\n  name: string;\n  fileName: string;\n  url: string;\n  size: number;\n  sha256?: string;\n  description: string;\n  recommended: boolean;\n}\n\n/**\n * Download progress information\n */\nexport interface DownloadProgress {\n  modelId: string;\n  downloadedBytes: number;\n  totalBytes: number;\n  percentage: number;\n  speed: number; // bytes per second\n  status: 'downloading' | 'complete' | 'error' | 'paused';\n  error?: string;\n}\n\n/**\n * Active download state for tracking in-progress downloads\n */\ninterface ActiveDownload {\n  modelId: string;\n  startTime: number;\n  lastProgress: number;\n}\n\n/**\n * ModelDownloadService - Handles downloading AI models from HuggingFace\n */\nexport class ModelDownloadService {\n  private static instance: ModelDownloadService | null = null;\n  private modelsDir: string;\n  private activeDownloads: Map<string, ActiveDownload> = new Map();\n\n  // Available models catalog\n  public readonly availableModels: ModelInfo[] = [\n    {\n      id: 'qwen3-8b-q4',\n      name: 'Qwen 3 8B (Q4_K_M)',\n      fileName: 'Qwen_Qwen3-8B-Q4_K_M.gguf',\n      url: 'https://huggingface.co/bartowski/Qwen_Qwen3-8B-GGUF/resolve/main/Qwen_Qwen3-8B-Q4_K_M.gguf',\n      size: 5030000000, // ~5.03 GB\n      description: 'Recommended for AMD Radeon RX 6600 (5.86GB VRAM available)',\n      recommended: true,\n    },\n    {\n      id: 'qwen3-8b-q5',\n      name: 'Qwen 3 8B (Q5_K_M)',\n      fileName: 'Qwen_Qwen3-8B-Q5_K_M.gguf',\n      url: 'https://huggingface.co/bartowski/Qwen_Qwen3-8B-GGUF/resolve/main/Qwen_Qwen3-8B-Q5_K_M.gguf',\n      size: 5850000000, // ~5.85 GB\n      description: 'Higher quality, uses all available VRAM',\n      recommended: false,\n    },\n    {\n      id: 'qwen3-8b-iq4',\n      name: 'Qwen 3 8B (IQ4_XS)',\n      fileName: 'Qwen_Qwen3-8B-IQ4_XS.gguf',\n      url: 'https://huggingface.co/bartowski/Qwen_Qwen3-8B-GGUF/resolve/main/Qwen_Qwen3-8B-IQ4_XS.gguf',\n      size: 4560000000, // ~4.56 GB\n      description: 'Smaller, faster, decent quality',\n      recommended: false,\n    },\n  ];\n\n  private constructor() {\n    // Models directory: app.getPath('userData')/models/\n    const userDataPath = app.getPath('userData');\n    this.modelsDir = path.join(userDataPath, 'models');\n\n    // Ensure models directory exists\n    if (!fs.existsSync(this.modelsDir)) {\n      fs.mkdirSync(this.modelsDir, { recursive: true });\n    }\n\n    errorLogger.logError('ModelDownloadService initialized', {\n      type: 'info',\n      modelsDir: this.modelsDir,\n    });\n  }\n\n  /**\n   * Get singleton instance\n   */\n  static getInstance(): ModelDownloadService {\n    if (!ModelDownloadService.instance) {\n      ModelDownloadService.instance = new ModelDownloadService();\n    }\n    return ModelDownloadService.instance;\n  }\n\n  /**\n   * Get models directory path\n   */\n  getModelsDir(): string {\n    return this.modelsDir;\n  }\n\n  /**\n   * Check if a model is already downloaded\n   */\n  isModelDownloaded(modelId: string): boolean {\n    const model = this.availableModels.find((m) => m.id === modelId);\n    if (!model) {\n      return false;\n    }\n\n    const modelPath = path.join(this.modelsDir, model.fileName);\n    return fs.existsSync(modelPath);\n  }\n\n  /**\n   * Get downloaded model path\n   */\n  getModelPath(modelId: string): string | null {\n    const model = this.availableModels.find((m) => m.id === modelId);\n    if (!model) {\n      return null;\n    }\n\n    const modelPath = path.join(this.modelsDir, model.fileName);\n    return fs.existsSync(modelPath) ? modelPath : null;\n  }\n\n  /**\n   * Download a model with progress tracking\n   */\n  async downloadModel(\n    modelId: string,\n    onProgress: (progress: DownloadProgress) => void,\n  ): Promise<boolean> {\n    const model = this.availableModels.find((m) => m.id === modelId);\n    if (!model) {\n      errorLogger.logError('Model not found in catalog', { modelId });\n      return false;\n    }\n\n    // Check if already downloaded\n    if (this.isModelDownloaded(modelId)) {\n      errorLogger.logError('Model already downloaded', {\n        type: 'info',\n        modelId,\n      });\n      onProgress({\n        modelId,\n        downloadedBytes: model.size,\n        totalBytes: model.size,\n        percentage: 100,\n        speed: 0,\n        status: 'complete',\n      });\n      return true;\n    }\n\n    // Check if download already in progress\n    if (this.activeDownloads.has(modelId)) {\n      errorLogger.logError('Download already in progress', { modelId });\n      return false;\n    }\n\n    const modelPath = path.join(this.modelsDir, model.fileName);\n    const tempPath = `${modelPath}.tmp`;\n\n    try {\n      errorLogger.logError('Starting model download', {\n        type: 'info',\n        modelId,\n        url: model.url,\n        size: model.size,\n      });\n\n      // Download file with progress tracking\n      await this.downloadFile(model.url, tempPath, model.size, (progress) => {\n        onProgress({\n          modelId,\n          downloadedBytes: progress.downloadedBytes,\n          totalBytes: progress.totalBytes,\n          percentage: progress.percentage,\n          speed: progress.speed,\n          status: 'downloading',\n        });\n      });\n\n      // Verify checksum if provided\n      if (model.sha256) {\n        errorLogger.logError('Verifying checksum', { type: 'info', modelId });\n\n        const hash = await this.calculateSHA256(tempPath);\n        if (hash !== model.sha256) {\n          throw new Error(\n            `Checksum verification failed. Expected: ${model.sha256}, Got: ${hash}`,\n          );\n        }\n\n        errorLogger.logError('Checksum verified successfully', {\n          type: 'info',\n          modelId,\n        });\n      }\n\n      // Move temp file to final location\n      fs.renameSync(tempPath, modelPath);\n\n      errorLogger.logError('Model download complete', {\n        type: 'info',\n        modelId,\n        path: modelPath,\n      });\n\n      onProgress({\n        modelId,\n        downloadedBytes: model.size,\n        totalBytes: model.size,\n        percentage: 100,\n        speed: 0,\n        status: 'complete',\n      });\n\n      this.activeDownloads.delete(modelId);\n      return true;\n    } catch (error) {\n      // Clean up temp file\n      if (fs.existsSync(tempPath)) {\n        fs.unlinkSync(tempPath);\n      }\n\n      const errorMessage =\n        error instanceof Error ? error.message : 'Unknown error';\n\n      errorLogger.logError(error as Error, {\n        context: 'ModelDownloadService.downloadModel',\n        modelId,\n      });\n\n      onProgress({\n        modelId,\n        downloadedBytes: 0,\n        totalBytes: model.size,\n        percentage: 0,\n        speed: 0,\n        status: 'error',\n        error: errorMessage,\n      });\n\n      this.activeDownloads.delete(modelId);\n      return false;\n    }\n  }\n\n  /**\n   * Download file with progress tracking\n   */\n  private downloadFile(\n    url: string,\n    destPath: string,\n    totalSize: number,\n    onProgress: (progress: DownloadProgress) => void,\n  ): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const file = fs.createWriteStream(destPath);\n      let downloadedBytes = 0;\n      let lastUpdate = Date.now();\n      let lastBytes = 0;\n\n      https\n        .get(url, (response) => {\n          if (response.statusCode !== 200) {\n            reject(\n              new Error(`HTTP ${response.statusCode}: ${response.statusMessage}`),\n            );\n            return;\n          }\n\n          response.on('data', (chunk) => {\n            downloadedBytes += chunk.length;\n\n            // Calculate speed every second\n            const now = Date.now();\n            const elapsed = (now - lastUpdate) / 1000; // seconds\n\n            if (elapsed >= 1) {\n              const speed = (downloadedBytes - lastBytes) / elapsed;\n              lastUpdate = now;\n              lastBytes = downloadedBytes;\n\n              onProgress({\n                modelId: '',\n                downloadedBytes,\n                totalBytes: totalSize,\n                percentage: (downloadedBytes / totalSize) * 100,\n                speed,\n                status: 'downloading',\n              });\n            }\n          });\n\n          response.pipe(file);\n\n          file.on('finish', () => {\n            file.close();\n            resolve();\n          });\n        })\n        .on('error', (error) => {\n          fs.unlinkSync(destPath);\n          reject(error);\n        });\n\n      file.on('error', (error) => {\n        fs.unlinkSync(destPath);\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Calculate SHA256 hash of a file\n   */\n  private calculateSHA256(filePath: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const hash = crypto.createHash('sha256');\n      const stream = fs.createReadStream(filePath);\n\n      stream.on('data', (chunk) => {\n        hash.update(chunk);\n      });\n\n      stream.on('end', () => {\n        resolve(hash.digest('hex'));\n      });\n\n      stream.on('error', (error) => {\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Delete a downloaded model\n   */\n  async deleteModel(modelId: string): Promise<boolean> {\n    const model = this.availableModels.find((m) => m.id === modelId);\n    if (!model) {\n      return false;\n    }\n\n    const modelPath = path.join(this.modelsDir, model.fileName);\n\n    if (!fs.existsSync(modelPath)) {\n      return false;\n    }\n\n    try {\n      fs.unlinkSync(modelPath);\n\n      errorLogger.logError('Model deleted', {\n        type: 'info',\n        modelId,\n        path: modelPath,\n      });\n\n      return true;\n    } catch (error) {\n      errorLogger.logError(error as Error, {\n        context: 'ModelDownloadService.deleteModel',\n        modelId,\n      });\n\n      return false;\n    }\n  }\n\n  /**\n   * Get list of all downloaded models\n   */\n  getDownloadedModels(): ModelInfo[] {\n    return this.availableModels.filter((model) =>\n      this.isModelDownloaded(model.id),\n    );\n  }\n}\n\n// Singleton instance\nexport const modelDownloadService = ModelDownloadService.getInstance();\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\NotesService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\RAGService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\TimelineService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\UserFactsService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\UserProfileService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\services\\ai-functions.ts","messages":[{"ruleId":"@typescript-eslint/require-await","severity":1,"message":"Async method 'handler' has no 'await' expression.","line":78,"column":3,"nodeType":"ArrowFunctionExpression","messageId":"missingAwait","endLine":78,"endColumn":18,"suggestions":[{"messageId":"removeAsync","fix":{"range":[2708,2904],"text":"(params: {\n    caseId: number;\n    factType: string;\n    factKey: string;\n    factValue: string;\n    confidence?: number;\n  }): { success: boolean; fact?: CaseFact; error?: string }"},"desc":"Remove 'async'."}]},{"ruleId":"@typescript-eslint/require-await","severity":1,"message":"Async method 'handler' has no 'await' expression.","line":191,"column":3,"nodeType":"ArrowFunctionExpression","messageId":"missingAwait","endLine":191,"endColumn":18,"suggestions":[{"messageId":"removeAsync","fix":{"range":[6724,6871],"text":"(params: {\n    caseId: number;\n    factType?: string;\n  }): { success: boolean; facts?: CaseFact[]; count?: number; error?: string }"},"desc":"Remove 'async'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * AI Function Definitions for node-llama-cpp Function Calling\n *\n * These functions enable the AI to:\n * - Store case facts (persistent memory)\n * - Retrieve case facts (context loading)\n * - Gather information systematically\n *\n * Uses node-llama-cpp's built-in defineChatSessionFunction for automatic:\n * - Function call parsing from AI responses: [[call: store_case_fact({...})]]\n * - Handler execution\n * - Result formatting: [[result: {...}]]\n * - Multi-turn conversation management\n */\n\nimport type { CaseFact, CreateCaseFactInput } from '../models/CaseFact.js';\n\n/**\n * Store a case fact (persistent memory)\n *\n * AI uses this to remember key information about a case.\n * Maps semantic fact types to database categories.\n *\n * @example\n * AI Response: [[call: store_case_fact({\n *   caseId: 42,\n *   factType: \"party\",\n *   factKey: \"employer_name\",\n *   factValue: \"ABC Tech Ltd\",\n *   confidence: 1.0\n * })]]\n */\nexport const storeCaseFactDefinition = {\n  description: `Store a case fact for persistent memory. Facts are stored as \"factKey: factValue\" in the database.\n\nfactType options (maps to database factCategory):\n- \"timeline\": Important dates and events (e.g., \"dismissal_date: 2024-01-15\")\n- \"evidence\": Evidence items (e.g., \"contract: Signed employment contract from 2022\")\n- \"witness\": Witness information (e.g., \"witness_1_name: John Smith\")\n- \"location\": Locations (e.g., \"incident_location: Main office, London\")\n- \"communication\": Communications (e.g., \"dismissal_email: Email from HR dated 2024-01-15\")\n- \"other\": Other facts not fitting above categories\n\nconfidence: 0.0-1.0 (1.0 = certain/critical, 0.7 = high, 0.5 = medium, <0.5 = low)\nThis maps to importance in database: >=0.9=critical, >=0.7=high, >=0.5=medium, <0.5=low`,\n\n  params: {\n    type: 'object' as const,\n    properties: {\n      caseId: {\n        type: 'number' as const,\n        description: 'The case ID to store the fact for',\n      },\n      factType: {\n        type: 'string' as const,\n        description: 'Category of fact (timeline, evidence, witness, location, communication, other)',\n      },\n      factKey: {\n        type: 'string' as const,\n        description: \"Unique identifier for this fact (e.g., 'employer_name', 'dismissal_date')\",\n      },\n      factValue: {\n        type: 'string' as const,\n        description: 'The actual fact value',\n      },\n      confidence: {\n        type: 'number' as const,\n        description: 'Confidence score 0.0-1.0 (default: 1.0, maps to importance)',\n      },\n    },\n    required: ['caseId', 'factType', 'factKey', 'factValue'],\n  },\n\n  /**\n   * Handler that executes when AI calls store_case_fact\n   * Maps semantic params to database schema\n   */\n  handler: async (params: {\n    caseId: number;\n    factType: string;\n    factKey: string;\n    factValue: string;\n    confidence?: number;\n  }): Promise<{ success: boolean; fact?: CaseFact; error?: string }> => {\n    try {\n      // Validate factType (maps to factCategory in DB)\n      const validFactTypes = ['timeline', 'evidence', 'witness', 'location', 'communication', 'other'];\n      if (!validFactTypes.includes(params.factType)) {\n        return {\n          success: false,\n          error: `Invalid factType: ${params.factType}. Must be one of: ${validFactTypes.join(', ')}`,\n        };\n      }\n\n      // Map confidence to importance\n      const confidence = params.confidence ?? 1.0;\n      if (typeof confidence !== 'number' || confidence < 0 || confidence > 1) {\n        return {\n          success: false,\n          error: `Invalid confidence: ${confidence}. Must be between 0.0 and 1.0`,\n        };\n      }\n\n      let importance: 'low' | 'medium' | 'high' | 'critical' = 'medium';\n      if (confidence >= 0.9) {\n        importance = 'critical';\n      } else if (confidence >= 0.7) {\n        importance = 'high';\n      } else if (confidence >= 0.5) {\n        importance = 'medium';\n      } else {\n        importance = 'low';\n      }\n\n      // Combine factKey and factValue into factContent (DB format)\n      const factContent = `${params.factKey}: ${params.factValue}`;\n\n      // Prepare input for database\n      const input: CreateCaseFactInput = {\n        caseId: params.caseId,\n        factContent,\n        factCategory: params.factType as 'timeline' | 'evidence' | 'witness' | 'location' | 'communication' | 'other', // Validated above\n        importance: importance || 'medium', // Default to medium if undefined\n      };\n\n      // Call IPC handler (facts:store was added to main.ts)\n      // Note: This needs to be executed in renderer context with window.justiceAPI\n      // For now, we'll return a structured response for the AI to see\n      // The actual IPC call will be handled when this runs in the renderer\n\n      // Return success structure for AI (actual IPC call TBD in integration)\n      return {\n        success: true,\n        fact: {\n          id: 0, // Will be set by database\n          caseId: input.caseId,\n          factContent: input.factContent,\n          factCategory: input.factCategory,\n          importance: input.importance!, // Always defined due to || 'medium' fallback above\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString(),\n        },\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error storing fact',\n      };\n    }\n  },\n};\n\n/**\n * Get all facts for a case (load memory)\n *\n * AI uses this to load context before answering questions.\n * RULE: AI MUST call this before providing legal information about a case.\n *\n * @example\n * AI Response: [[call: get_case_facts({caseId: 42})]]\n * Result: [[result: {success: true, facts: [...], count: 3}]]\n */\nexport const getCaseFactsDefinition = {\n  description: `Get all stored facts for a case. Returns facts in format: [{id, factContent, factCategory, importance, ...}]\n\nfactCategory can be: timeline, evidence, witness, location, communication, other\nimportance can be: low, medium, high, critical\n\nIMPORTANT: You MUST call this function before providing legal information about a case.\nThis ensures you have the latest stored facts and can reference them accurately.`,\n\n  params: {\n    type: 'object' as const,\n    properties: {\n      caseId: {\n        type: 'number' as const,\n        description: 'The case ID to load facts for',\n      },\n      factType: {\n        type: 'string' as const,\n        description: 'Optional: Filter by factCategory (timeline, evidence, witness, location, communication, other)',\n      },\n    },\n    required: ['caseId'],\n  },\n\n  /**\n   * Handler that executes when AI calls get_case_facts\n   * Calls IPC handler (facts:get) to retrieve facts from database\n   */\n  handler: async (params: {\n    caseId: number;\n    factType?: string;\n  }): Promise<{ success: boolean; facts?: CaseFact[]; count?: number; error?: string }> => {\n    try {\n      // Validate factType if provided\n      if (params.factType) {\n        const validFactTypes = ['timeline', 'evidence', 'witness', 'location', 'communication', 'other'];\n        if (!validFactTypes.includes(params.factType)) {\n          return {\n            success: false,\n            error: `Invalid factType: ${params.factType}. Must be one of: ${validFactTypes.join(', ')}`,\n          };\n        }\n      }\n\n      // Note: This handler will be called in main process context during streaming\n      // The actual IPC call will be made when integrated with IntegratedAIService\n      // For now, return structure for AI to see (integration TBD)\n\n      return {\n        success: true,\n        facts: [], // Will be populated when integrated\n        count: 0,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error loading facts',\n      };\n    }\n  },\n};\n\n/**\n * Export all AI functions for use with LlamaChatSession\n *\n * Usage in IntegratedAIService:\n * ```ts\n * import { LlamaChatSession } from 'node-llama-cpp';\n * import { aiFunctions } from './ai-functions.js';\n *\n * const chatSession = new LlamaChatSession({\n *   contextSequence,\n *   systemPrompt,\n * });\n *\n * await chatSession.prompt(userPrompt, {\n *   functions: aiFunctions,  // Enable function calling\n *   onTextChunk: (chunk) => onToken(chunk),\n * });\n * ```\n */\nexport const aiFunctions = {\n  store_case_fact: storeCaseFactDefinition,\n  get_case_facts: getCaseFactsDefinition,\n};\n","usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\test-utils\\database-test-helper.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\test-utils\\setup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\test-utils\\test-utils.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\types\\ai.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\types\\electron.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\types\\ipc.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\utils\\error-logger.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\utils\\error-logger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\utils\\exportToPDF.ts","messages":[],"suppressedMessages":[{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":29,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":29,"endColumn":35,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":50,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":50,"endColumn":53,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\src\\utils\\logger.ts","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":43,"column":5,"nodeType":"MemberExpression","messageId":"limited","endLine":43,"endColumn":16,"suggestions":[{"fix":{"range":[1141,1374],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":129,"column":5,"nodeType":"MemberExpression","messageId":"limited","endLine":129,"endColumn":17,"suggestions":[{"fix":{"range":[3376,3407],"text":""},"messageId":"removeConsole","data":{"propertyName":"info"},"desc":"Remove the console.info()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement. Only these console methods are allowed: warn, error.","line":153,"column":5,"nodeType":"MemberExpression","messageId":"limited","endLine":153,"endColumn":18,"suggestions":[{"fix":{"range":[3926,3958],"text":""},"messageId":"removeConsole","data":{"propertyName":"debug"},"desc":"Remove the console.debug()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"indent","url":"https://eslint.style/rules/indent"}}]}},{"ruleId":"comma-dangle","replacedBy":["@stylistic/comma-dangle"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-dangle","url":"https://eslint.style/rules/comma-dangle"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"eol-last","replacedBy":["@stylistic/eol-last"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"eol-last","url":"https://eslint.style/rules/eol-last"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"space-before-function-paren","replacedBy":["@stylistic/space-before-function-paren"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"11.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-function-paren","url":"https://eslint.style/rules/space-before-function-paren"}}]}}]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\tests\\e2e\\playwright.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\tests\\e2e\\setup\\electron-setup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\tests\\e2e\\setup\\fixtures.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\tests\\e2e\\setup\\global-setup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\tests\\e2e\\setup\\global-teardown.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\tests\\e2e\\setup\\test-database.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\tests\\e2e\\specs\\ai-chat.e2e.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\tests\\e2e\\specs\\case-management.e2e.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\tests\\e2e\\specs\\evidence-upload.e2e.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\tests\\e2e\\specs\\facts-tracking.e2e.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\sava6\\Desktop\\Justice Companion\\tests\\e2e\\specs\\user-journey.e2e.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]
