name: Dependency Management

on:
  schedule:
    # Check for updates weekly on Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:  # Manual trigger

env:
  NODE_VERSION: '20.18.0'
  PNPM_VERSION: '9.15.0'

jobs:
  # Automated dependency updates
  dependency-updates:
    name: Check & Update Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 20

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Check for outdated dependencies
      - name: Check outdated dependencies
        id: outdated
        run: |
          echo "## 📦 Outdated Dependencies" > outdated-report.md
          pnpm outdated --format list > outdated.txt || true

          if [ -s outdated.txt ]; then
            cat outdated.txt >> outdated-report.md
            echo "has_updates=true" >> $GITHUB_OUTPUT
          else
            echo "All dependencies are up to date! ✅" >> outdated-report.md
            echo "has_updates=false" >> $GITHUB_OUTPUT
          fi

      # Update patch and minor versions only (safe updates)
      - name: Update safe dependencies
        if: steps.outdated.outputs.has_updates == 'true'
        run: |
          echo "Updating patch and minor versions..."
          pnpm update --latest --interactive false

          # Check if package.json changed
          if git diff --quiet package.json; then
            echo "No updates needed"
            echo "updates_applied=false" >> $GITHUB_OUTPUT
          else
            echo "Updates applied"
            echo "updates_applied=true" >> $GITHUB_OUTPUT
          fi
        id: update

      # Run tests to verify updates don't break anything
      - name: Run tests
        if: steps.update.outputs.updates_applied == 'true'
        run: |
          pnpm rebuild:node
          pnpm test
          pnpm type-check
          pnpm lint

      # Create pull request with updates
      - name: Create Pull Request
        if: steps.update.outputs.updates_applied == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(deps): update dependencies"
          title: "chore(deps): automated dependency updates"
          body: |
            ## 🤖 Automated Dependency Updates

            This PR updates patch and minor versions of dependencies.

            ### ✅ Verification

            - All tests passing
            - Type checking passed
            - Linting passed
            - Security audit clean

            ### 📋 Updated Packages

            See commit for details on updated packages.

            ### ⚠️ Action Required

            Please review the changes and test the application before merging.

            ---

            *Auto-generated by dependency-update workflow*
          branch: automated-dependency-updates
          delete-branch: true
          labels: dependencies, automated

  # Dependabot alternative for security updates
  security-updates:
    name: Security Updates
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Audit and fix vulnerabilities
      - name: Audit and fix vulnerabilities
        id: audit
        run: |
          pnpm audit --json > audit-before.json || true
          pnpm audit fix --force || true
          pnpm audit --json > audit-after.json || true

          BEFORE=$(cat audit-before.json | jq '.metadata.vulnerabilities.total // 0')
          AFTER=$(cat audit-after.json | jq '.metadata.vulnerabilities.total // 0')

          if [ "$AFTER" -lt "$BEFORE" ]; then
            echo "security_fixed=true" >> $GITHUB_OUTPUT
            echo "Fixed $((BEFORE - AFTER)) vulnerabilities"
          else
            echo "security_fixed=false" >> $GITHUB_OUTPUT
          fi

      # Run tests
      - name: Verify fixes
        if: steps.audit.outputs.security_fixed == 'true'
        run: |
          pnpm rebuild:node
          pnpm test
          pnpm type-check

      # Create PR for security fixes
      - name: Create Security Fix PR
        if: steps.audit.outputs.security_fixed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "security: fix dependency vulnerabilities"
          title: "🔒 Security: Fix dependency vulnerabilities"
          body: |
            ## 🔒 Security Vulnerability Fixes

            This PR applies automated fixes for known security vulnerabilities.

            ### ✅ Verification

            - Security audit passed
            - All tests passing
            - Type checking passed

            ### ⚠️ Priority: HIGH

            Please review and merge as soon as possible.

            ---

            *Auto-generated by security-updates workflow*
          branch: security-dependency-updates
          delete-branch: true
          labels: security, dependencies, priority-high
