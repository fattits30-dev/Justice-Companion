# Cerberus Guardian Configuration for Justice Companion
# Electron Desktop App with React + TypeScript

guardian:
  # Operating mode
  mode: continuous  # continuous/scheduled/manual

  # Project detection
  project:
    name: Justice Companion
    type: electron-typescript  # Auto-detected
    language: typescript
    framework: electron

  # LLM Configuration - Free Tier for Local Development
  llm:
    # Free tier for local scans (saves money!)
    use_free_tier: true
    free_tier_provider: gemini  # Google Gemini 2.5 Flash (FREE!)

    # Google Gemini (FREE - 1000 requests/day)
    gemini_api_key: "env:GOOGLE_API_KEY"
    gemini_model: gemini-2.5-flash

    # Groq (Backup - also FREE)
    groq_api_key: "env:GROQ_API_KEY"
    groq_model: llama-3.3-70b-versatile

    # OpenAI (for critical issues only)
    # openai_api_key: "env:OPENAI_API_KEY"
    # openai_model: gpt-4o-mini

    # Temperature for code generation
    temperature: 0.1
    max_tokens: 2048

  # First run (initial scan)
  first_run:
    enabled: false  # Already scanned via GitHub Actions
    batch_size: 20

  # Monitoring
  monitoring:
    batch_mode: false
    watch_patterns:
      - "src/**/*.ts"
      - "src/**/*.tsx"
      - "electron/**/*.ts"
      - "tests/**/*.ts"

    ignore_patterns:
      - "node_modules/**"
      - "dist/**"
      - "release/**"
      - ".git/**"
      - "coverage/**"
      - "*.min.js"
      - "*.d.ts"
      - ".claude/**"
      - ".guardian/**"

  # Fix strategy (conservative for local)
  fix_strategy:
    # Hybrid mode: Rule-based fixes auto-apply, AI fixes require approval
    hybrid_mode: true
    safe_auto_apply: true  # Auto-apply linting/formatting
    safe_types:
      - linting
      - formatting
      - import-sorting
      - whitespace

    # AI fixes create preview, not auto-commit
    risky_report_only: true
    risky_types:
      - security
      - refactoring
      - logic-changes

    # Confidence threshold
    confidence_threshold: 85  # 85% confidence minimum

    # Dry run (preview mode)
    dry_run: false  # Set true to preview without applying

  # Issue priorities (what to fix first)
  priorities:
    - security       # Security issues first
    - linting        # Then code quality
    - testing        # Then test coverage
    - refactoring    # Finally refactoring
    - documentation  # And docs

  # Reporting
  reporting:
    enabled: true
    format: markdown
    output_dir: .guardian/reports
    include_metrics: true

    # Report sections
    sections:
      - summary
      - issues_found
      - fixes_applied
      - recommendations
      - metrics

  # Rate limiting
  limits:
    max_fixes_per_hour: 20
    max_api_calls_per_minute: 10
    batch_delay_seconds: 2

  # Git integration
  git:
    auto_commit: false  # Don't auto-commit locally
    commit_message_template: |
      üê∫ Cerberus: {fix_type} fix

      - Fixed {file_count} file(s)
      - Type: {fix_type}
      - Confidence: {confidence}%

      ü§ñ Generated by Cerberus Guardian (Local)

    pr_title_template: "üê∫ Cerberus: {fix_type} fixes"
    pr_body_template: |
      ## Cerberus Guardian Auto-Fix

      **Fix Type:** {fix_type}
      **Files Changed:** {file_count}
      **Confidence:** {confidence}%

      ### Changes:
      {changes_summary}

      ### Testing:
      - [ ] Verify fixes don't break functionality
      - [ ] Run full test suite
      - [ ] Check type-check passes

      ---
      ü§ñ Auto-generated by Cerberus Guardian

  # Justice Companion specific rules
  custom_rules:
    # TypeScript strict mode
    typescript:
      strict: true
      noImplicitAny: true
      strictNullChecks: true

    # Electron security
    electron:
      contextIsolation: true  # Must be enabled
      nodeIntegration: false  # Must be disabled
      enableRemoteModule: false  # Must be disabled

    # React best practices
    react:
      hooks_exhaustive_deps: true
      no_unused_state: true
      prefer_functional_components: true

    # Security for legal data
    security:
      no_hardcoded_secrets: true
      no_eval: true
      no_dangerous_html: true
      require_encryption: true  # For sensitive fields

    # GDPR compliance
    gdpr:
      require_audit_logs: true
      require_consent_tracking: true
      require_data_export: true
      require_data_deletion: true

  # AI model routing (which issues go to which AI)
  tier_routing:
    # Free AI (Gemini) for simple tasks
    free_tier:
      - linting
      - formatting
      - import-sorting
      - code-style
      - documentation

    # Premium AI (if configured) for complex tasks
    premium_tier:
      - security-critical
      - data-encryption
      - authentication
      - authorization
      - complex-refactoring

  # Testing (if Docker available)
  testing:
    enabled: false  # Disable Docker testing for local runs
    docker_image: node:20-alpine
    test_command: "pnpm test"
    timeout_seconds: 300

  # Metrics tracking
  metrics:
    track_fix_success_rate: true
    track_processing_time: true
    track_cost_savings: true
    track_issues_prevented: true

# Justice Companion specific checks
justice_companion:
  # Database encryption
  database:
    require_encryption_service: true
    encrypted_fields:
      - user_passwords  # Hashed, not encrypted
      - case_details
      - evidence_metadata
      - chat_messages
      - personal_info

  # Authentication
  auth:
    require_session_validation: true
    session_expiry_hours: 24
    require_scrypt_hashing: true

  # Audit logging
  audit:
    require_immutable_logs: true
    require_sha256_chaining: true
    log_all_data_access: true

  # GDPR compliance checks
  gdpr:
    require_consent_management: true
    require_data_portability: true
    require_right_to_erasure: true
    require_audit_trail: true

# End of Justice Companion Guardian Config
