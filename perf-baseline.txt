
> justice-companion@1.0.0 test F:\Justice Companion take 2
> vitest "--reporter=verbose" "--run"

[33mThe CJS build of Vite's Node API is deprecated. See https://vite.dev/guide/troubleshooting.html#vite-cjs-node-api-deprecated for more details.[39m

[1m[7m[36m RUN [39m[27m[22m [36mv2.1.9 [39m[90mF:/Justice Companion take 2[39m

 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mgetCurrentUserIdFromSession[2m > [22mshould return userId when session is valid
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mgetCurrentUserIdFromSession[2m > [22mshould throw error when no active session
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mgetCurrentUserIdFromSession[2m > [22mshould throw error when session is invalid (not in database)
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mgetCurrentUserIdFromSession[2m > [22mshould throw error when session is expired
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mCase Handlers Authorization[2m > [22mCASE_CREATE[2m > [22mshould auto-assign userId from session when creating case
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mCase Handlers Authorization[2m > [22mCASE_CREATE[2m > [22mshould throw error if no active session
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mCase Handlers Authorization[2m > [22mCASE_GET_BY_ID[2m > [22mshould allow access when user owns the case
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mCase Handlers Authorization[2m > [22mCASE_GET_BY_ID[2m > [22mshould throw error when user does not own the case
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mCase Handlers Authorization[2m > [22mCASE_GET_ALL[2m > [22mshould return only cases owned by current user
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mCase Handlers Authorization[2m > [22mCASE_GET_ALL[2m > [22mshould return empty array if user has no cases
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mCase Handlers Authorization[2m > [22mCASE_UPDATE[2m > [22mshould allow update when user owns the case
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mCase Handlers Authorization[2m > [22mCASE_UPDATE[2m > [22mshould throw error when user tries to update another user case
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mCase Handlers Authorization[2m > [22mCASE_DELETE[2m > [22mshould allow delete when user owns the case
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mCase Handlers Authorization[2m > [22mCASE_DELETE[2m > [22mshould throw error when user tries to delete another user case
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mCase Handlers Authorization[2m > [22mCASE_GET_STATISTICS[2m > [22mshould calculate statistics for current user cases only
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mEvidence Handlers Authorization[2m > [22mEVIDENCE_CREATE[2m > [22mshould allow evidence creation when user owns the parent case
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mEvidence Handlers Authorization[2m > [22mEVIDENCE_CREATE[2m > [22mshould throw error when user tries to add evidence to another user case
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mEvidence Handlers Authorization[2m > [22mEVIDENCE_GET_BY_ID[2m > [22mshould allow access when user owns the parent case
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mEvidence Handlers Authorization[2m > [22mEVIDENCE_GET_BY_ID[2m > [22mshould throw error when user does not own the parent case
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mEvidence Handlers Authorization[2m > [22mEVIDENCE_GET_ALL[2m > [22mshould return only evidence from user-owned cases
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mConversation Handlers Authorization[2m > [22mCONVERSATION_CREATE[2m > [22mshould verify case ownership when caseId is provided
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mConversation Handlers Authorization[2m > [22mCONVERSATION_CREATE[2m > [22mshould skip verification when caseId is null (general chat)
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mConversation Handlers Authorization[2m > [22mCONVERSATION_GET[2m > [22mshould allow access when conversation has caseId and user owns case
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mConversation Handlers Authorization[2m > [22mCONVERSATION_GET[2m > [22mshould throw error when conversation has null caseId (security gap)
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mConversation Handlers Authorization[2m > [22mCONVERSATION_GET_ALL[2m > [22mshould return only conversations from user-owned cases
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mGDPR Handlers Authorization[2m > [22mGDPR_EXPORT_USER_DATA[2m > [22mshould export only current user data, not all users
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mGDPR Handlers Authorization[2m > [22mGDPR_EXPORT_USER_DATA[2m > [22mshould filter conversations to user-owned cases only
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mGDPR Handlers Authorization[2m > [22mGDPR_DELETE_USER_DATA[2m > [22mshould delete only current user data using WHERE clause
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mGDPR Handlers Authorization[2m > [22mGDPR_DELETE_USER_DATA[2m > [22mshould NOT delete all data without WHERE clause
 [32mâœ“[39m src/electron-ipc-authorization.test.ts[2m > [22mGDPR Handlers Authorization[2m > [22mGDPR_DELETE_USER_DATA[2m > [22mshould delete conversations only for user-owned cases
[90mstderr[2m | src/services/AuditLogger.test.ts
[22m[39m[LOGGER INIT] {
  [32m'import.meta.env?.PROD'[39m: [33mfalse[39m,
  [32m'import.meta.env?.DEV'[39m: [33mtrue[39m,
  [32m'import.meta.env?.MODE'[39m: [32m'test'[39m,
  [32m'process.env.NODE_ENV'[39m: [32m'development'[39m,
  isProduction: [33mfalse[39m
}

[90mstderr[2m | src/services/AuthenticationService.test.ts
[22m[39m[LOGGER INIT] {
  [32m'import.meta.env?.PROD'[39m: [33mfalse[39m,
  [32m'import.meta.env?.DEV'[39m: [33mtrue[39m,
  [32m'import.meta.env?.MODE'[39m: [32m'test'[39m,
  [32m'process.env.NODE_ENV'[39m: [32m'development'[39m,
  isProduction: [33mfalse[39m
}

[90mstderr[2m | src/services/AuditLogger.e2e.test.ts
[22m[39m[LOGGER INIT] {
  [32m'import.meta.env?.PROD'[39m: [33mfalse[39m,
  [32m'import.meta.env?.DEV'[39m: [33mtrue[39m,
  [32m'import.meta.env?.MODE'[39m: [32m'test'[39m,
  [32m'process.env.NODE_ENV'[39m: [32m'development'[39m,
  isProduction: [33mfalse[39m
}

 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mcreateCaseFact[2m > [22mshould create a case fact with valid input
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mcreateCaseFact[2m > [22mshould create case facts with different categories
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mcreateCaseFact[2m > [22mshould create case facts with different importance levels
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mcreateCaseFact[2m > [22mshould throw error if factContent is empty
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mcreateCaseFact[2m > [22mshould throw error if factContent exceeds 5000 characters
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mcreateCaseFact[2m > [22mshould accept factContent exactly 5000 characters
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mcreateCaseFact[2m > [22mshould log and rethrow repository errors
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mgetCaseFactById[2m > [22mshould return a case fact by id
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mgetCaseFactById[2m > [22mshould return null if case fact not found
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mgetCaseFactById[2m > [22mshould log and rethrow repository errors
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mgetCaseFactsByCaseId[2m > [22mshould return all case facts for a case
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mgetCaseFactsByCaseId[2m > [22mshould return empty array if no case facts exist
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mgetCaseFactsByCaseId[2m > [22mshould log and rethrow repository errors
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mgetCaseFactsByCategory[2m > [22mshould return case facts filtered by category
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mgetCaseFactsByCategory[2m > [22mshould return empty array if no facts match category
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mgetCaseFactsByCategory[2m > [22mshould log and rethrow repository errors
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mgetCaseFactsByImportance[2m > [22mshould return case facts filtered by importance
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mgetCaseFactsByImportance[2m > [22mshould return empty array if no facts match importance
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mgetCaseFactsByImportance[2m > [22mshould log and rethrow repository errors
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mupdateCaseFact[2m > [22mshould update a case fact with valid input
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mupdateCaseFact[2m > [22mshould update only factContent
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mupdateCaseFact[2m > [22mshould update only importance
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mupdateCaseFact[2m > [22mshould throw error if factContent is empty string
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mupdateCaseFact[2m > [22mshould throw error if factContent exceeds 5000 characters
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mupdateCaseFact[2m > [22mshould throw error if case fact not found
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mupdateCaseFact[2m > [22mshould log and rethrow repository errors
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mdeleteCaseFact[2m > [22mshould delete a case fact successfully
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mdeleteCaseFact[2m > [22mshould log and rethrow repository errors
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mEdge Cases[2m > [22mshould handle special characters in factContent
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mEdge Cases[2m > [22mshould handle unicode characters in factContent
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mEdge Cases[2m > [22mshould handle formatted content with newlines
 [32mâœ“[39m src/features/facts/services/CaseFactsService.test.ts[2m > [22mCaseFactsService[2m > [22mEdge Cases[2m > [22mshould handle dates and timestamps in factContent
 [32mâœ“[39m src/electron-ipc-handlers.test.ts[2m > [22mIPC Handlers[2m > [22mCase Handlers[2m > [22mCASE_CREATE[2m > [22mshould create case and return success with data
 [32mâœ“[39m src/electron-ipc-handlers.test.ts[2m > [22mIPC Handlers[2m > [22mCase Handlers[2m > [22mCASE_CREATE[2m > [22mshould handle validation errors
 [32mâœ“[39m src/electron-ipc-handlers.test.ts[2m > [22mIPC Handlers[2m > [22mCase Handlers[2m > [22mCASE_CREATE[2m > [22mshould handle database errors
 [32mâœ“[39m src/electron-ipc-handlers.test.ts[2m > [22mIPC Handlers[2m > [22mCase Handlers[2m > [22mCASE_GET_BY_ID[2m > [22mshould return case when found
 [32mâœ“[39m src/electron-ipc-handlers.test.ts[2m > [22mIPC Handlers[2m > [22mCase Handlers[2m > [22mCASE_GET_BY_ID[2m > [22mshould return null when case not found
 [32mâœ“[39m src/electron-ipc-handlers.test.ts[2m > [22mIPC Handlers[2m > [22mCase Handlers[2m > [22mCASE_GET_BY_ID[2m > [22mshould handle errors
 [32mâœ“[39m src/elec